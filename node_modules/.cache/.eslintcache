[{"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/index.tsx":"1","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/App.tsx":"2","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/redux/store.ts":"3","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/Routes.tsx":"4","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/redux/casper/casperSlice.ts":"5","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/walletAuthenticationSlice.ts":"6","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/index.ts":"7","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/Withdrawals.tsx":"8","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/header/header.tsx":"9","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/pages/CasperSwap.tsx":"10","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/WalletAuthenticationInterfaces.ts":"11","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/redux/casper/casperActions.ts":"12","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/network.ts":"13","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/web3Helper.ts":"14","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/stringUtils.ts":"15","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/index.ts":"16","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/index.ts":"17","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/dialogs/ConfirmationDialog.tsx":"18","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/dialogs/AddressSelector.tsx":"19","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/dialogs/TxProcessingDialog.tsx":"20","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/connect-wallet/ConnectWalletDialog.tsx":"21","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/stringParser.ts":"22","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/client/index.ts":"23","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/walletApplicationWrapperInterfaces.ts":"24","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/walletApplicationWrapper.tsx":"25","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/wallet-connector.tsx":"26","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/redux/walletApplicationWrapperActions.ts":"27","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/redux/walletConnectorActions.ts":"28","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/redux/walletConnectorSlice.ts":"29","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/redux/walletApplicationWrapperSlice.ts":"30","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/walletAuthenticationActions.ts":"31","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/walletConnectorInterfaces.ts":"32","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/web3React/connectors.ts":"33","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/pages/CasperAddLiquidity.tsx":"34"},{"size":755,"mtime":1708521060642,"results":"35","hashOfConfig":"36"},{"size":868,"mtime":1708521060635,"results":"37","hashOfConfig":"36"},{"size":1219,"mtime":1708521060644,"results":"38","hashOfConfig":"36"},{"size":742,"mtime":1708521060635,"results":"39","hashOfConfig":"36"},{"size":1944,"mtime":1703678328385,"results":"40","hashOfConfig":"36"},{"size":2502,"mtime":1688388176131,"results":"41","hashOfConfig":"36"},{"size":133,"mtime":1688388176127,"results":"42","hashOfConfig":"36"},{"size":10335,"mtime":1708521160992,"results":"43","hashOfConfig":"36"},{"size":7085,"mtime":1708521060641,"results":"44","hashOfConfig":"36"},{"size":22568,"mtime":1708521187753,"results":"45","hashOfConfig":"36"},{"size":729,"mtime":1688388176129,"results":"46","hashOfConfig":"36"},{"size":1981,"mtime":1708521060643,"results":"47","hashOfConfig":"36"},{"size":3472,"mtime":1708521060644,"results":"48","hashOfConfig":"36"},{"size":1282,"mtime":1708521060645,"results":"49","hashOfConfig":"36"},{"size":238,"mtime":1708521060645,"results":"50","hashOfConfig":"36"},{"size":197,"mtime":1688388176130,"results":"51","hashOfConfig":"36"},{"size":285,"mtime":1688388176127,"results":"52","hashOfConfig":"36"},{"size":4938,"mtime":1708521060641,"results":"53","hashOfConfig":"36"},{"size":1184,"mtime":1688388176133,"results":"54","hashOfConfig":"36"},{"size":830,"mtime":1688388176133,"results":"55","hashOfConfig":"36"},{"size":1536,"mtime":1702920575448,"results":"56","hashOfConfig":"36"},{"size":499,"mtime":1708521032897,"results":"57","hashOfConfig":"36"},{"size":879,"mtime":1708521060639,"results":"58","hashOfConfig":"36"},{"size":3719,"mtime":1688388176128,"results":"59","hashOfConfig":"36"},{"size":4642,"mtime":1703678328383,"results":"60","hashOfConfig":"36"},{"size":7216,"mtime":1708521060640,"results":"61","hashOfConfig":"36"},{"size":3934,"mtime":1688388176127,"results":"62","hashOfConfig":"36"},{"size":690,"mtime":1688388176130,"results":"63","hashOfConfig":"36"},{"size":2243,"mtime":1689599604041,"results":"64","hashOfConfig":"36"},{"size":2122,"mtime":1688388176127,"results":"65","hashOfConfig":"36"},{"size":2122,"mtime":1688388176131,"results":"66","hashOfConfig":"36"},{"size":812,"mtime":1689596068552,"results":"67","hashOfConfig":"36"},{"size":228,"mtime":1688388176132,"results":"68","hashOfConfig":"36"},{"size":14040,"mtime":1708521060642,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hsgj5i",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/index.tsx",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/App.tsx",["175","176"],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/redux/store.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/Routes.tsx",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/redux/casper/casperSlice.ts",[],[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/walletAuthenticationSlice.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/index.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/Withdrawals.tsx",["177","178","179","180","181","182","183"],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/header/header.tsx",["184","185","186","187","188","189","190","191","192","193","194"],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/pages/CasperSwap.tsx",["195","196","197","198","199","200","201","202","203","204","205","206","207"],[],"import { useEffect, useState } from \"react\";\nimport { FButton, FCard, FGrid, FGridItem, FInputText, FItem, FTypo } from \"ferrum-design-system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStakingInfo } from \"../utils/DateUtil\";\nimport { connectWallet, connectWallet as connectWalletDispatch } from '../redux/casper/casperActions';\nimport { useHistory, useParams } from \"react-router\";\nimport './layout.scss';\nimport { CasperServiceByJsonRPC, CLPublicKey, CLValue, \n  CLValueBuilder, \n  decodeBase16, \n  DeployUtil,\n  RuntimeArgs,\n  Signer,\n  CasperClient\n} from \"casper-js-sdk\";\nimport toast from \"react-hot-toast\";\nimport TxProcessingDialog from \"../dialogs/TxProcessingDialog\";\nimport ConfirmationDialog from \"../dialogs/ConfirmationDialog\";\nimport { MetaMaskConnector } from \"../components/connector\";\nimport { ConnectWalletDialog } from \"../utils/connect-wallet/ConnectWalletDialog\";\nimport { crucibleApi } from \"../client\";\nimport { Web3Helper } from \"../utils/web3Helper\";\nimport { networksToChainIdMap } from \"../utils/network\";\nimport { setContractHash } from \"../utils/stringParser\";\n\nconst RPC_API = \"https://casper-proxy-app-03c23ef9f855.herokuapp.com?url=https://rpc.mainnet.casperlabs.io/rpc\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\n\nexport const CasperSwap = () => {\n  const navigate = useHistory();\n  const { bridgePoolAddress }: any = useParams();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState();\n  const [isSwap, setIsSwap] = useState(false);\n\n  const [targetNetwork, setTargetNetwork] = useState('30');\n  const [targetToken, setTargetToken] = useState('Ferrum_Test_Token');\n  const [processMsg, setProcessMsg] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const connection = useSelector((state: any) => state.casper.connect)\n\n  const { connect: { config, selectedAccount, isWalletConnected, signedAddresses, network } } = useSelector((state: any) => state.casper);\n\n  useEffect(() => {\n    //@ts-ignore\n    const casperWalletProvider = window.CasperWalletProvider;  \n    const provider = casperWalletProvider();\n    return provider\n  }, [])\n\n  const { isConnected, isConnecting, currentWalletNetwork, walletAddress, networkClient } =\n    useSelector((state: any) => state.casper.walletConnector);\n\n  const performSwapReverse = async () => {\n    //@ts-ignore\n    const networkData = networksToChainIdMap[currentWalletNetwork]\n    console.log(networkData)\n    if (\n      isWalletConnected &&\n      selectedAccount\n    ) {\n      setIsSwap(false)\n      //@ts-ignore\n      const casperWalletProvider = await window.CasperWalletProvider;    \n      const provider = casperWalletProvider();\n      setLoading(true)\n      try {\n        if (amount && Number(amount) > 0) {\n          const publicKeyHex = selectedAccount?.address;\n          const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n\n          const deployParams = new DeployUtil.DeployParams(\n            senderPublicKey,\n            'casper'\n          );\n\n          const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(Number(amount) * 100),\n            \"token_address\": CLValueBuilder.string('contract-package-wasm5fe4b52b2b1a3a0eebdc221ec9e290df1535ad12a7fac37050095201f449acc4'),\n            \"target_network\": CLValueBuilder.u256(targetNetwork),\n            \"target_token\": CLValueBuilder.string(networkData?.targetToken || targetToken),\n            \"target_address\": CLValueBuilder.string(walletAddress),\n          });\n\n          const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(\n            decodeBase16('e0f1bcfbbc1554dc0cbd1316cc1658645b58898aa5add056985f9d6cb0f6f75b'),\n            'swap_reverse',\n            args\n          );\n\n          const payment = DeployUtil.standardPayment(9000000000);\n\n          const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n\n          const deployJson: any = DeployUtil.deployToJson(deploy);\n        \n          provider.sign(JSON.stringify(deployJson), publicKeyHex).then(async (signedDeployJson: any) => {\n            const signedDeploy = DeployUtil.setSignature(\n              deploy,\n              signedDeployJson.signature,\n              CLPublicKey.fromHex(publicKeyHex)\n            );\n            // const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n            if (signedDeploy) {\n              const res = await casperClient.putDeploy(signedDeploy);\n              console.log(res, 'resres');\n              setProcessMsg(res)\n              setLoading(false)\n              setShowConfirmation(true)\n            }\n            \n          });\n          // navigate.push(`/${config._id}`);\n          //toast.success(`${amount} tokens are staked successfully`);\n        } else {\n          toast.error(\"Amount must be greater than 0\");\n        }\n      } catch (e) {\n        toast.error(\"An error occured please see console for details\");\n      } finally {\n        //setLoading(false)\n      }\n\n    } else {\n      navigate.push(`/${config._id}`);\n    }\n  };\n\n  console.log(currentWalletNetwork, 'currentWalletNetworkcurrentWalletNetwork')\n  async function swapEvm():Promise<any>{\n    //@ts-ignore\n    const networkData = networksToChainIdMap[currentWalletNetwork]\n    const Api = new crucibleApi()\n    await Api.signInToServer(walletAddress)\n\t\tconst res = await Api.gatewayApi({\n            command: 'swapGetTransaction', data: {\n              amount: amount,\n              targetCurrency: `CSPR:222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473`,\n              currency: networkData?.currency || 'BSC:0xfe00ee6f00dd7ed533157f6250656b4e007e7179'\n          },\n\t\t\tparams: [] });\n    \n    if (res.data.requests) {\n      const helper = new Web3Helper(networkClient)\n      const tx = await helper.sendTransactionAsync(\n        dispatch,\n        res.data.requests\n      )\n      if (tx) {\n\n        const res = await Api.gatewayApi({\n          command: 'logEvmAndNonEvmTransaction', data: {\n            \"id\": tx.split(\"|\")[0],\n            \"sendNetwork\": networkData?.sendNetwork,\n            \"sendAddress\":  `${walletAddress}`,\n            \"receiveAddress\": `${selectedAccount?.address}`,\n            \"sendCurrency\": networkData?.currency || \"BSC:0xfe00ee6f00dd7ed533157f6250656b4e007e7179\",\n            \"sendAmount\": amount,\n            \"receiveCurrency\": `CSPR:222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473`,\n        },\n        params: [] });\n        setShowConfirmation(true)\n      }\n    }\n\t}\n\n  async function AccountInformation() {\n    //@ts-ignore\n    const casperWalletProvider = await window.CasperWalletProvider;    \n    const provider = casperWalletProvider();\n    const isConnected = await provider.isConnected();\n\n    if (isConnected) {\n      try {\n        const publicKey = await provider.getActivePublicKey();\n        //textAddress.textContent += publicKey;\n        const latestBlock = await casperService.getLatestBlockInfo();\n\n        // const root = await casperService.getStateRootHash(latestBlock?.block?.header?.state_root_hash);\n\n        await connectWalletDispatch([{\n          \"address\": publicKey\n        }])(dispatch)\n        const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(latestBlock?.block?.header?.state_root_hash || '', CLPublicKey.fromHex(publicKey));\n        console.log(balanceUref, 'balanceUrefbalanceUref')\n        if (latestBlock?.block?.header?.state_root_hash) {\n          const balance = await casperService.getAccountBalance(latestBlock?.block?.header?.state_root_hash, balanceUref);\n        }\n\n        console.log('hellooo')\n\n        const info = await casperService.getDeployInfo(\n          'aaa631f3491be84ebd92485f95e0d311288fc6f4e529756b4da63870eee8a416'\n        )\n\n        // @ts-ignore\n        const infoArguments = (info.deploy.session.ModuleBytes.args || []).find(\n          (e: any) => e[0] === 'erc20_contract_hash'\n        )\n\n        if (infoArguments) {\n          const token = infoArguments[1].parsed.split('-')[1]\n\n\n          const tokenName = await casperService.getBlockState(\n            //@ts-ignore\n            latestBlock?.block?.header?.state_root_hash,\n            `hash-${token}`,\n            ['name']\n          )\n  \n          const tokenSymbol = await casperService.getBlockState(\n             //@ts-ignore\n             latestBlock?.block?.header?.state_root_hash,\n             `hash-${token}`,\n             ['symbol']\n          )\n  \n\n          if(info.deploy.session) {\n            // @ts-ignore\n            configLoaded({\n              // @ts-ignore\n              config: info.deploy.session.ModuleBytes.args,\n              tokenInfo: {\n                tokenSymbol: tokenSymbol.CLValue?.data,\n                tokenName: tokenName.CLValue?.data\n              }\n            })(dispatch);\n            //@ts-ignore\n            signed(info.deploy.approvals)(dispatch)\n            //@ts-ignore\n          }\n        }\n        \n      } catch (error: unknown) {\n        if (error?.toString().includes('params')) return\n        toast.error(`An error occured Error: ${error}`);\n      }\n    }\n  }\n\n  const connectWallet = async () => {\n    //@ts-ignore\n    const casperWalletProvider = await window.CasperWalletProvider;\n    \n    const provider = casperWalletProvider();\n\n    const isConnected = await provider.isConnected();\n\n    if (isConnected) {\n      await AccountInformation();\n    }   \n  };\n\n  const performSwap = async () => {\n    //@ts-ignore\n    const networkData = networksToChainIdMap[currentWalletNetwork]\n    if (\n      isWalletConnected &&\n      selectedAccount\n    ) {\n      //@ts-ignore\n      const casperWalletProvider = await window.CasperWalletProvider;    \n      const provider = casperWalletProvider();\n      setLoading(true)\n      try {\n        if (amount && Number(amount) > 0) {\n          const publicKeyHex = selectedAccount?.address;\n          const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n\n          const deployParams = new DeployUtil.DeployParams(\n            senderPublicKey,\n            'casper'\n          );\n\n          const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(Number(amount) * 100),\n            \"token_address\": CLValueBuilder.string('contract-package-wasm5fe4b52b2b1a3a0eebdc221ec9e290df1535ad12a7fac37050095201f449acc4'),\n            \"target_network\": CLValueBuilder.u256(targetNetwork),\n            \"target_token\": CLValueBuilder.string(networkData?.targetToken || targetToken),\n          });\n\n          const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(\n            decodeBase16('e0f1bcfbbc1554dc0cbd1316cc1658645b58898aa5add056985f9d6cb0f6f75b'),\n            'swap',\n            args\n          );\n\n          const payment = DeployUtil.standardPayment(5000000000);\n\n          const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n\n          const deployJson: any = DeployUtil.deployToJson(deploy);\n        \n          provider.sign(JSON.stringify(deployJson), publicKeyHex).then(async (signedDeployJson: any) => {\n            const signedDeploy = DeployUtil.setSignature(\n              deploy,\n              signedDeployJson.signature,\n              CLPublicKey.fromHex(publicKeyHex)\n            );\n            // const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n            if (signedDeploy) {\n              const res = await casperClient.putDeploy(signedDeploy);\n              console.log(res, 'resres');\n              setProcessMsg(res)\n              setLoading(false)\n              setShowConfirmation(true)\n            }\n            \n          });\n          // navigate.push(`/${config._id}`);\n          //toast.success(`${amount} tokens are staked successfully`);\n        } else {\n          toast.error(\"Amount must be greater than 0\");\n        }\n      } catch (e) {\n        toast.error(\"An error occured please see console for details\");\n        navigate.push(`/${config?._id}`);\n      } finally {\n        //setLoading(false)\n      }\n\n    } else {\n      navigate.push(`/${config._id}`);\n    }\n  };\n\n  const performCasperApproval = async () => {\n    if (\n      isWalletConnected &&\n      selectedAccount\n    ) {\n      //@ts-ignore\n      const casperWalletProvider = await window.CasperWalletProvider;    \n      const provider = casperWalletProvider();\n      try {\n        // (selectedAccount?.address, Number(amount));\n        const publicKeyHex = selectedAccount?.address;\n        const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n\n        const deployParams = new DeployUtil.DeployParams(\n        senderPublicKey,\n        'casper'\n        );\n\n        const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(Number(5000000000000000).toFixed()),\n            'spender': setContractHash(`hash-a690c81a73e604c90541b05214b512181cfe457ae393ba68e74b111f66cde3d5`)\n          });\n\n        const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(\n        decodeBase16('31dbbadf2b6e06be54d834da408469783abe63e404ede27d83e900ed2886f1b6'),\n        'approve',\n        args\n        );\n\n        const payment = DeployUtil.standardPayment(2000000000);\n\n        const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n\n        const deployJson: any = DeployUtil.deployToJson(deploy);\n    \n        provider.sign(JSON.stringify(deployJson), publicKeyHex).then(async (signedDeployJson: any) => {\n            const signedDeploy = DeployUtil.setSignature(\n              deploy,\n              signedDeployJson.signature,\n              CLPublicKey.fromHex(publicKeyHex)\n            );\n\n            if (signedDeploy) {\n                const res = await casperClient.putDeploy(signedDeploy);\n                console.log(res, 'resres');\n                if (res) {\n                \n                }\n                setProcessMsg(res)\n                setLoading(false)\n                setShowConfirmation(true)\n            }\n        });\n          // navigate.push(`/${config._id}`);\n        //toast.success(`${amount} tokens are staked successfully`);\n        \n        } catch (e) {\n          console.log(\"ERROR : \", e);\n            toast.error(\"An error occured please see console for details\");\n            // navigate.push(`/${config._id}`);\n        } finally {\n        //setLoading(false)\n        }\n\n    } else {\n        navigate.push(`/${config._id}`);\n    }\n  };\n\n  //@ts-ignore\n  const networkData = networksToChainIdMap[currentWalletNetwork]\n\n  return (\n    <>\n      <FCard className={\"card-staking f-mb-2\"}>\n        <FGrid>\n          <FTypo size={18} align={\"center\"} className={\"f-mb--5 f-mt--7\"}>\n            SWAP FROM {networkData?.chain || 'BSC'} TO CASPER\n          </FTypo>\n          <FGridItem alignX={\"center\"} size={[8, 8, 12]} className=\"f-m-auto f-mb-1\">\n            <FItem align={\"center\"}>\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"AMOUNT TO SWAP\"}\n                placeholder={\"0\"}\n                value={amount}\n                data-testid={\"bsctocasper_input\"}\n                onChange={(e: any) => {\n                  e.preventDefault();\n                  const re = /^-?\\d*\\.?\\d*$/;\n                  if (e.target.value === \"\" || re.test(e.target.value)) {\n                    setAmount(e.target.value);\n                  }\n                }}\n                postfix={\n                  <FTypo className={\"f-pr-1\"} color=\"#dab46e\">\n                    TOKEN\n                  </FTypo>\n                }\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"Target Network\"}\n                disabled\n                value={'CASPER'}\n                onChange={(e: any) => {}}\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"Target Token\"}\n                disabled\n                value={targetToken}\n                onChange={(e: any) => {}}\n              />\n              {\n                isConnected ?\n                (\n                  <FButton \n                    title={\"SWAP\"}\n                    className=\"w-100 f-mt-2\"\n                    data-testid={'swap-casper-button'}\n                    onClick={() => swapEvm()}\n                  />\n                )\n                : (\n                  <div className=\"w-100 f-mt-2\">\n                    <MetaMaskConnector.WalletConnector\n                      WalletConnectView={FButton}\n                      WalletConnectModal={ConnectWalletDialog}\n                      isAuthenticationNeeded={false}\n                      WalletConnectViewProps={{ className: \"w-100\" }}\n                    />\n                  </div>\n                )\n              }\n            </FItem>\n          </FGridItem>\n        </FGrid>\n        <ConfirmationDialog\n          amount={amount}\n          onHide={() => {\n            setShowConfirmation(false)\n            setProcessMsg(\"\")\n          }} \n          transaction={processMsg}\n          message={'Transaction sent to network and is processing.'}\n          show={showConfirmation}\n          isSwap={true}\n          network={networkData?.sendNetwork}\n        />\n        <TxProcessingDialog onHide={() =>setLoading(false)} message={ processMsg || \"Transaction Processing....\"} show={loading}/>\n      </FCard>\n      <div style={{\"zIndex\": isConnected ? 1 : 0, \"width\": \"100%\"}}>\n        <FCard className={`card-staking f-mb-2`}>\n          <FGrid alignX={\"center\"} className=\"f-mb-1\">\n            <FTypo size={18} align={\"center\"} className={\"f-mb-14 f-mt--7\"}>\n              SWAP FROM CASPER TO {networkData?.chain || 'BSC'}\n            </FTypo>\n            <FGridItem alignX={\"center\"} size={[8, 8, 12]} className=\"f-m-auto f-mb-1\">\n              <FItem align={\"center\"}>    \n                <FInputText\n                  className={\"f-mt-2\"}\n                  label={\"AMOUNT TO SWAP \"}\n                  data-testid={\"caspertoevm_input\"}\n                  placeholder={\"0\"}\n                  value={amount}\n                  onChange={(e: any) => {\n                    e.preventDefault();\n                    const re = /^-?\\d*\\.?\\d*$/;\n                    if (e.target.value === \"\" || re.test(e.target.value)) {\n                      setAmount(e.target.value);\n                    }\n                  }}\n                  postfix={\n                    <FTypo className={\"f-pr-1\"} color=\"#dab46e\">\n                      TOKEN\n                    </FTypo>\n                  }\n                />\n                <FInputText\n                  className={\"f-mt-2\"}\n                  label={\"Target Network\"}\n                  disabled\n                  value={networkData?.chain}\n                  onChange={(e: any) => {}}\n                />\n                <FInputText\n                  className={\"f-mt-2\"}\n                  label={\"Target Token\"}\n                  disabled\n                  value={targetToken}\n                  onChange={(e: any) => {}}\n                />\n                {\n                  (connection.isWalletConnected && isConnected) && (\n                    <>\n                      <FButton \n                        title={\"SWAP\"}\n                        className=\"w-100 f-mt-2\"\n                        onClick={() => performSwap()}\n                      />\n                      <div className=\"w-100 f-mt-2 flex jc jc-end\" style={{\"cursor\": \"pointer\"}} onClick={() => performCasperApproval()}>Approve</div>\n                    </>\n                  )\n                }\n                {\n                  !connection.isWalletConnected ? \n                    <FButton title={\"Connect Casper Signer\"} className=\"w-100 f-mt-2\" onClick={() => connectWallet()} />\n                  : !isConnected ? (\n                      <div className=\"w-100 f-mt-2\">\n                        <MetaMaskConnector.WalletConnector\n                          WalletConnectView={FButton}\n                          WalletConnectModal={ConnectWalletDialog}\n                          isAuthenticationNeeded={false}\n                          WalletConnectViewProps={{ className: \"w-100\" }}\n                        />\n                      </div>\n                    )\n                  : <></>\n                }\n                {\n                  //     <FButton\n                  //       title={stakingInfo.isStakingOpen ? \"Stake\" : stakingInfo.isEarlyWithdraw ? \"Early Withdraw\" : stakingInfo.isWithdrawOpen ? \"Maturity Withdraw\" : \"Refresh\"}\n                  //       className=\"w-100 f-mt-2\"\n                  //       onClick={() => {\n                  //         // console.log(\"staking\");\n                  //         // dispatch(algorandActions.shouldStake());\n                  //         if (getStakingInfo(connection?.config?.stakingEnds, connection?.config?.stakingStarts, connection?.config?.withdrawStarts, connection?.config?.withdrawEnds).isStakingOpen) {\n                  //           // navigate.push(`/${stakingId}/submit-stake`);\n                  //         } else if (\n                  //           getStakingInfo(connection?.config?.stakingEnds, connection?.config?.stakingStarts, connection?.config?.withdrawStarts, connection?.config?.withdrawEnds).isEarlyWithdraw ||\n                  //           getStakingInfo(connection?.config?.stakingEnds, connection?.config?.stakingStarts, connection?.config?.withdrawStarts, connection?.config?.withdrawEnds).isWithdrawOpen\n                  //         ) {\n                  //           // console.log(stakingId, 'withdrawwww')\n                  //           // navigate.push(`/${stakingId}/submit-withdraw`);\n                  //         } else {\n                  //           window.location.reload();\n                  //         }\n                  //       }}\n                  //     />\n                  //   )\n                  // \n                }\n              </FItem>\n            </FGridItem>\n          </FGrid>\n        </FCard>\n      </div>\n      <ConfirmationDialog\n          amount={amount}\n          onHide={() => {\n            setShowConfirmation(false)\n            setProcessMsg(\"\")\n            console.log(isSwap)\n          }} \n          transaction={processMsg}\n          message={'Transaction sent to network and is processing.'}\n          show={showConfirmation}\n          isSwap={isSwap}\n          network={networkData?.sendNetwork}\n        />\n      <TxProcessingDialog onHide={() =>setLoading(false)} message={ processMsg || \"Transaction Processing....\"} show={loading}/>\n    </>\n  );\n};\n\nexport default CasperSwap\n","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/WalletAuthenticationInterfaces.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/redux/casper/casperActions.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/network.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/web3Helper.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/stringUtils.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/index.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/index.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/dialogs/ConfirmationDialog.tsx",["208","209","210","211","212","213","214","215","216","217"],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/dialogs/AddressSelector.tsx",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/dialogs/TxProcessingDialog.tsx",["218","219"],[],"import React from \"react\";\nimport {\n  // FButton,\n  FDialog,\n  FList,\n  FLoader,\n  FTypo,\n} from \"ferrum-design-system\";\nimport Loader from \"./../assets/images/loading2.gif\";\n\nconst TxProcessingDialog = ({\n  show,\n  showClose = true,\n  onHide,\n  message\n}: any) => {\n  return (\n    <FDialog\n      variant={\"dark\"}\n      size={\"medium\"}\n      onHide={() => onHide()}\n      show={show}\n      className=\"connect-wallet-dialog text-center\"\n      showClose={showClose}\n      title={\"\"}\n    >\n      <FList display=\"block\" type=\"number\" variant=\"connect-wallet\">\n        <img src={Loader} width={\"170px\"} />\n        <FTypo size={20} className={\"f-mb--5 f-mt--9\"}> {message || 'Loading'} </FTypo>\n      </FList>\n      {/* <FButton onClick={onHide} title={\"Close\"}></FButton> */}\n    </FDialog>\n  );\n};\n\nexport default TxProcessingDialog;\n","/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/connect-wallet/ConnectWalletDialog.tsx",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/utils/stringParser.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/client/index.ts",["220","221"],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/walletApplicationWrapperInterfaces.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/walletApplicationWrapper.tsx",[],["222"],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/wallet-connector.tsx",["223"],["224","225","226","227","228","229"],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/redux/walletApplicationWrapperActions.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/redux/walletConnectorActions.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/redux/walletConnectorSlice.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/redux/walletApplicationWrapperSlice.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/walletAuthenticationActions.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/walletConnectorInterfaces.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/components/connector/wallet-connector/web3React/connectors.ts",[],[],"/Users/kabiribraheem/Documents/ferrum/casper-bridge-frontend/src/pages/CasperAddLiquidity.tsx",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],[],{"ruleId":"248","severity":1,"message":"249","line":4,"column":19,"nodeType":"250","messageId":"251","endLine":4,"endColumn":24},{"ruleId":"248","severity":1,"message":"252","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":14},{"ruleId":"248","severity":1,"message":"253","line":1,"column":32,"nodeType":"250","messageId":"251","endLine":1,"endColumn":39},{"ruleId":"248","severity":1,"message":"254","line":8,"column":10,"nodeType":"250","messageId":"251","endLine":8,"endColumn":26},{"ruleId":"248","severity":1,"message":"255","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":18},{"ruleId":"248","severity":1,"message":"256","line":15,"column":47,"nodeType":"250","messageId":"251","endLine":15,"endColumn":54},{"ruleId":"248","severity":1,"message":"257","line":20,"column":5,"nodeType":"250","messageId":"251","endLine":20,"endColumn":11},{"ruleId":"248","severity":1,"message":"258","line":33,"column":7,"nodeType":"250","messageId":"251","endLine":33,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":185,"column":8,"nodeType":"261","endLine":185,"endColumn":40,"suggestions":"262"},{"ruleId":"248","severity":1,"message":"263","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"264","line":13,"column":8,"nodeType":"250","messageId":"251","endLine":13,"endColumn":12},{"ruleId":"248","severity":1,"message":"265","line":17,"column":10,"nodeType":"250","messageId":"251","endLine":17,"endColumn":22},{"ruleId":"248","severity":1,"message":"266","line":33,"column":7,"nodeType":"250","messageId":"251","endLine":33,"endColumn":17},{"ruleId":"248","severity":1,"message":"267","line":39,"column":11,"nodeType":"250","messageId":"251","endLine":39,"endColumn":28},{"ruleId":"248","severity":1,"message":"268","line":47,"column":11,"nodeType":"250","messageId":"251","endLine":47,"endColumn":22},{"ruleId":"248","severity":1,"message":"269","line":47,"column":24,"nodeType":"250","messageId":"251","endLine":47,"endColumn":36},{"ruleId":"248","severity":1,"message":"270","line":47,"column":38,"nodeType":"250","messageId":"251","endLine":47,"endColumn":58},{"ruleId":"248","severity":1,"message":"271","line":47,"column":75,"nodeType":"250","messageId":"251","endLine":47,"endColumn":88},{"ruleId":"248","severity":1,"message":"272","line":96,"column":17,"nodeType":"250","messageId":"251","endLine":96,"endColumn":24},{"ruleId":"273","severity":1,"message":"274","line":195,"column":32,"nodeType":"275","endLine":195,"endColumn":110},{"ruleId":"248","severity":1,"message":"276","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":24},{"ruleId":"248","severity":1,"message":"277","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":23},{"ruleId":"248","severity":1,"message":"256","line":8,"column":47,"nodeType":"250","messageId":"251","endLine":8,"endColumn":54},{"ruleId":"248","severity":1,"message":"257","line":13,"column":3,"nodeType":"250","messageId":"251","endLine":13,"endColumn":9},{"ruleId":"248","severity":1,"message":"267","line":33,"column":11,"nodeType":"250","messageId":"251","endLine":33,"endColumn":28},{"ruleId":"248","severity":1,"message":"278","line":39,"column":25,"nodeType":"250","messageId":"251","endLine":39,"endColumn":41},{"ruleId":"248","severity":1,"message":"279","line":40,"column":23,"nodeType":"250","messageId":"251","endLine":40,"endColumn":37},{"ruleId":"248","severity":1,"message":"280","line":45,"column":66,"nodeType":"250","messageId":"251","endLine":45,"endColumn":81},{"ruleId":"248","severity":1,"message":"281","line":45,"column":83,"nodeType":"250","messageId":"251","endLine":45,"endColumn":90},{"ruleId":"248","severity":1,"message":"269","line":54,"column":24,"nodeType":"250","messageId":"251","endLine":54,"endColumn":36},{"ruleId":"248","severity":1,"message":"282","line":57,"column":9,"nodeType":"250","messageId":"251","endLine":57,"endColumn":27},{"ruleId":"248","severity":1,"message":"283","line":154,"column":15,"nodeType":"250","messageId":"251","endLine":154,"endColumn":18},{"ruleId":"248","severity":1,"message":"272","line":190,"column":17,"nodeType":"250","messageId":"251","endLine":190,"endColumn":24},{"ruleId":"248","severity":1,"message":"284","line":32,"column":24,"nodeType":"250","messageId":"251","endLine":32,"endColumn":30},{"ruleId":"248","severity":1,"message":"285","line":32,"column":49,"nodeType":"250","messageId":"251","endLine":32,"endColumn":66},{"ruleId":"248","severity":1,"message":"280","line":32,"column":68,"nodeType":"250","messageId":"251","endLine":32,"endColumn":83},{"ruleId":"259","severity":1,"message":"286","line":105,"column":8,"nodeType":"261","endLine":105,"endColumn":29,"suggestions":"287"},{"ruleId":"273","severity":1,"message":"274","line":150,"column":17,"nodeType":"275","endLine":150,"endColumn":54},{"ruleId":"273","severity":1,"message":"274","line":151,"column":17,"nodeType":"275","endLine":151,"endColumn":54},{"ruleId":"273","severity":1,"message":"274","line":153,"column":15,"nodeType":"275","endLine":153,"endColumn":54},{"ruleId":"273","severity":1,"message":"274","line":155,"column":15,"nodeType":"275","endLine":155,"endColumn":52},{"ruleId":"273","severity":1,"message":"274","line":156,"column":15,"nodeType":"275","endLine":156,"endColumn":51},{"ruleId":"288","severity":1,"message":"289","line":183,"column":11,"nodeType":"275","messageId":"290","endLine":183,"endColumn":106,"fix":"291"},{"ruleId":"248","severity":1,"message":"292","line":6,"column":3,"nodeType":"250","messageId":"251","endLine":6,"endColumn":10},{"ruleId":"273","severity":1,"message":"274","line":28,"column":9,"nodeType":"275","endLine":28,"endColumn":45},{"ruleId":"248","severity":1,"message":"293","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":18},{"ruleId":"248","severity":1,"message":"294","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":19},{"ruleId":"259","severity":1,"message":"295","line":57,"column":6,"nodeType":"261","endLine":57,"endColumn":45,"suggestions":"296","suppressions":"297"},{"ruleId":"248","severity":1,"message":"298","line":25,"column":9,"nodeType":"250","messageId":"251","endLine":25,"endColumn":14},{"ruleId":"259","severity":1,"message":"299","line":52,"column":6,"nodeType":"261","endLine":52,"endColumn":51,"suggestions":"300","suppressions":"301"},{"ruleId":"259","severity":1,"message":"299","line":80,"column":6,"nodeType":"261","endLine":80,"endColumn":58,"suggestions":"302","suppressions":"303"},{"ruleId":"259","severity":1,"message":"304","line":94,"column":6,"nodeType":"261","endLine":94,"endColumn":65,"suggestions":"305","suppressions":"306"},{"ruleId":"259","severity":1,"message":"307","line":106,"column":6,"nodeType":"261","endLine":106,"endColumn":25,"suggestions":"308","suppressions":"309"},{"ruleId":"259","severity":1,"message":"307","line":147,"column":6,"nodeType":"261","endLine":155,"endColumn":4,"suggestions":"310","suppressions":"311"},{"ruleId":"259","severity":1,"message":"307","line":201,"column":6,"nodeType":"261","endLine":201,"endColumn":13,"suggestions":"312","suppressions":"313"},{"ruleId":"248","severity":1,"message":"276","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":24},{"ruleId":"248","severity":1,"message":"277","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":23},{"ruleId":"248","severity":1,"message":"256","line":7,"column":47,"nodeType":"250","messageId":"251","endLine":7,"endColumn":54},{"ruleId":"248","severity":1,"message":"257","line":12,"column":3,"nodeType":"250","messageId":"251","endLine":12,"endColumn":9},{"ruleId":"248","severity":1,"message":"314","line":29,"column":9,"nodeType":"250","messageId":"251","endLine":29,"endColumn":17},{"ruleId":"248","severity":1,"message":"267","line":30,"column":11,"nodeType":"250","messageId":"251","endLine":30,"endColumn":28},{"ruleId":"248","severity":1,"message":"315","line":34,"column":10,"nodeType":"250","messageId":"251","endLine":34,"endColumn":23},{"ruleId":"248","severity":1,"message":"278","line":34,"column":25,"nodeType":"250","messageId":"251","endLine":34,"endColumn":41},{"ruleId":"248","severity":1,"message":"316","line":35,"column":10,"nodeType":"250","messageId":"251","endLine":35,"endColumn":21},{"ruleId":"248","severity":1,"message":"279","line":35,"column":23,"nodeType":"250","messageId":"251","endLine":35,"endColumn":37},{"ruleId":"248","severity":1,"message":"284","line":41,"column":22,"nodeType":"250","messageId":"251","endLine":41,"endColumn":28},{"ruleId":"248","severity":1,"message":"280","line":41,"column":66,"nodeType":"250","messageId":"251","endLine":41,"endColumn":81},{"ruleId":"248","severity":1,"message":"281","line":41,"column":83,"nodeType":"250","messageId":"251","endLine":41,"endColumn":90},{"ruleId":"248","severity":1,"message":"268","line":50,"column":11,"nodeType":"250","messageId":"251","endLine":50,"endColumn":22},{"ruleId":"248","severity":1,"message":"269","line":50,"column":24,"nodeType":"250","messageId":"251","endLine":50,"endColumn":36},{"ruleId":"248","severity":1,"message":"317","line":53,"column":18,"nodeType":"250","messageId":"251","endLine":53,"endColumn":25},{"ruleId":"248","severity":1,"message":"272","line":110,"column":17,"nodeType":"250","messageId":"251","endLine":110,"endColumn":24},{"ruleId":"248","severity":1,"message":"318","line":164,"column":9,"nodeType":"250","messageId":"251","endLine":164,"endColumn":22},"@typescript-eslint/no-unused-vars","'FMain' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'FHeader' is defined but never used.","'CasperWithdrawal' is defined but never used.","'FerrumJson' is defined but never used.","'CLValue' is defined but never used.","'Signer' is defined but never used.","'casperService' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchEvmWithdrawalItems'. Either include it or remove the dependency array.","ArrayExpression",["319"],"'useEffect' is defined but never used.","'logo' is defined but never used.","'CasperClient' is defined but never used.","'STATUS_API' is assigned a value but never used.","'bridgePoolAddress' is assigned a value but never used.","'isConnected' is assigned a value but never used.","'isConnecting' is assigned a value but never used.","'currentWalletNetwork' is assigned a value but never used.","'networkClient' is assigned a value but never used.","'balance' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getStakingInfo' is defined but never used.","'connectWallet' is defined but never used.","'setTargetNetwork' is assigned a value but never used.","'setTargetToken' is assigned a value but never used.","'signedAddresses' is assigned a value but never used.","'network' is assigned a value but never used.","'performSwapReverse' is assigned a value but never used.","'res' is assigned a value but never used.","'config' is assigned a value but never used.","'isWalletConnected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkTransaction' and 'intervalId'. Either include them or remove the dependency array.",["320"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"321","text":"322"},"'FLoader' is defined but never used.","'Dispatch' is defined but never used.","'AnyAction' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'isWeb3Initialized', 'networkClient', and 'signIntoServer'. Either include them or remove the dependency array.",["323"],["324"],"'state' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.",["325"],["326"],["327"],["328"],"React Hook useEffect has missing dependencies: 'activate' and 'dispatch'. Either include them or remove the dependency array.",["329"],["330"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["331"],["332"],["333"],["334"],["335"],["336"],"'navigate' is assigned a value but never used.","'targetNetwork' is assigned a value but never used.","'targetToken' is assigned a value but never used.","'swapEvm' is defined but never used.","'connectWallet' is assigned a value but never used.",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},[6939,6939]," rel=\"noreferrer\"",{"desc":"341","fix":"342"},{"kind":"343","justification":"344"},{"desc":"345","fix":"346"},{"kind":"343","justification":"344"},{"desc":"347","fix":"348"},{"kind":"343","justification":"344"},{"desc":"349","fix":"350"},{"kind":"343","justification":"344"},{"desc":"351","fix":"352"},{"kind":"343","justification":"344"},{"desc":"353","fix":"354"},{"kind":"343","justification":"344"},{"desc":"355","fix":"356"},{"kind":"343","justification":"344"},"Update the dependencies array to be: [fetchEvmWithdrawalItems, selectedAccount, walletAddress]",{"range":"357","text":"358"},"Update the dependencies array to be: [transaction, isDone, checkTransaction, intervalId]",{"range":"359","text":"360"},"Update the dependencies array to be: [dispatch, isConnected, isWeb3Initialized, networkClient, signIntoServer, walletWrapperInitialized]",{"range":"361","text":"362"},"directive","","Update the dependencies array to be: [walletAddress, account, isConnected, active, activate]",{"range":"363","text":"364"},"Update the dependencies array to be: [currentWalletNetwork, chainId, isConnected, active, activate]",{"range":"365","text":"366"},"Update the dependencies array to be: [isConnected, active, library, isConnecting, networkClient, dispatch, activate]",{"range":"367","text":"368"},"Update the dependencies array to be: [reconnect, active, dispatch]",{"range":"369","text":"370"},"Update the dependencies array to be: [networkClient, library, isConnected, active, account, chainId, isConnecting, dispatch]",{"range":"371","text":"372"},"Update the dependencies array to be: [dispatch, error]",{"range":"373","text":"374"},[7668,7700],"[fetchEvmWithdrawalItems, selectedAccount, walletAddress]",[3859,3880],"[transaction, isDone, checkTransaction, intervalId]",[1692,1731],"[dispatch, isConnected, isWeb3Initialized, networkClient, signIntoServer, walletWrapperInitialized]",[1994,2039],"[walletAddress, account, isConnected, active, activate]",[2719,2771],"[currentWalletNetwork, chainId, isConnected, active, activate]",[3254,3313],"[isConnected, active, library, isConnecting, networkClient, dispatch, activate]",[3654,3673],"[reconnect, active, dispatch]",[4863,4973],"[networkClient, library, isConnected, active, account, chainId, isConnecting, dispatch]",[6199,6206],"[dispatch, error]"]