{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/casper-bridge-frontend/src/header/header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FHeader,\n// FHeaderCollapse,\nFButton, FItem, FTruncateText\n// FHeaderMenuItem,\n} from \"ferrum-design-system\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ReactComponent as IconNetwork } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/casper.svg\";\nimport logo from \"../assets/images/logo-light.svg\";\nimport { CgArrowsExchangeAlt } from \"react-icons/cg\";\nimport { CasperClient, CasperServiceByJsonRPC, CLPublicKey } from \"casper-js-sdk\";\nimport { connectWallet as connectWalletDispatch, resetWallet, configLoaded, signed } from '../redux/casper/casperActions';\nimport toast from \"react-hot-toast\";\nimport AddressSelector from \"../dialogs/AddressSelector\";\nimport { useHistory, useParams } from \"react-router\";\nimport TxProcessingDialog from \"../dialogs/TxProcessingDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst STATUS_API = \"http://159.65.203.12:8888\";\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\nconst Header = () => {\n  _s();\n  var _connection$selectedA;\n  const dispatch = useDispatch();\n  const par = useParams();\n  const {\n    bridgePoolAddress\n  } = useParams();\n  console.log(bridgePoolAddress, par, 'bridgePoolAddress');\n  const navigate = useHistory();\n  const connection = useSelector(state => state.casper.connect);\n  const [loading, setLoading] = useState(false);\n  console.log(connection);\n  const [showAddressSelectorDlg, setShowAddressSelectorDlg] = useState(false);\n  const selectedAccount = {};\n  const connectWallet = async () => {\n    var _window$casperlabsHel;\n    await ((_window$casperlabsHel = window.casperlabsHelper) === null || _window$casperlabsHel === void 0 ? void 0 : _window$casperlabsHel.requestConnection());\n    const isConnected = await window.casperlabsHelper.isConnected();\n    if (isConnected) {\n      setLoading(true);\n      await AccountInformation();\n      setLoading(false);\n    }\n    return;\n  };\n  const disconnectWallet = async () => {\n    window.casperlabsHelper.disconnectFromSite();\n    await resetWallet()(dispatch);\n  };\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    if (isConnected) {\n      try {\n        var _latestBlock$block, _latestBlock$block2, _latestBlock$block2$h;\n        const publicKey = await window.casperlabsHelper.getActivePublicKey();\n        console.log(publicKey, bridgePoolAddress, 'stakingIdstakingId');\n        //textAddress.textContent += publicKey;\n\n        const latestBlock = await casperService.getLatestBlockInfo();\n        console.log(latestBlock);\n        const root = await casperService.getStateRootHash(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block = latestBlock.block) === null || _latestBlock$block === void 0 ? void 0 : _latestBlock$block.hash);\n        console.log(latestBlock, root);\n        await connectWalletDispatch([{\n          \"address\": publicKey\n        }])(dispatch);\n        const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n\n        // @ts-ignore\n        const balance = await casperService.getAccountBalance(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block2 = latestBlock.block) === null || _latestBlock$block2 === void 0 ? void 0 : (_latestBlock$block2$h = _latestBlock$block2.header) === null || _latestBlock$block2$h === void 0 ? void 0 : _latestBlock$block2$h.state_root_hash, balanceUref);\n        console.log(balance.toString());\n        const info = await casperService.getDeployInfo(bridgePoolAddress);\n\n        // @ts-ignore\n        const infoArguments = (info.deploy.session.ModuleBytes.args || []).find(e => e[0] === 'erc20_contract_hash');\n        if (infoArguments) {\n          var _latestBlock$block3, _latestBlock$block3$h, _latestBlock$block4, _latestBlock$block4$h, _latestBlock$block5, _latestBlock$block5$h, _tokenName$CLValue, _tokenSymbol$CLValue;\n          console.log(infoArguments, 'infoArguments', infoArguments[1].parsed);\n          const token = infoArguments[1].parsed.split('-')[1];\n          console.log(token, latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block3 = latestBlock.block) === null || _latestBlock$block3 === void 0 ? void 0 : (_latestBlock$block3$h = _latestBlock$block3.header) === null || _latestBlock$block3$h === void 0 ? void 0 : _latestBlock$block3$h.state_root_hash, 'latestBlock?.block?.header?.state_root_hash,latestBlock?.block?.header?.state_root_hash,');\n          const tokenName = await casperService.getBlockState( //@ts-ignore\n          latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block4 = latestBlock.block) === null || _latestBlock$block4 === void 0 ? void 0 : (_latestBlock$block4$h = _latestBlock$block4.header) === null || _latestBlock$block4$h === void 0 ? void 0 : _latestBlock$block4$h.state_root_hash, `hash-${token}`, ['name']);\n          const tokenSymbol = await casperService.getBlockState( //@ts-ignore\n          latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block5 = latestBlock.block) === null || _latestBlock$block5 === void 0 ? void 0 : (_latestBlock$block5$h = _latestBlock$block5.header) === null || _latestBlock$block5$h === void 0 ? void 0 : _latestBlock$block5$h.state_root_hash, `hash-${token}`, ['symbol']);\n          console.log((_tokenName$CLValue = tokenName.CLValue) === null || _tokenName$CLValue === void 0 ? void 0 : _tokenName$CLValue.data, (_tokenSymbol$CLValue = tokenSymbol.CLValue) === null || _tokenSymbol$CLValue === void 0 ? void 0 : _tokenSymbol$CLValue.data, 'info2info2');\n          if (info.deploy.session) {\n            var _tokenSymbol$CLValue2, _tokenName$CLValue2;\n            // @ts-ignore\n            configLoaded({\n              // @ts-ignore\n              config: info.deploy.session.ModuleBytes.args,\n              tokenInfo: {\n                tokenSymbol: (_tokenSymbol$CLValue2 = tokenSymbol.CLValue) === null || _tokenSymbol$CLValue2 === void 0 ? void 0 : _tokenSymbol$CLValue2.data,\n                tokenName: (_tokenName$CLValue2 = tokenName.CLValue) === null || _tokenName$CLValue2 === void 0 ? void 0 : _tokenName$CLValue2.data\n              }\n            })(dispatch);\n            //@ts-ignore\n            signed(info.deploy.approvals)(dispatch);\n            //@ts-ignore\n            console.log(info.deploy, 'infoooo');\n          }\n        }\n      } catch (error) {\n        toast.error(`An error occured Error: ${error}`);\n        console.log(error, 'Error occured');\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FHeader, {\n      showLogo: true,\n      headerLogo: logo,\n      className: \"bg-none\",\n      children: /*#__PURE__*/_jsxDEV(FItem, {\n        display: \"flex\",\n        align: \"right\",\n        alignY: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(FItem, {\n          display: \"flex\",\n          align: \"right\",\n          alignY: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => navigate.push(`/withdraw`),\n            children: \"My Withdrawals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), connection !== null && connection !== void 0 && connection.isWalletConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FButton, {\n            prefix: /*#__PURE__*/_jsxDEV(CgArrowsExchangeAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this),\n            onClick: () => {\n              setShowAddressSelectorDlg(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FButton, {\n            className: \"f-mr-1\",\n            title: \"Disconnect Wallet\",\n            onClick: disconnectWallet,\n            btnInfo: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(IconNetwork, {\n                width: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(FTruncateText, {\n                className: \"f-ml-1\",\n                text: (connection === null || connection === void 0 ? void 0 : (_connection$selectedA = connection.selectedAccount) === null || _connection$selectedA === void 0 ? void 0 : _connection$selectedA.address) || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(FButton, {\n          className: \"f-mr-1\",\n          title: \"Connect Wallet\",\n          onClick: connectWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TxProcessingDialog, {\n      showClose: false,\n      message: \"Loading Configuration\",\n      show: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), showAddressSelectorDlg && /*#__PURE__*/_jsxDEV(AddressSelector, {\n      show: showAddressSelectorDlg,\n      onHide: () => setShowAddressSelectorDlg(false),\n      connectedAccounts: (connection === null || connection === void 0 ? void 0 : connection.connectedAccounts) || [],\n      onAccountSelect: account => {\n        // onAccountSelect(account);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"PeXAaXdwdKdo+yova6vLeJ0CWps=\", false, function () {\n  return [useDispatch, useParams, useParams, useHistory, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","FHeader","FButton","FItem","FTruncateText","useSelector","useDispatch","CgArrowsExchangeAlt","CasperClient","CasperServiceByJsonRPC","CLPublicKey","connectWallet","connectWalletDispatch","resetWallet","configLoaded","signed","toast","AddressSelector","useHistory","useParams","TxProcessingDialog","RPC_API","STATUS_API","casperService","casperClient","Header","dispatch","par","bridgePoolAddress","console","log","navigate","connection","state","casper","connect","loading","setLoading","showAddressSelectorDlg","setShowAddressSelectorDlg","selectedAccount","window","casperlabsHelper","requestConnection","isConnected","AccountInformation","disconnectWallet","disconnectFromSite","publicKey","getActivePublicKey","latestBlock","getLatestBlockInfo","root","getStateRootHash","block","hash","balanceUref","getAccountBalanceUrefByPublicKey","fromHex","balance","getAccountBalance","header","state_root_hash","toString","info","getDeployInfo","infoArguments","deploy","session","ModuleBytes","args","find","e","parsed","token","split","tokenName","getBlockState","tokenSymbol","CLValue","data","config","tokenInfo","approvals","error","logo","push","isWalletConnected","address","connectedAccounts","account"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/header/header.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  FHeader,\n  // FHeaderCollapse,\n  FButton,\n  FItem,\n  FTruncateText,\n  // FHeaderMenuItem,\n} from \"ferrum-design-system\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ReactComponent as IconNetwork } from \"../assets/images/casper.svg\";\n\nimport logo from \"../assets/images/logo-light.svg\";\nimport { CgArrowsExchangeAlt } from \"react-icons/cg\";\nimport { CasperClient, CasperServiceByJsonRPC, CLPublicKey } from \"casper-js-sdk\";\nimport { \n  connectWallet as connectWalletDispatch,\n  resetWallet,\n  configLoaded,\n  signed\n} from '../redux/casper/casperActions';\nimport toast from \"react-hot-toast\";\nimport AddressSelector from \"../dialogs/AddressSelector\";\nimport { useHistory, useParams } from \"react-router\";\nimport TxProcessingDialog from \"../dialogs/TxProcessingDialog\";\n\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst STATUS_API = \"http://159.65.203.12:8888\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const par = useParams();\n  const { bridgePoolAddress }: any = useParams();\n  console.log(bridgePoolAddress, par, 'bridgePoolAddress');\n  const navigate = useHistory();\n  const connection = useSelector((state: any) => state.casper.connect)\n  const [loading, setLoading] = useState(false);\n\n  console.log(connection)\n\n  const [showAddressSelectorDlg, setShowAddressSelectorDlg] =  useState<boolean>(false);\n\n  const selectedAccount: { address?: string } = {};\n\n  const connectWallet = async () => {\n    await window.casperlabsHelper?.requestConnection()\n\n    const isConnected = await window.casperlabsHelper.isConnected();\n\n    if (isConnected) {\n      setLoading(true)\n      await AccountInformation();\n      setLoading(false)\n    }\n \n    return;\n  };\n\n  const disconnectWallet = async () => {\n    window.casperlabsHelper.disconnectFromSite();\n    await resetWallet()(dispatch)\n  };\n\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n\n    if (isConnected) {\n      try {\n        const publicKey = await window.casperlabsHelper.getActivePublicKey();\n        console.log(publicKey, bridgePoolAddress, 'stakingIdstakingId');\n        //textAddress.textContent += publicKey;\n\n        const latestBlock = await casperService.getLatestBlockInfo();\n        console.log(latestBlock);\n\n        const root = await casperService.getStateRootHash(latestBlock?.block?.hash);\n        console.log(latestBlock, root)\n\n        await connectWalletDispatch([ { \"address\": publicKey } ])(dispatch)\n\n        const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n        \n        // @ts-ignore\n        const balance = await casperService.getAccountBalance(latestBlock?.block?.header?.state_root_hash, balanceUref);\n        console.log(balance.toString())\n\n        const info = await casperService.getDeployInfo(\n          bridgePoolAddress\n        )\n\n        // @ts-ignore\n        const infoArguments = (info.deploy.session.ModuleBytes.args || []).find(\n          (e: any) => e[0] === 'erc20_contract_hash'\n        )\n\n        if (infoArguments) {\n          console.log(infoArguments, 'infoArguments', infoArguments[1].parsed)\n          const token = infoArguments[1].parsed.split('-')[1]\n\n          console.log(token, latestBlock?.block?.header?.state_root_hash, 'latestBlock?.block?.header?.state_root_hash,latestBlock?.block?.header?.state_root_hash,');\n\n          const tokenName = await casperService.getBlockState(\n            //@ts-ignore\n            latestBlock?.block?.header?.state_root_hash,\n            `hash-${token}`,\n            ['name']\n          )\n  \n          const tokenSymbol = await casperService.getBlockState(\n             //@ts-ignore\n             latestBlock?.block?.header?.state_root_hash,\n             `hash-${token}`,\n             ['symbol']\n          )\n  \n          console.log(tokenName.CLValue?.data, tokenSymbol.CLValue?.data, 'info2info2')\n\n          if(info.deploy.session) {\n            // @ts-ignore\n            configLoaded({\n              // @ts-ignore\n              config: info.deploy.session.ModuleBytes.args,\n              tokenInfo: {\n                tokenSymbol: tokenSymbol.CLValue?.data,\n                tokenName: tokenName.CLValue?.data\n              }\n            })(dispatch);\n            //@ts-ignore\n            signed(info.deploy.approvals)(dispatch)\n            //@ts-ignore\n            console.log(info.deploy, 'infoooo');\n          }\n        }\n        \n      } catch (error) {\n        toast.error(`An error occured Error: ${error}`);\n        console.log(error, 'Error occured')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <FHeader showLogo={true} headerLogo={logo} className=\"bg-none\">\n        <FItem display={\"flex\"} align=\"right\" alignY={\"center\"}>\n          <FItem display={\"flex\"} align=\"right\" alignY={\"center\"}>\n            <span onClick={() => navigate.push(`/withdraw`)}>My Withdrawals</span>\n          </FItem>\n          {connection?.isWalletConnected ? (\n            <>\n              <FButton\n                prefix={<CgArrowsExchangeAlt />}\n                onClick={() => {\n                  setShowAddressSelectorDlg(true);\n                }}\n              ></FButton>\n              <FButton\n                className=\"f-mr-1\"\n                title={\"Disconnect Wallet\"}\n                onClick={disconnectWallet}\n                btnInfo={\n                  <FItem display={\"flex\"}>\n                    <IconNetwork width={20} />{\" \"}\n                    <FTruncateText\n                      className=\"f-ml-1\"\n                      text={connection?.selectedAccount?.address || ''}\n                    />\n                  </FItem>\n                }\n              />\n            </>\n          ) : (\n            <FButton\n              className=\"f-mr-1\"\n              title={\"Connect Wallet\"}\n              onClick={connectWallet}\n            ></FButton>\n          )}\n          {/* <FHeaderCollapse>\n            <FHeaderMenuItem to=\"/status-page\" title=\"Status Page\" />\n          </FHeaderCollapse> */}\n        </FItem>\n      </FHeader>\n      <TxProcessingDialog showClose={false} message={\"Loading Configuration\"} show={loading}/>\n      {showAddressSelectorDlg && (\n        <AddressSelector\n          show={showAddressSelectorDlg}\n          onHide={() => setShowAddressSelectorDlg(false)}\n          connectedAccounts={connection?.connectedAccounts || []}\n          onAccountSelect={(account: any) => {\n           // onAccountSelect(account);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}