{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { defaultWalletState } from \"../walletConnectorInterfaces\";\nconst initialWalletConnectorState = {\n  ...defaultWalletState\n};\nexport const walletConnectorSlice = createSlice({\n  name: \"walletConnector\",\n  initialState: initialWalletConnectorState,\n  reducers: {\n    //error occured while connecting\n    catchWalletConnectError: (state, action) => {\n      state = {\n        ...defaultWalletState,\n        error: `${action.type}: ${action.payload.error}`\n      };\n    },\n    connectWallet: state => {\n      state.isConnected = false;\n      state.isConnecting = true;\n      state.walletAddress = \"\";\n      state.walletBalance = \"\";\n      state.currentWallet = defaultWalletState.currentWallet;\n      state.currentWalletNetwork = 0;\n      state.error = \"\";\n      state.networkClient = undefined;\n      state.isWeb3Initialized = false;\n    },\n    reconnectWallet: state => {\n      state.isConnected = false;\n      state.isConnecting = true;\n      state.walletAddress = \"\";\n      state.walletBalance = \"\";\n      state.currentWallet = defaultWalletState.currentWallet;\n      state.currentWalletNetwork = 0;\n      state.error = \"\";\n      state.networkClient = undefined;\n      state.isWeb3Initialized = false;\n    },\n    // getCustomerById\n    walletConnected: (state, action) => {\n      state.isConnected = true;\n      state.isConnecting = false;\n      state.walletAddress = action.payload.userAccount.account;\n      state.walletBalance = action.payload.userAccount.balance;\n      state.currentWallet = action.payload.currentWallet;\n      state.currentWalletNetwork = action.payload.userAccount.chainId;\n      state.error = \"\";\n      state.networkClient = action.payload.userAccount.networkClient;\n      state.isWeb3Initialized = true;\n    },\n    disconnectWallet: (state, action) => {\n      state.isConnected = false;\n      state.isConnecting = false;\n      state.walletAddress = \"\";\n      state.walletBalance = \"\";\n      state.currentWallet = defaultWalletState.currentWallet;\n      state.currentWalletNetwork = 0;\n      state.error = \"\";\n      state.networkClient = undefined;\n      state.isWeb3Initialized = false;\n    }\n  }\n});","map":{"version":3,"names":["createSlice","defaultWalletState","initialWalletConnectorState","walletConnectorSlice","name","initialState","reducers","catchWalletConnectError","state","action","error","type","payload","connectWallet","isConnected","isConnecting","walletAddress","walletBalance","currentWallet","currentWalletNetwork","networkClient","undefined","isWeb3Initialized","reconnectWallet","walletConnected","userAccount","account","balance","chainId","disconnectWallet"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/connector/wallet-connector/redux/walletConnectorSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  defaultWalletState,\n  WALLET_CONNECTOR_STATE,\n} from \"../walletConnectorInterfaces\";\n\nconst initialWalletConnectorState: WALLET_CONNECTOR_STATE = {\n  ...defaultWalletState,\n};\n\nexport const walletConnectorSlice = createSlice({\n  name: \"walletConnector\",\n  initialState: initialWalletConnectorState,\n  reducers: {\n    //error occured while connecting\n    catchWalletConnectError: (state, action) => {\n      state = {\n        ...defaultWalletState,\n        error: `${action.type}: ${action.payload.error}`,\n      };\n    },\n    connectWallet: (state) => {\n      state.isConnected = false;\n      state.isConnecting = true;\n      state.walletAddress = \"\";\n      state.walletBalance = \"\";\n      state.currentWallet = defaultWalletState.currentWallet;\n      state.currentWalletNetwork = 0;\n      state.error = \"\";\n      state.networkClient = undefined;\n      state.isWeb3Initialized = false;\n    },\n    reconnectWallet: (state) => {\n      state.isConnected = false;\n      state.isConnecting = true;\n      state.walletAddress = \"\";\n      state.walletBalance = \"\";\n      state.currentWallet = defaultWalletState.currentWallet;\n      state.currentWalletNetwork = 0;\n      state.error = \"\";\n      state.networkClient = undefined;\n      state.isWeb3Initialized = false;\n    },\n    // getCustomerById\n    walletConnected: (state, action) => {\n      state.isConnected = true;\n      state.isConnecting = false;\n      state.walletAddress = action.payload.userAccount.account;\n      state.walletBalance = action.payload.userAccount.balance;\n      state.currentWallet = action.payload.currentWallet;\n      state.currentWalletNetwork = action.payload.userAccount.chainId;\n      state.error = \"\";\n      state.networkClient = action.payload.userAccount.networkClient;\n      state.isWeb3Initialized = true;\n    },\n    disconnectWallet: (state, action) => {\n      state.isConnected = false;\n      state.isConnecting = false;\n      state.walletAddress = \"\";\n      state.walletBalance = \"\";\n      state.currentWallet = defaultWalletState.currentWallet;\n      state.currentWalletNetwork = 0;\n      state.error = \"\";\n      state.networkClient = undefined;\n      state.isWeb3Initialized = false;\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}