{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/staking-casper-frontend/src/components/StakeCardSubmit.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FButton, FCard, FInputText, FItem,\n// FResponseBar,\nFTypo } from \"ferrum-design-system\";\nimport { ReactComponent as BrandIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/brand-icon.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport toast from \"react-hot-toast\";\nimport { CLPublicKey, CasperClient, CasperServiceByJsonRPC, CLValueBuilder, decodeBase16, DeployUtil, RuntimeArgs, Signer } from \"casper-js-sdk\";\n\n// interface CardSubmitStakeProps {\n//   walletConnected?: boolean;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\nconst StakeCardSubmit = () => {\n  _s();\n  const {\n    stakingId\n  } = useParams();\n  const navigate = useHistory();\n  const dispatch = useDispatch();\n  const [amount, setAmount] = useState();\n  const {\n    connect: {\n      config,\n      selectedAccount,\n      isWalletConnected,\n      signedAddresses\n    }\n  } = useSelector(state => state.casper);\n  console.log(selectedAccount, isWalletConnected, signedAddresses, config);\n  const isAddressSigned = () => {\n    var _signedAddresses;\n    if ((_signedAddresses = signedAddresses[`${stakingId}`]) !== null && _signedAddresses !== void 0 && _signedAddresses.length) {\n      var _signedAddresses2;\n      const result = (_signedAddresses2 = signedAddresses[`${stakingId}`]) === null || _signedAddresses2 === void 0 ? void 0 : _signedAddresses2.find(address => address === selectedAccount.address);\n      if (result) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const performStake = async () => {\n    if (isWalletConnected && selectedAccount) {\n      console.log(\"herehere\");\n      try {\n        // console.log(selectedAccount?.address, Number(amount));\n        if (amount && Number(amount) > 0) {\n          const publicKeyHex = selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.address;\n          const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n          const deployParams = new DeployUtil.DeployParams(senderPublicKey, 'casper-test');\n          const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(amount)\n          });\n          const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(decodeBase16('hash-fd0aa2f42bd78c5b613dd363b91b9700d699571f85afbd88c4d1a95eb332e85c'), 'stake', args);\n          const payment = DeployUtil.standardPayment(10000000000000);\n          const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n          const deployJson = DeployUtil.deployToJson(deploy);\n          Signer.sign(deployJson, publicKeyHex).then(async signedDeployJson => {\n            const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n            console.log(signedDeploy);\n            if (signedDeploy.ok) {\n              const res = await casperClient.putDeploy(signedDeploy.val);\n              console.log(res, 'resres');\n            }\n          });\n          // navigate.push(`/${config._id}`);\n          //toast.success(`${amount} tokens are staked successfully`);\n        } else {\n          toast.error(\"Amount must be greater than 0\");\n        }\n      } catch (e) {\n        console.log(\"ERROR : \", e);\n        toast.error(\"An error occured please see console for details\");\n        navigate.push(`/${config._id}`);\n      }\n    } else {\n      console.log(\"heelelll\");\n      navigate.push(`/${config._id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FCard, {\n      className: \"card-submit-stake f-mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(FItem, {\n        display: \"flex\",\n        className: \"f-mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(FItem, {\n          bgColor: \"#1F2128\",\n          size: 70,\n          className: \"f-p--8 f-mr-1\",\n          display: \"flex\",\n          alignX: \"center\",\n          alignY: \"center\",\n          children: /*#__PURE__*/_jsxDEV(BrandIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FItem, {\n          className: \"f-ml-1\",\n          children: [/*#__PURE__*/_jsxDEV(FTypo, {\n            size: 24,\n            color: \"white\",\n            className: \"f-mt--4\",\n            children: \"Title Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FTypo, {\n            size: 12,\n            color: \"white\",\n            children: \"POOL TYPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n        className: \"f-mt-2\",\n        label: \"AMOUNT TO STAKE\",\n        placeholder: \"0\",\n        value: amount,\n        onChange: e => {\n          e.preventDefault();\n          const re = /^-?\\d*\\.?\\d*$/;\n          if (e.target.value === \"\" || re.test(e.target.value)) {\n            setAmount(e.target.value);\n          }\n        },\n        postfix: /*#__PURE__*/_jsxDEV(FTypo, {\n          className: \"f-pr-1\",\n          color: \"#dab46e\",\n          children: \"TOKEN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FButton, {\n        title: \" Submit Stake\",\n        className: \"w-100 f-mt-2\",\n        onClick: performStake\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(StakeCardSubmit, \"EBt2kCc1wqci259hyfSW8f1Hj04=\", false, function () {\n  return [useParams, useHistory, useDispatch, useSelector];\n});\n_c = StakeCardSubmit;\nexport default StakeCardSubmit;\nvar _c;\n$RefreshReg$(_c, \"StakeCardSubmit\");","map":{"version":3,"names":["React","useState","FButton","FCard","FInputText","FItem","FTypo","useDispatch","useSelector","useHistory","useParams","toast","CLPublicKey","CasperClient","CasperServiceByJsonRPC","CLValueBuilder","decodeBase16","DeployUtil","RuntimeArgs","Signer","RPC_API","casperService","casperClient","StakeCardSubmit","stakingId","navigate","dispatch","amount","setAmount","connect","config","selectedAccount","isWalletConnected","signedAddresses","state","casper","console","log","isAddressSigned","length","result","find","address","performStake","Number","publicKeyHex","senderPublicKey","fromHex","deployParams","DeployParams","args","fromMap","u256","session","ExecutableDeployItem","newStoredContractByHash","payment","standardPayment","deploy","makeDeploy","deployJson","deployToJson","sign","then","signedDeployJson","signedDeploy","deployFromJson","ok","res","putDeploy","val","error","e","push","_id","preventDefault","re","target","value","test"],"sources":["/Users/kabiribraheem/Documents/staking-casper-frontend/src/components/StakeCardSubmit.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  FButton,\n  FCard,\n  FInputText,\n  FItem,\n  // FResponseBar,\n  FTypo,\n} from \"ferrum-design-system\";\nimport { ReactComponent as BrandIcon } from \"../assets/images/brand-icon.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport toast from \"react-hot-toast\";\nimport { CLPublicKey, CasperClient, CasperServiceByJsonRPC, CLValueBuilder, decodeBase16, DeployUtil, RuntimeArgs, Signer } from \"casper-js-sdk\";\n\n// interface CardSubmitStakeProps {\n//   walletConnected?: boolean;\n// }\n\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\n\nconst StakeCardSubmit = () => {\n  const { stakingId }: any = useParams();\n  const navigate = useHistory();\n  const dispatch = useDispatch();\n  const [amount, setAmount] = useState();\n  const { connect: { config, selectedAccount, isWalletConnected, signedAddresses,  } } = useSelector((state: any) => state.casper);\n\n  console.log(\n    selectedAccount,\n    isWalletConnected,\n    signedAddresses,\n    config\n  )\n \n  const isAddressSigned = () => {\n    if (signedAddresses[`${stakingId}`]?.length) {\n      const result = signedAddresses[`${stakingId}`]?.find((address: any) => address === selectedAccount.address);\n      if (result) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const performStake = async () => {\n    if (\n      isWalletConnected &&\n      selectedAccount\n    ) {\n      console.log(\"herehere\");\n      try {\n        // console.log(selectedAccount?.address, Number(amount));\n        if (amount && Number(amount) > 0) {\n          const publicKeyHex = selectedAccount?.address;\n          const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n\n          const deployParams = new DeployUtil.DeployParams(\n            senderPublicKey,\n            'casper-test'\n          );\n\n          const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(amount),\n          });\n\n          const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(\n            decodeBase16('hash-fd0aa2f42bd78c5b613dd363b91b9700d699571f85afbd88c4d1a95eb332e85c'),\n            'stake',\n            args\n          );\n\n          const payment = DeployUtil.standardPayment(10000000000000);\n\n          const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n\n          const deployJson: any = DeployUtil.deployToJson(deploy);\n        \n          Signer.sign(deployJson, publicKeyHex).then(async (signedDeployJson) => {\n            const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n            console.log(signedDeploy)\n            if (signedDeploy.ok) {\n              const res = await casperClient.putDeploy(signedDeploy.val);\n\n              console.log(res, 'resres')\n            }\n          });\n          // navigate.push(`/${config._id}`);\n          //toast.success(`${amount} tokens are staked successfully`);\n        } else {\n          toast.error(\"Amount must be greater than 0\");\n        }\n      } catch (e) {\n        console.log(\"ERROR : \", e);\n        toast.error(\"An error occured please see console for details\");\n        navigate.push(`/${config._id}`);\n      }\n    } else {\n      console.log(\"heelelll\")\n      navigate.push(`/${config._id}`);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <FCard className={\"card-submit-stake f-mb-2\"}>\n        <FItem display={\"flex\"} className=\"f-mb-2\">\n          <FItem bgColor=\"#1F2128\" size={70} className=\"f-p--8 f-mr-1\" display={\"flex\"} alignX=\"center\" alignY={\"center\"}>\n            <BrandIcon />\n          </FItem>\n          <FItem className={\"f-ml-1\"}>\n            <FTypo size={24} color=\"white\" className={\"f-mt--4\"}>\n              Title Pool\n            </FTypo>\n            <FTypo size={12} color=\"white\">\n              POOL TYPE\n            </FTypo>\n          </FItem>\n        </FItem>\n        <FInputText\n          className={\"f-mt-2\"}\n          label={\"AMOUNT TO STAKE\"}\n          placeholder={\"0\"}\n          value={amount}\n          onChange={(e: any) => {\n            e.preventDefault();\n            const re = /^-?\\d*\\.?\\d*$/;\n            if (e.target.value === \"\" || re.test(e.target.value)) {\n              setAmount(e.target.value);\n            }\n          }}\n          postfix={\n            <FTypo className={\"f-pr-1\"} color=\"#dab46e\">\n              TOKEN\n            </FTypo>\n          }\n        />\n        {/* <FInputText\n          className={\"f-mt-2\"}\n          label={\"AVAILABLE BALANCE\"}\n          placeholder={\"0\"}\n          onChange={(e: any) => console.log(e.target.value)}\n          disabled={true}\n        />\n        <FInputText\n          className={\"f-mt-2\"}\n          label={\"REMAINING FROM CAP\"}\n          placeholder={\"0\"}\n          onChange={(e: any) => console.log(e)}\n          disabled={true}\n        /> */}\n\n        {/* <FResponseBar\n          variant=\"error\"\n          title=\"Could send a sign request. Not enough balance.\"\n          className=\"f-mb-0\"\n          show={true}\n        ></FResponseBar> */}\n        <FButton title={\" Submit Stake\"} className=\"w-100 f-mt-2\" onClick={performStake} />\n      </FCard>\n    </React.Fragment>\n  );\n};\nexport default StakeCardSubmit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}