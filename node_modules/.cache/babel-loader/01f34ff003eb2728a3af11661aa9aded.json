{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/staking-casper-frontend/src/components/admin/table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { FButton, FTable, FContainer, FItem, FTypo,\n// FLoader,\nFDialog, FGrid, FGridItem, FInputText\n// FLoader,\n} from \"ferrum-design-system\";\nimport Datatable from \"react-bs-datatable\";\nimport { useDispatch } from \"react-redux\";\n// import * as stakingActions from \"../redux/reducers/staking/stakingAction\";\nimport { useForm } from \"react-hook-form\";\n\n// Create table headers consisting of 4 columns.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst header = [{\n  title: \"Token Address\",\n  prop: \"tokenAddress\"\n}, {\n  title: \"Staking Capital\",\n  prop: \"stakingCapital\"\n}, {\n  title: \"Staking Starts\",\n  prop: \"stakingStarts\"\n}, {\n  title: \"Staking Ends\",\n  prop: \"stakingEnds\"\n}, {\n  title: \"Withdraw Starts\",\n  prop: \"withdrawStarts\"\n}, {\n  title: \"Withdraw Ends\",\n  prop: \"withdrawEnds\"\n}, {\n  title: \"App ID\",\n  prop: \"appId\"\n}, {\n  title: \"Contract Address\",\n  prop: \"encodedAddress\"\n}, {\n  title: \"Action\",\n  prop: \"action\"\n}];\n\n// Randomize data of the table columns.\n// Note that the fields are all using the `prop` field of the headers.\n\nconst initialValues = {\n  rewardAmount: \"\",\n  withdrawableAmount: \"\"\n};\nexport const Table = _ref => {\n  _s();\n  var _errors$rewardAmount, _errors$rewardAmount2, _errors$withdrawableA, _errors$withdrawableA2;\n  let {\n    list\n  } = _ref;\n  const dispatch = useDispatch();\n  const [body, setBody] = useState([]);\n  //const { actionLoading } = useSelector((state: any) => state.staking);\n  const [stakingIdForReward, setStakingIdForReward] = useState(undefined);\n  // const [showMessage, setShowMessage] = useState(false);\n\n  const {\n    reset,\n    register,\n    // control,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    }\n    // watch,\n  } = useForm({\n    defaultValues: initialValues\n  });\n  useEffect(() => {\n    if (list && list.length) {\n      // console.log(list);\n\n      let sortedArray = list.slice().sort((a, b) => {\n        return +new Date(b.updatedAt) - +new Date(a.updatedAt);\n      });\n      let deployed = [];\n      let rest = [];\n      sortedArray.slice().forEach(item => {\n        if (item.status === \"DEPLOY\") {\n          deployed.push(item);\n        } else {\n          rest.push(item);\n        }\n      });\n      let formatedResult = [...deployed, ...rest].map(item => {\n        return {\n          tokenAddress: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"Token Address\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FTypo, {\n                size: 10,\n                children: item.tokenAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this),\n          stakingCapital: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"Staking Capital\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FTypo, {\n                size: 10,\n                children: item.stakingCapital\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this),\n          stakingStarts: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"Staking Starts\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FTypo, {\n                size: 10,\n                children: item.stakingStarts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this),\n          stakingEnds: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"Staking Ends\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FTypo, {\n                size: 10,\n                children: item.stakingEnds\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this),\n          withdrawStarts: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"Withdraw Starts\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FTypo, {\n                size: 10,\n                children: item.withdrawStarts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this),\n          withdrawEnds: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"Withdraw Ends\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FTypo, {\n                size: 10,\n                children: item.withdrawEnds\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this),\n          appId: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"App ID\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FTypo, {\n                size: 10,\n                children: item.appId ? item.appId : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this),\n          encodedAddress: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"Contract Address\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FTypo, {\n                size: 10,\n                children: item.encodedAddress ? item.encodedAddress : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this),\n          action: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-label\": \"Action\",\n            children: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(FButton, {\n                title: item.status === \"CREATED\" ? \"Deploy\" : item.status === \"DEPLOY\" ? \"Setup\" : item.status === \"SETUP\" ? \"Add Reward\" : item.status === \"REWARD\" ? \"OPEN APP\" : \"Retry \" + item.status.replace(\"FAIL_\", \" \").toLowerCase().replace(\"reward\", \"Add Reward\"),\n                disabled: actionLoading\n                // style={{ backgroud: \"red\" }}\n                ,\n                onClick: () => actionHandler(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        };\n      });\n      setBody(formatedResult);\n    }\n    // eslint-disable-next-line\n  }, [list, actionLoading]);\n  console.log(actionLoading);\n  const actionHandler = item => {\n    // if (item.encodedAddress) {\n    //   dispatch(stakingActions.addRewardStaking(item._id));\n    // } else\n\n    if (item.status === \"CREATED\" || item.status === \"FAIL_DEPLOY\") {\n      // dispatch(stakingActions.deployStaking(item._id));\n    } else if (item.status === \"DEPLOY\" || item.status === \"FAIL_SETUP\") {\n      // dispatch(stakingActions.setupStaking(item._id));\n    } else if (item.status === \"SETUP\" || item.status === \"FAIL_REWARD\") {\n      setStakingIdForReward(item._id);\n    } else if (item.status === \"REWARD\") {\n      window.open(`${process.env.REACT_APP_STAKING_APP_URL}/${item._id}`, \"_blank\", \"noopener,noreferrer\");\n    }\n  };\n  const onSubmit = async values => {\n    // dispatch(stakingActions.addRewardStaking(stakingIdForReward, values));\n    reset(initialValues);\n    setStakingIdForReward(undefined);\n    // dispatch(\n    //   stakingActions.createStaking({\n    //     ...values,\n    //     stakingStarts: moment(values.stakingStarts).format(),\n    //     stakingEnds: moment(values.stakingEnds).format(),\n    //     withdrawStarts: moment(values.withdrawStarts).format(),\n    //     withdrawEnds: moment(values.withdrawEnds).format(),\n    //   })\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(FContainer, {\n    type: \"fluid\",\n    children: [/*#__PURE__*/_jsxDEV(FTable, {\n      children: /*#__PURE__*/_jsxDEV(Datatable, {\n        tableHeaders: header,\n        tableBody: body,\n        rowsPerPage: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FDialog, {\n      title: \"Add reward\",\n      size: \"medium\",\n      show: stakingIdForReward,\n      showClose: true,\n      onHide: () => setStakingIdForReward(undefined),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"true\",\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(FGrid, {\n          className: \"f-mt-1\",\n          children: [/*#__PURE__*/_jsxDEV(FGridItem, {\n            children: /*#__PURE__*/_jsxDEV(FInputText, {\n              label: \"Reward Amount\",\n              name: \"rewardAmount\",\n              type: \"text\",\n              className: \"w-100\",\n              placeholder: \"0\",\n              register: register,\n              validations: {\n                required: {\n                  value: true,\n                  message: \"Reward amount is required\"\n                }\n              },\n              error: (_errors$rewardAmount = errors[\"rewardAmount\"]) !== null && _errors$rewardAmount !== void 0 && _errors$rewardAmount.message ? (_errors$rewardAmount2 = errors[\"rewardAmount\"]) === null || _errors$rewardAmount2 === void 0 ? void 0 : _errors$rewardAmount2.message : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FGridItem, {\n            children: /*#__PURE__*/_jsxDEV(FInputText, {\n              label: \"Withdrawable Amount\",\n              name: \"withdrawableAmount\",\n              type: \"text\",\n              className: \"w-100 f-mt-1\",\n              placeholder: \"0\",\n              register: register,\n              validations: {\n                required: {\n                  value: true,\n                  message: \"Withdrawable amount is required\"\n                }\n              },\n              error: (_errors$withdrawableA = errors[\"withdrawableAmount\"]) !== null && _errors$withdrawableA !== void 0 && _errors$withdrawableA.message ? (_errors$withdrawableA2 = errors[\"withdrawableAmount\"]) === null || _errors$withdrawableA2 === void 0 ? void 0 : _errors$withdrawableA2.message : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FGridItem, {\n            alignX: \"end\",\n            children: /*#__PURE__*/_jsxDEV(FButton, {\n              type: \"submit\",\n              disabled: false,\n              title: \"Add Reward\",\n              className: \"f-mt-1 f-mb-2\"\n              // postfix={isSubmitting && <ClipLoader color=\"#fff\" size={20} />}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"fal8gqJ3sjyANTSIKPRUv9o2lA8=\", false, function () {\n  return [useDispatch, useForm];\n});\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","FButton","FTable","FContainer","FItem","FTypo","FDialog","FGrid","FGridItem","FInputText","Datatable","useDispatch","useForm","header","title","prop","initialValues","rewardAmount","withdrawableAmount","Table","list","dispatch","body","setBody","stakingIdForReward","setStakingIdForReward","undefined","reset","register","handleSubmit","formState","errors","isSubmitting","defaultValues","length","sortedArray","slice","sort","a","b","Date","updatedAt","deployed","rest","forEach","item","status","push","formatedResult","map","tokenAddress","stakingCapital","stakingStarts","stakingEnds","withdrawStarts","withdrawEnds","appId","encodedAddress","action","replace","toLowerCase","actionLoading","actionHandler","console","log","_id","window","open","process","env","REACT_APP_STAKING_APP_URL","onSubmit","values","required","value","message"],"sources":["/Users/kabiribraheem/Documents/staking-casper-frontend/src/components/admin/table.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  FButton,\n  FTable,\n  FContainer,\n  FItem,\n  FTypo,\n  // FLoader,\n  FDialog,\n  FGrid,\n  FGridItem,\n  FInputText,\n  // FLoader,\n} from \"ferrum-design-system\";\nimport Datatable from \"react-bs-datatable\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import * as stakingActions from \"../redux/reducers/staking/stakingAction\";\nimport { useForm } from \"react-hook-form\";\n\n// Create table headers consisting of 4 columns.\nconst header = [\n  { title: \"Token Address\", prop: \"tokenAddress\" },\n  { title: \"Staking Capital\", prop: \"stakingCapital\" },\n  { title: \"Staking Starts\", prop: \"stakingStarts\" },\n  { title: \"Staking Ends\", prop: \"stakingEnds\" },\n  { title: \"Withdraw Starts\", prop: \"withdrawStarts\" },\n  { title: \"Withdraw Ends\", prop: \"withdrawEnds\" },\n  { title: \"App ID\", prop: \"appId\" },\n  { title: \"Contract Address\", prop: \"encodedAddress\" },\n  { title: \"Action\", prop: \"action\" },\n];\n\n// Randomize data of the table columns.\n// Note that the fields are all using the `prop` field of the headers.\n\nconst initialValues = {\n  rewardAmount: \"\",\n  withdrawableAmount: \"\",\n};\n\nexport const Table = ({ list }: any) => {\n  const dispatch: any = useDispatch();\n  const [body, setBody] = useState<Array<any>>([]);\n  //const { actionLoading } = useSelector((state: any) => state.staking);\n  const [stakingIdForReward, setStakingIdForReward] = useState<any>(undefined);\n  // const [showMessage, setShowMessage] = useState(false);\n\n  const {\n    reset,\n    register,\n    // control,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n    // watch,\n  } = useForm({ defaultValues: initialValues });\n\n  useEffect(() => {\n    if (list && list.length) {\n      // console.log(list);\n\n      let sortedArray = list.slice().sort((a: any, b: any) => {\n        return +new Date(b.updatedAt) - +new Date(a.updatedAt);\n      });\n      let deployed: any[] = [];\n      let rest: any[] = [];\n      sortedArray.slice().forEach((item: any) => {\n        if (item.status === \"DEPLOY\") {\n          deployed.push(item);\n        } else {\n          rest.push(item);\n        }\n      });\n      let formatedResult = [...deployed, ...rest].map((item: any) => {\n        return {\n          tokenAddress: (\n            <div data-label=\"Token Address\">\n              <FItem display={\"flex\"}>\n                <FTypo size={10}>{item.tokenAddress}</FTypo>\n              </FItem>\n            </div>\n          ),\n          stakingCapital: (\n            <div data-label=\"Staking Capital\">\n              <FItem display={\"flex\"}>\n                <FTypo size={10}>{item.stakingCapital}</FTypo>\n              </FItem>\n            </div>\n          ),\n          stakingStarts: (\n            <div data-label=\"Staking Starts\">\n              <FItem display={\"flex\"}>\n                <FTypo size={10}>{item.stakingStarts}</FTypo>\n              </FItem>\n            </div>\n          ),\n          stakingEnds: (\n            <div data-label=\"Staking Ends\">\n              <FItem display={\"flex\"}>\n                <FTypo size={10}>{item.stakingEnds}</FTypo>\n              </FItem>\n            </div>\n          ),\n          withdrawStarts: (\n            <div data-label=\"Withdraw Starts\">\n              <FItem display={\"flex\"}>\n                <FTypo size={10}>{item.withdrawStarts}</FTypo>\n              </FItem>\n            </div>\n          ),\n          withdrawEnds: (\n            <div data-label=\"Withdraw Ends\">\n              <FItem display={\"flex\"}>\n                <FTypo size={10}>{item.withdrawEnds}</FTypo>\n              </FItem>\n            </div>\n          ),\n          appId: (\n            <div data-label=\"App ID\">\n              <FItem display={\"flex\"}>\n                <FTypo size={10}>{item.appId ? item.appId : \"\"}</FTypo>\n              </FItem>\n            </div>\n          ),\n          encodedAddress: (\n            <div data-label=\"Contract Address\">\n              <FItem display={\"flex\"}>\n                <FTypo size={10}>{item.encodedAddress ? item.encodedAddress : \"\"}</FTypo>\n              </FItem>\n            </div>\n          ),\n          action: (\n            <div data-label=\"Action\">\n              <FItem display={\"flex\"}>\n                <FButton\n                  title={\n                    item.status === \"CREATED\"\n                      ? \"Deploy\"\n                      : item.status === \"DEPLOY\"\n                      ? \"Setup\"\n                      : item.status === \"SETUP\"\n                      ? \"Add Reward\"\n                      : item.status === \"REWARD\"\n                      ? \"OPEN APP\"\n                      : \"Retry \" + item.status.replace(\"FAIL_\", \" \").toLowerCase().replace(\"reward\", \"Add Reward\")\n                  }\n                  disabled={actionLoading}\n                  // style={{ backgroud: \"red\" }}\n                  onClick={() => actionHandler(item)}\n                />\n              </FItem>\n            </div>\n          ),\n        };\n      });\n      setBody(formatedResult);\n    }\n    // eslint-disable-next-line\n  }, [list, actionLoading]);\n\n  console.log(actionLoading);\n  const actionHandler = (item: any) => {\n    // if (item.encodedAddress) {\n    //   dispatch(stakingActions.addRewardStaking(item._id));\n    // } else\n\n    if (item.status === \"CREATED\" || item.status === \"FAIL_DEPLOY\") {\n      // dispatch(stakingActions.deployStaking(item._id));\n    } else if (item.status === \"DEPLOY\" || item.status === \"FAIL_SETUP\") {\n      // dispatch(stakingActions.setupStaking(item._id));\n    } else if (item.status === \"SETUP\" || item.status === \"FAIL_REWARD\") {\n      setStakingIdForReward(item._id);\n    } else if (item.status === \"REWARD\") {\n      window.open(`${process.env.REACT_APP_STAKING_APP_URL}/${item._id}`, \"_blank\", \"noopener,noreferrer\");\n    }\n  };\n\n  const onSubmit = async (values: any) => {\n    // dispatch(stakingActions.addRewardStaking(stakingIdForReward, values));\n    reset(initialValues);\n    setStakingIdForReward(undefined);\n    // dispatch(\n    //   stakingActions.createStaking({\n    //     ...values,\n    //     stakingStarts: moment(values.stakingStarts).format(),\n    //     stakingEnds: moment(values.stakingEnds).format(),\n    //     withdrawStarts: moment(values.withdrawStarts).format(),\n    //     withdrawEnds: moment(values.withdrawEnds).format(),\n    //   })\n    // );\n  };\n\n  return (\n    <FContainer type={\"fluid\"}>\n      {/* <FCard variant={\"futuristic-secondary\"}> */}\n      {/* {actionLoading ? (\n        <FLoader loading={actionLoading}></FLoader>\n      ) : ( */}\n      {/* {showMessage && (\n        <FResponseBar title=\"Contract deployed, Please fund this contract address with Algos to pay inner tx fee before setup.\" show={true} variant=\"success\"></FResponseBar>\n      )} */}\n      <FTable>\n        <Datatable tableHeaders={header} tableBody={body} rowsPerPage={10} />\n      </FTable>\n      {/* )} */}\n      {/* </FCard> */}\n      <FDialog title={\"Add reward\"} size={\"medium\"} show={stakingIdForReward} showClose={true} onHide={() => setStakingIdForReward(undefined)}>\n        <form autoComplete=\"true\" onSubmit={handleSubmit(onSubmit)}>\n          <FGrid className={\"f-mt-1\"}>\n            <FGridItem>\n              <FInputText\n                label=\"Reward Amount\"\n                name=\"rewardAmount\"\n                type=\"text\"\n                className={\"w-100\"}\n                placeholder=\"0\"\n                register={register}\n                validations={{\n                  required: {\n                    value: true,\n                    message: \"Reward amount is required\",\n                  },\n                }}\n                error={errors[\"rewardAmount\"]?.message ? errors[\"rewardAmount\"]?.message : \"\"}\n              />\n            </FGridItem>\n            <FGridItem>\n              <FInputText\n                label=\"Withdrawable Amount\"\n                name=\"withdrawableAmount\"\n                type=\"text\"\n                className={\"w-100 f-mt-1\"}\n                placeholder=\"0\"\n                register={register}\n                validations={{\n                  required: {\n                    value: true,\n                    message: \"Withdrawable amount is required\",\n                  },\n                }}\n                error={errors[\"withdrawableAmount\"]?.message ? errors[\"withdrawableAmount\"]?.message : \"\"}\n              />\n            </FGridItem>\n            <FGridItem alignX={\"end\"}>\n              <FButton\n                type=\"submit\"\n                disabled={false}\n                title={\"Add Reward\"}\n                className={\"f-mt-1 f-mb-2\"}\n                // postfix={isSubmitting && <ClipLoader color=\"#fff\" size={20} />}\n              ></FButton>\n            </FGridItem>\n          </FGrid>\n        </form>\n      </FDialog>\n    </FContainer>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}