{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={isWalletConnected:false,connectedAccounts:[],withdrawalItems:[],selectedAccount:undefined,shouldStake:false,isStaked:false,stakeTransaction:undefined,signedAddresses:[],stakeWithdrawSucess:0,config:undefined,tokenInfo:{symbol:'TOKEN_SYMBOL',name:'TOKEN_NAME'}};export var casperSlice=createSlice({name:\"casper\",initialState:initialState,reducers:{connectWallet:function connectWallet(state,action){var _action$payload$conne;state.isWalletConnected=true;state.connectedAccounts=action.payload.connectedAccounts;state.selectedAccount=(_action$payload$conne=action.payload.connectedAccounts)!==null&&_action$payload$conne!==void 0&&_action$payload$conne.length?action.payload.connectedAccounts[0]:undefined;},fetchWithdrawals:function fetchWithdrawals(state,action){console.log(action,'actionaction');state.withdrawalItems=action.payload.withdrawalItems;},resetWallet:function resetWallet(state,action){state.isWalletConnected=false;state.connectedAccounts=[];state.selectedAddress=undefined;state.isStaked=false;},selectAccount:function selectAccount(state,action){state.selectedAccount=action.payload.selectedAccount;},setShouldStake:function setShouldStake(state){state.shouldStake=true;},signed:function signed(state,action){console.log(action);state.signedAddresses=action.payload;},staked:function staked(state,action){state.selectedAccount=action.payload.selectedAccount;state.isStaked=true;state.stakeTransaction=action.payload.stakeTransaction;},stakeWithdrawSucess:function stakeWithdrawSucess(state){state.stakeWithdrawSucess=state.stakeWithdrawSucess+1;},configLoaded:function configLoaded(state,action){state.config=action.payload.config;state.tokenInfo=action.payload.tokenInfo;}}});","map":{"version":3,"names":["createSlice","initialState","isWalletConnected","connectedAccounts","withdrawalItems","selectedAccount","undefined","shouldStake","isStaked","stakeTransaction","signedAddresses","stakeWithdrawSucess","config","tokenInfo","symbol","name","casperSlice","reducers","connectWallet","state","action","payload","length","fetchWithdrawals","console","log","resetWallet","selectedAddress","selectAccount","setShouldStake","signed","staked","configLoaded"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/redux/casper/casperSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    isWalletConnected: false,\n    connectedAccounts: [],\n    withdrawalItems: [],\n    selectedAccount: undefined,\n    shouldStake: false,\n    isStaked: false,\n    stakeTransaction: undefined,\n    signedAddresses: [],\n    stakeWithdrawSucess: 0,\n    config: undefined,\n    tokenInfo: {\n      symbol: 'TOKEN_SYMBOL',\n      name: 'TOKEN_NAME',\n    }\n  };\n  \n  export const casperSlice = createSlice({\n    name: \"casper\",\n    initialState: initialState,\n    reducers: {\n      connectWallet: (state, action) => {\n        state.isWalletConnected = true;\n        state.connectedAccounts = action.payload.connectedAccounts;\n        state.selectedAccount = action.payload.connectedAccounts?.length\n          ? action.payload.connectedAccounts[0]\n          : undefined;\n      },\n      fetchWithdrawals: (state, action) => {\n        console.log(action, 'actionaction')\n        state.withdrawalItems = action.payload.withdrawalItems;\n      },\n      resetWallet: (state, action) => {\n        state.isWalletConnected = false;\n        state.connectedAccounts = [];\n        state.selectedAddress = undefined;\n        state.isStaked = false;\n      },\n      selectAccount: (state, action) => {\n        state.selectedAccount = action.payload.selectedAccount;\n      },\n      setShouldStake: (state) => {\n        state.shouldStake = true;\n      },\n      signed: (state, action) => {\n        console.log(action)\n        state.signedAddresses = action.payload\n      },\n      staked: (state, action) => {\n        state.selectedAccount = action.payload.selectedAccount;\n        state.isStaked = true;\n        state.stakeTransaction = action.payload.stakeTransaction;\n      },\n      stakeWithdrawSucess: (state) => {\n        state.stakeWithdrawSucess = state.stakeWithdrawSucess + 1;\n      },\n      configLoaded: (state, action) => {\n        state.config = action.payload.config;\n        state.tokenInfo = action.payload.tokenInfo;\n      },\n    },\n  });\n  "],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAMC,aAAY,CAAG,CACjBC,iBAAiB,CAAE,KAAK,CACxBC,iBAAiB,CAAE,EAAE,CACrBC,eAAe,CAAE,EAAE,CACnBC,eAAe,CAAEC,SAAS,CAC1BC,WAAW,CAAE,KAAK,CAClBC,QAAQ,CAAE,KAAK,CACfC,gBAAgB,CAAEH,SAAS,CAC3BI,eAAe,CAAE,EAAE,CACnBC,mBAAmB,CAAE,CAAC,CACtBC,MAAM,CAAEN,SAAS,CACjBO,SAAS,CAAE,CACTC,MAAM,CAAE,cAAc,CACtBC,IAAI,CAAE,YACR,CACF,CAAC,CAED,MAAO,IAAMC,YAAW,CAAGhB,WAAW,CAAC,CACrCe,IAAI,CAAE,QAAQ,CACdd,YAAY,CAAEA,YAAY,CAC1BgB,QAAQ,CAAE,CACRC,aAAa,CAAE,uBAACC,KAAK,CAAEC,MAAM,CAAK,2BAChCD,KAAK,CAACjB,iBAAiB,CAAG,IAAI,CAC9BiB,KAAK,CAAChB,iBAAiB,CAAGiB,MAAM,CAACC,OAAO,CAAClB,iBAAiB,CAC1DgB,KAAK,CAACd,eAAe,CAAG,uBAAAe,MAAM,CAACC,OAAO,CAAClB,iBAAiB,0CAAhC,sBAAkCmB,MAAM,CAC5DF,MAAM,CAACC,OAAO,CAAClB,iBAAiB,CAAC,CAAC,CAAC,CACnCG,SAAS,CACf,CAAC,CACDiB,gBAAgB,CAAE,0BAACJ,KAAK,CAAEC,MAAM,CAAK,CACnCI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAE,cAAc,CAAC,CACnCD,KAAK,CAACf,eAAe,CAAGgB,MAAM,CAACC,OAAO,CAACjB,eAAe,CACxD,CAAC,CACDsB,WAAW,CAAE,qBAACP,KAAK,CAAEC,MAAM,CAAK,CAC9BD,KAAK,CAACjB,iBAAiB,CAAG,KAAK,CAC/BiB,KAAK,CAAChB,iBAAiB,CAAG,EAAE,CAC5BgB,KAAK,CAACQ,eAAe,CAAGrB,SAAS,CACjCa,KAAK,CAACX,QAAQ,CAAG,KAAK,CACxB,CAAC,CACDoB,aAAa,CAAE,uBAACT,KAAK,CAAEC,MAAM,CAAK,CAChCD,KAAK,CAACd,eAAe,CAAGe,MAAM,CAACC,OAAO,CAAChB,eAAe,CACxD,CAAC,CACDwB,cAAc,CAAE,wBAACV,KAAK,CAAK,CACzBA,KAAK,CAACZ,WAAW,CAAG,IAAI,CAC1B,CAAC,CACDuB,MAAM,CAAE,gBAACX,KAAK,CAAEC,MAAM,CAAK,CACzBI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC,CACnBD,KAAK,CAACT,eAAe,CAAGU,MAAM,CAACC,OAAO,CACxC,CAAC,CACDU,MAAM,CAAE,gBAACZ,KAAK,CAAEC,MAAM,CAAK,CACzBD,KAAK,CAACd,eAAe,CAAGe,MAAM,CAACC,OAAO,CAAChB,eAAe,CACtDc,KAAK,CAACX,QAAQ,CAAG,IAAI,CACrBW,KAAK,CAACV,gBAAgB,CAAGW,MAAM,CAACC,OAAO,CAACZ,gBAAgB,CAC1D,CAAC,CACDE,mBAAmB,CAAE,6BAACQ,KAAK,CAAK,CAC9BA,KAAK,CAACR,mBAAmB,CAAGQ,KAAK,CAACR,mBAAmB,CAAG,CAAC,CAC3D,CAAC,CACDqB,YAAY,CAAE,sBAACb,KAAK,CAAEC,MAAM,CAAK,CAC/BD,KAAK,CAACP,MAAM,CAAGQ,MAAM,CAACC,OAAO,CAACT,MAAM,CACpCO,KAAK,CAACN,SAAS,CAAGO,MAAM,CAACC,OAAO,CAACR,SAAS,CAC5C,CACF,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}