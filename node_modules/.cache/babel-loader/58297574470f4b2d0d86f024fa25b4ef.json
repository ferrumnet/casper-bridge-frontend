{"ast":null,"code":"export let WALLET_TYPES;\n(function (WALLET_TYPES) {\n  WALLET_TYPES[WALLET_TYPES[\"NONE\"] = 0] = \"NONE\";\n  WALLET_TYPES[WALLET_TYPES[\"META_MASK\"] = 1] = \"META_MASK\";\n})(WALLET_TYPES || (WALLET_TYPES = {}));\nexport const defaultWalletState = {\n  isConnected: false,\n  isConnecting: false,\n  currentWallet: WALLET_TYPES.NONE,\n  walletAddress: \"\",\n  currentWalletNetwork: 0,\n  walletBalance: \"\",\n  error: \"\",\n  networkClient: undefined,\n  isWeb3Initialized: false\n};","map":{"version":3,"names":["WALLET_TYPES","defaultWalletState","isConnected","isConnecting","currentWallet","NONE","walletAddress","currentWalletNetwork","walletBalance","error","networkClient","undefined","isWeb3Initialized"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/connector/wallet-connector/walletConnectorInterfaces.ts"],"sourcesContent":["import Web3 from \"web3\";\n\nexport enum WALLET_TYPES {\n  NONE,\n  META_MASK,\n}\n\nexport interface WALLET_CONNECTOR_STATE {\n  isConnected: Boolean;\n  isConnecting: Boolean;\n  currentWallet: WALLET_TYPES;\n  walletAddress: String;\n  currentWalletNetwork: number;\n  walletBalance: String;\n  error: String;\n  networkClient: Web3 | undefined;\n  isWeb3Initialized: Boolean;\n}\n\nexport const defaultWalletState: WALLET_CONNECTOR_STATE = {\n  isConnected: false,\n  isConnecting: false,\n  currentWallet: WALLET_TYPES.NONE,\n  walletAddress: \"\",\n  currentWalletNetwork: 0,\n  walletBalance: \"\",\n  error: \"\",\n  networkClient: undefined,\n  isWeb3Initialized: false,\n};\n\nexport interface WalletConnectorProps {\n  WalletConnectView: any;\n  WalletConnectModal: any;\n  WalletConnectViewProps?: any;\n  isAuthenticationNeeded?: boolean;\n}\n"],"mappings":"AAEA,WAAYA,YAAY;AAGvB,WAHWA,YAAY;EAAZA,YAAY,CAAZA,YAAY;EAAZA,YAAY,CAAZA,YAAY;AAAA,GAAZA,YAAY,KAAZA,YAAY;AAiBxB,OAAO,MAAMC,kBAA0C,GAAG;EACxDC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAEJ,YAAY,CAACK,IAAI;EAChCC,aAAa,EAAE,EAAE;EACjBC,oBAAoB,EAAE,CAAC;EACvBC,aAAa,EAAE,EAAE;EACjBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAEC,SAAS;EACxBC,iBAAiB,EAAE;AACrB,CAAC"},"metadata":{},"sourceType":"module"}