{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { defaultWalletApplicationWrapper } from \"../walletApplicationWrapperInterfaces\";\nconst defaultWalletApplicationWrapperstate = {\n  ...defaultWalletApplicationWrapper\n};\nexport const applicationWrapperSlice = createSlice({\n  name: \"applicationWrapper\",\n  initialState: defaultWalletApplicationWrapperstate,\n  reducers: {\n    walletApplicationDefaultsLoaded: (state, action) => {\n      state.groupInfo = action.payload.groupInfo;\n      state.supportedCurrencies = action.payload.supportedCurrencies;\n      state.tokenList = action.payload.tokenList;\n      state.supportedNetworks = action.payload.supportedNetworks;\n      state.filteredAssets = action.payload.filteredAssets;\n      state.currencyPairs = action.payload.currencyPairs;\n      state.walletWrapperInitialized = true;\n    },\n    walletApplicationUser: (state, action) => {\n      // console.log(action.payload);\n      state.userProfile = action.payload.userProfile;\n      state.authToken = action.payload.authToken;\n    },\n    resetWalletApplicationUser: state => {\n      state.userProfile = defaultWalletApplicationWrapper.userProfile;\n      state.authToken = defaultWalletApplicationWrapper.authToken;\n    },\n    swapToAndFromToken: (state, action) => {\n      state.fromInfo = action.payload.fromInfo;\n      state.toInfo = action.payload.toInfo;\n    },\n    updateToInfo: (state, action) => {\n      state.toInfo = action.payload.toInfo;\n    },\n    updateFromInfo: (state, action) => {\n      state.fromInfo = action.payload.fromInfo;\n    },\n    availableLiquidity: (state, action) => {\n      state.availableLiquidity = action.payload.availableLiquidity;\n    },\n    updateAmount: (state, action) => {\n      state.amount = action.payload.amount;\n    },\n    updateFee: (state, action) => {\n      state.fee = action.payload.fee;\n    },\n    updateMaxBalance: (state, action) => {\n      state.maxBalance = action.payload.maxBalance;\n    },\n    getNetworkTransactions: (state, action) => {\n      state.networkTransactions = action.payload.networkTransactions;\n    }\n  }\n});","map":{"version":3,"names":["createSlice","defaultWalletApplicationWrapper","defaultWalletApplicationWrapperstate","applicationWrapperSlice","name","initialState","reducers","walletApplicationDefaultsLoaded","state","action","groupInfo","payload","supportedCurrencies","tokenList","supportedNetworks","filteredAssets","currencyPairs","walletWrapperInitialized","walletApplicationUser","userProfile","authToken","resetWalletApplicationUser","swapToAndFromToken","fromInfo","toInfo","updateToInfo","updateFromInfo","availableLiquidity","updateAmount","amount","updateFee","fee","updateMaxBalance","maxBalance","getNetworkTransactions","networkTransactions"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/redux/walletApplicationWrapperSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  defaultWalletApplicationWrapper,\n  WALLET_APPLICATION_WRAPPER_STATE,\n} from \"../walletApplicationWrapperInterfaces\";\n\nconst defaultWalletApplicationWrapperstate: WALLET_APPLICATION_WRAPPER_STATE = {\n  ...defaultWalletApplicationWrapper,\n};\n\nexport const applicationWrapperSlice = createSlice({\n  name: \"applicationWrapper\",\n  initialState: defaultWalletApplicationWrapperstate,\n  reducers: {\n    walletApplicationDefaultsLoaded: (state, action) => {\n      state.groupInfo = action.payload.groupInfo;\n      state.supportedCurrencies = action.payload.supportedCurrencies;\n      state.tokenList = action.payload.tokenList;\n      state.supportedNetworks = action.payload.supportedNetworks;\n      state.filteredAssets = action.payload.filteredAssets;\n      state.currencyPairs = action.payload.currencyPairs;\n      state.walletWrapperInitialized = true;\n    },\n    walletApplicationUser: (state, action) => {\n      // console.log(action.payload);\n      state.userProfile = action.payload.userProfile;\n      state.authToken = action.payload.authToken;\n    },\n    resetWalletApplicationUser: (state) => {\n      state.userProfile = defaultWalletApplicationWrapper.userProfile;\n      state.authToken = defaultWalletApplicationWrapper.authToken;\n    },\n    swapToAndFromToken: (state, action) => {\n      state.fromInfo = action.payload.fromInfo;\n      state.toInfo = action.payload.toInfo;\n    },\n    updateToInfo: (state, action) => {\n      state.toInfo = action.payload.toInfo;\n    },\n    updateFromInfo: (state, action) => {\n      state.fromInfo = action.payload.fromInfo;\n    },\n    availableLiquidity: (state, action) => {\n      state.availableLiquidity = action.payload.availableLiquidity;\n    },\n    updateAmount: (state, action) => {\n      state.amount = action.payload.amount;\n    },\n    updateFee: (state, action) => {\n      state.fee = action.payload.fee;\n    },\n    updateMaxBalance: (state, action) => {\n      state.maxBalance = action.payload.maxBalance;\n    },\n    getNetworkTransactions: (state, action) => {\n      state.networkTransactions = action.payload.networkTransactions;\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,+BAA+B,QAE1B,uCAAuC;AAE9C,MAAMC,oCAAsE,GAAG;EAC7E,GAAGD;AACL,CAAC;AAED,OAAO,MAAME,uBAAuB,GAAGH,WAAW,CAAC;EACjDI,IAAI,EAAE,oBAAoB;EAC1BC,YAAY,EAAEH,oCAAoC;EAClDI,QAAQ,EAAE;IACRC,+BAA+B,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACE,SAAS,GAAGD,MAAM,CAACE,OAAO,CAACD,SAAS;MAC1CF,KAAK,CAACI,mBAAmB,GAAGH,MAAM,CAACE,OAAO,CAACC,mBAAmB;MAC9DJ,KAAK,CAACK,SAAS,GAAGJ,MAAM,CAACE,OAAO,CAACE,SAAS;MAC1CL,KAAK,CAACM,iBAAiB,GAAGL,MAAM,CAACE,OAAO,CAACG,iBAAiB;MAC1DN,KAAK,CAACO,cAAc,GAAGN,MAAM,CAACE,OAAO,CAACI,cAAc;MACpDP,KAAK,CAACQ,aAAa,GAAGP,MAAM,CAACE,OAAO,CAACK,aAAa;MAClDR,KAAK,CAACS,wBAAwB,GAAG,IAAI;IACvC,CAAC;IACDC,qBAAqB,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACxC;MACAD,KAAK,CAACW,WAAW,GAAGV,MAAM,CAACE,OAAO,CAACQ,WAAW;MAC9CX,KAAK,CAACY,SAAS,GAAGX,MAAM,CAACE,OAAO,CAACS,SAAS;IAC5C,CAAC;IACDC,0BAA0B,EAAGb,KAAK,IAAK;MACrCA,KAAK,CAACW,WAAW,GAAGlB,+BAA+B,CAACkB,WAAW;MAC/DX,KAAK,CAACY,SAAS,GAAGnB,+BAA+B,CAACmB,SAAS;IAC7D,CAAC;IACDE,kBAAkB,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACe,QAAQ,GAAGd,MAAM,CAACE,OAAO,CAACY,QAAQ;MACxCf,KAAK,CAACgB,MAAM,GAAGf,MAAM,CAACE,OAAO,CAACa,MAAM;IACtC,CAAC;IACDC,YAAY,EAAE,CAACjB,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACgB,MAAM,GAAGf,MAAM,CAACE,OAAO,CAACa,MAAM;IACtC,CAAC;IACDE,cAAc,EAAE,CAAClB,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACe,QAAQ,GAAGd,MAAM,CAACE,OAAO,CAACY,QAAQ;IAC1C,CAAC;IACDI,kBAAkB,EAAE,CAACnB,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACmB,kBAAkB,GAAGlB,MAAM,CAACE,OAAO,CAACgB,kBAAkB;IAC9D,CAAC;IACDC,YAAY,EAAE,CAACpB,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACqB,MAAM,GAAGpB,MAAM,CAACE,OAAO,CAACkB,MAAM;IACtC,CAAC;IACDC,SAAS,EAAE,CAACtB,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACuB,GAAG,GAAGtB,MAAM,CAACE,OAAO,CAACoB,GAAG;IAChC,CAAC;IACDC,gBAAgB,EAAE,CAACxB,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACyB,UAAU,GAAGxB,MAAM,CAACE,OAAO,CAACsB,UAAU;IAC9C,CAAC;IACDC,sBAAsB,EAAE,CAAC1B,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAAC2B,mBAAmB,GAAG1B,MAAM,CAACE,OAAO,CAACwB,mBAAmB;IAChE;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}