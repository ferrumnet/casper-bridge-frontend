{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/CasperSwap.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { FButton, FCard, FGrid, FGridItem, FInputText, FItem, FTypo } from \"ferrum-design-system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStakingInfo } from \"../utils/DateUtil\";\nimport { connectWallet as connectWalletDispatch } from '../redux/casper/casperActions';\nimport { useHistory } from \"react-router\";\nimport './layout.scss';\nimport { CasperServiceByJsonRPC, CLPublicKey, CLValueBuilder, decodeBase16, DeployUtil, RuntimeArgs, Signer, CasperClient } from \"casper-js-sdk\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\nexport const CasperSwap = () => {\n  _s();\n  const navigate = useHistory();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState();\n  const [targetNetwork, setTargetNetwork] = useState('1');\n  const [processMsg, setProcessMsg] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const connection = useSelector(state => state.casper.connect);\n  const {\n    connect: {\n      config,\n      selectedAccount,\n      isWalletConnected,\n      signedAddresses\n    }\n  } = useSelector(state => state.casper);\n\n  // const [stakingCap, setStakingCap] = useState<any>(undefined);\n  const [stakeSoFar, setStakeSoFar] = useState(undefined);\n  const [youStakedBalance, setYourStakedBalance] = useState(undefined);\n  const stakingInfo = getStakingInfo(config === null || config === void 0 ? void 0 : config.stakingEnds, config === null || config === void 0 ? void 0 : config.stakingStarts, config === null || config === void 0 ? void 0 : config.withdrawStarts, config === null || config === void 0 ? void 0 : config.withdrawEnds);\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    console.log(isConnected, connection, 'isConnectedisConnected');\n    if (isConnected) {\n      var _latestBlock$block, _latestBlock$block2, _latestBlock$block2$h;\n      const publicKey = await window.casperlabsHelper.getActivePublicKey();\n      console.log(publicKey);\n      //textAddress.textContent += publicKey;\n\n      const latestBlock = await casperService.getLatestBlockInfo();\n      console.log(latestBlock);\n      const root = await casperService.getStateRootHash(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block = latestBlock.block) === null || _latestBlock$block === void 0 ? void 0 : _latestBlock$block.hash);\n      console.log(latestBlock, root);\n      await connectWalletDispatch([{\n        \"address\": publicKey\n      }])(dispatch);\n      const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n      console.log(balanceUref);\n\n      // @ts-ignore\n      const balance = await casperService.getAccountBalance(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block2 = latestBlock.block) === null || _latestBlock$block2 === void 0 ? void 0 : (_latestBlock$block2$h = _latestBlock$block2.header) === null || _latestBlock$block2$h === void 0 ? void 0 : _latestBlock$block2$h.state_root_hash, balanceUref);\n      console.log(balance.toString());\n      //textBalance.textContent = `PublicKeyHex ${balance.toString()}`;\n    }\n  }\n\n  const connectWallet = async () => {\n    await window.casperlabsHelper.requestConnection();\n    const isConnected = await window.casperlabsHelper.isConnected();\n    if (isConnected) {\n      await AccountInformation();\n    }\n  };\n  // console.log(stakingCap, stakeSoFar, youStakedBalance);\n\n  const performSwap = async () => {\n    if (isWalletConnected && selectedAccount) {\n      setLoading(true);\n      try {\n        // console.log(selectedAccount?.address, Number(amount));\n        if (amount && Number(amount) > 0) {\n          const publicKeyHex = selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.address;\n          const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n          const deployParams = new DeployUtil.DeployParams(senderPublicKey, 'casper-test');\n          const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(amount),\n            \"token_address\": CLValueBuilder.string('contract-package-wasme222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473'),\n            \"target_network\": CLValueBuilder.u256('1'),\n            \"target_token\": CLValueBuilder.string('qwe')\n          });\n          const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(decodeBase16('0a5a024fbc0c796ec6165de203e1e123fe0c207f943ebe1c542d77d333ff4510'), 'swap', args);\n          const payment = DeployUtil.standardPayment(5000000000);\n          const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n          const deployJson = DeployUtil.deployToJson(deploy);\n          Signer.sign(deployJson, publicKeyHex).then(async signedDeployJson => {\n            const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n            console.log(signedDeploy);\n            if (signedDeploy.ok) {\n              const res = await casperClient.putDeploy(signedDeploy.val);\n              console.log(res, 'resres');\n              setProcessMsg(res);\n              setLoading(false);\n              setShowConfirmation(true);\n            }\n          });\n          // navigate.push(`/${config._id}`);\n          //toast.success(`${amount} tokens are staked successfully`);\n        } else {\n          toast.error(\"Amount must be greater than 0\");\n        }\n      } catch (e) {\n        console.log(\"ERROR : \", e);\n        toast.error(\"An error occured please see console for details\");\n        navigate.push(`/${config._id}`);\n      } finally {\n        //setLoading(false)\n      }\n    } else {\n      console.log(\"heelelll\");\n      navigate.push(`/${config._id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FCard, {\n      className: \"card-staking f-mb-2\",\n      children: /*#__PURE__*/_jsxDEV(FGrid, {\n        alignX: \"center\",\n        className: \"f-mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(FTypo, {\n          size: 18,\n          align: \"center\",\n          className: \"f-mb-14 f-mt--7\",\n          children: \"SWAP FROM BSC TO CASPER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FGridItem, {\n          alignX: \"center\",\n          size: [8, 8, 12],\n          className: \"f-m-auto f-mb-1\",\n          children: /*#__PURE__*/_jsxDEV(FItem, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"AMOUNT TO SWAP \",\n              placeholder: \"0\",\n              value: amount,\n              onChange: e => {\n                e.preventDefault();\n                const re = /^-?\\d*\\.?\\d*$/;\n                if (e.target.value === \"\" || re.test(e.target.value)) {\n                  setAmount(e.target.value);\n                }\n              },\n              postfix: /*#__PURE__*/_jsxDEV(FTypo, {\n                className: \"f-pr-1\",\n                color: \"#dab46e\",\n                children: \"TOKEN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"Target Network\",\n              disabled: true,\n              value: '1',\n              onChange: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"Target Token\",\n              disabled: true,\n              value: 'qwe',\n              onChange: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), connection.isWalletConnected && /*#__PURE__*/_jsxDEV(FButton, {\n              title: \"SWAP\",\n              className: \"w-100 f-mt-2\",\n              onClick: () => performSwap()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), !connection.isWalletConnected && /*#__PURE__*/_jsxDEV(FButton, {\n              title: \"Connect Casper Signer\",\n              className: \"w-100 f-mt-2\",\n              onClick: () => connectWallet()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FCard, {\n      className: \"card-staking f-mb-2\",\n      children: /*#__PURE__*/_jsxDEV(FGrid, {\n        children: [/*#__PURE__*/_jsxDEV(FTypo, {\n          size: 18,\n          align: \"center\",\n          className: \"f-mb--5 f-mt--7\",\n          children: \"SWAP FROM CASPER TO BSC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FGridItem, {\n          alignX: \"center\",\n          size: [8, 8, 12],\n          className: \"f-m-auto f-mb-1\",\n          children: /*#__PURE__*/_jsxDEV(FItem, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"AMOUNT TO SWAP\",\n              placeholder: \"0\",\n              value: '',\n              onChange: e => {\n                e.preventDefault();\n                const re = /^-?\\d*\\.?\\d*$/;\n                if (e.target.value === \"\" || re.test(e.target.value)) {\n                  //setAmount(e.target.value);\n                }\n              },\n              postfix: /*#__PURE__*/_jsxDEV(FTypo, {\n                className: \"f-pr-1\",\n                color: \"#dab46e\",\n                children: \"TOKEN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), connection.isWalletConnected && /*#__PURE__*/_jsxDEV(FButton, {\n              title: \"SWAP\",\n              className: \"w-100 f-mt-2\",\n              onClick: () => performSwap()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this), !connection.isWalletConnected && /*#__PURE__*/_jsxDEV(FButton, {\n              title: \"Connect Metamask\",\n              className: \"w-100 f-mt-2\",\n              onClick: () => connectWallet()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CasperSwap, \"hXgGAanDxJ83M6+1JsYLBMdMSQM=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n_c = CasperSwap;\nexport default CasperSwap;\nvar _c;\n$RefreshReg$(_c, \"CasperSwap\");","map":{"version":3,"names":["useState","FButton","FCard","FGrid","FGridItem","FInputText","FItem","FTypo","useDispatch","useSelector","getStakingInfo","connectWallet","connectWalletDispatch","useHistory","CasperServiceByJsonRPC","CLPublicKey","CLValueBuilder","decodeBase16","DeployUtil","RuntimeArgs","Signer","CasperClient","toast","RPC_API","casperService","casperClient","CasperSwap","navigate","dispatch","loading","setLoading","amount","setAmount","targetNetwork","setTargetNetwork","processMsg","setProcessMsg","showConfirmation","setShowConfirmation","connection","state","casper","connect","config","selectedAccount","isWalletConnected","signedAddresses","stakeSoFar","setStakeSoFar","undefined","youStakedBalance","setYourStakedBalance","stakingInfo","stakingEnds","stakingStarts","withdrawStarts","withdrawEnds","AccountInformation","isConnected","window","casperlabsHelper","console","log","publicKey","getActivePublicKey","latestBlock","getLatestBlockInfo","root","getStateRootHash","block","hash","balanceUref","getAccountBalanceUrefByPublicKey","fromHex","balance","getAccountBalance","header","state_root_hash","toString","requestConnection","performSwap","Number","publicKeyHex","address","senderPublicKey","deployParams","DeployParams","args","fromMap","u256","string","session","ExecutableDeployItem","newStoredContractByHash","payment","standardPayment","deploy","makeDeploy","deployJson","deployToJson","sign","then","signedDeployJson","signedDeploy","deployFromJson","ok","res","putDeploy","val","error","e","push","_id","preventDefault","re","target","value","test"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/CasperSwap.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { FButton, FCard, FGrid, FGridItem, FInputText, FItem, FTypo } from \"ferrum-design-system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStakingInfo } from \"../utils/DateUtil\";\nimport { connectWallet, connectWallet as connectWalletDispatch } from '../redux/casper/casperActions';\nimport { useHistory, useParams } from \"react-router\";\nimport './layout.scss';\nimport { CasperServiceByJsonRPC, CLPublicKey, CLValue, \n  CLValueBuilder, \n  decodeBase16, \n  DeployUtil,\n  RuntimeArgs,\n  Signer,\n  CasperClient\n} from \"casper-js-sdk\";\nimport toast from \"react-hot-toast\";\n\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\n\nexport const CasperSwap = () => {\n  const navigate = useHistory();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState();\n  const [targetNetwork, setTargetNetwork] = useState('1');\n  const [processMsg, setProcessMsg] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const connection = useSelector((state: any) => state.casper.connect)\n  const { connect: { config, selectedAccount, isWalletConnected, signedAddresses } } = useSelector((state: any) => state.casper);\n\n  // const [stakingCap, setStakingCap] = useState<any>(undefined);\n  const [stakeSoFar, setStakeSoFar] = useState<any>(undefined);\n  const [youStakedBalance, setYourStakedBalance] = useState<any>(undefined);\n\n  const stakingInfo = getStakingInfo(\n    config?.stakingEnds,\n    config?.stakingStarts,\n    config?.withdrawStarts,\n    config?.withdrawEnds\n  );\n\n\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    console.log(isConnected, connection, 'isConnectedisConnected')\n    if (isConnected) {\n        const publicKey = await window.casperlabsHelper.getActivePublicKey();\n        console.log(publicKey);\n        //textAddress.textContent += publicKey;\n\n        const latestBlock = await casperService.getLatestBlockInfo();\n        console.log(latestBlock);\n\n        const root = await casperService.getStateRootHash(latestBlock?.block?.hash);\n        console.log(latestBlock, root)\n\n        await connectWalletDispatch([{\n          \"address\": publicKey\n        }])(dispatch)\n        const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n        console.log(balanceUref)\n        \n        // @ts-ignore\n        const balance = await casperService.getAccountBalance(latestBlock?.block?.header?.state_root_hash, balanceUref);\n        console.log(balance.toString())\n        //textBalance.textContent = `PublicKeyHex ${balance.toString()}`;\n    }\n  }\n\n\n  const connectWallet = async () => {\n    await window.casperlabsHelper.requestConnection()\n\n    const isConnected = await window.casperlabsHelper.isConnected();\n\n    if (isConnected) {\n      await AccountInformation();\n    }   \n  };\n  // console.log(stakingCap, stakeSoFar, youStakedBalance);\n\n  const performSwap = async () => {\n    if (\n      isWalletConnected &&\n      selectedAccount\n    ) {\n      setLoading(true)\n      try {\n        // console.log(selectedAccount?.address, Number(amount));\n        if (amount && Number(amount) > 0) {\n          const publicKeyHex = selectedAccount?.address;\n          const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n\n          const deployParams = new DeployUtil.DeployParams(\n            senderPublicKey,\n            'casper-test'\n          );\n\n          const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(amount),\n            \"token_address\": CLValueBuilder.string('contract-package-wasme222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473'),\n            \"target_network\": CLValueBuilder.u256('1'),\n            \"target_token\": CLValueBuilder.string('qwe'),\n          });\n\n          const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(\n            decodeBase16('0a5a024fbc0c796ec6165de203e1e123fe0c207f943ebe1c542d77d333ff4510'),\n            'swap',\n            args\n          );\n\n          const payment = DeployUtil.standardPayment(5000000000);\n\n          const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n\n          const deployJson: any = DeployUtil.deployToJson(deploy);\n        \n          Signer.sign(deployJson, publicKeyHex).then(async (signedDeployJson) => {\n            const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n            console.log(signedDeploy)\n            if (signedDeploy.ok) {\n              const res = await casperClient.putDeploy(signedDeploy.val);\n              console.log(res, 'resres');\n              setProcessMsg(res)\n              setLoading(false)\n              setShowConfirmation(true)\n            }\n            \n          });\n          // navigate.push(`/${config._id}`);\n          //toast.success(`${amount} tokens are staked successfully`);\n        } else {\n          toast.error(\"Amount must be greater than 0\");\n        }\n      } catch (e) {\n        console.log(\"ERROR : \", e);\n        toast.error(\"An error occured please see console for details\");\n        navigate.push(`/${config._id}`);\n      } finally {\n        //setLoading(false)\n      }\n\n    } else {\n      console.log(\"heelelll\")\n      navigate.push(`/${config._id}`);\n    }\n  };\n\n  return (\n    <>\n      <FCard className={\"card-staking f-mb-2\"}>\n        <FGrid alignX={\"center\"} className=\"f-mb-1\">\n          <FTypo size={18} align={\"center\"} className={\"f-mb-14 f-mt--7\"}>\n            SWAP FROM BSC TO CASPER\n          </FTypo>\n          <FGridItem alignX={\"center\"} size={[8, 8, 12]} className=\"f-m-auto f-mb-1\">\n            <FItem align={\"center\"}>    \n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"AMOUNT TO SWAP \"}\n                placeholder={\"0\"}\n                value={amount}\n                onChange={(e: any) => {\n                  e.preventDefault();\n                  const re = /^-?\\d*\\.?\\d*$/;\n                  if (e.target.value === \"\" || re.test(e.target.value)) {\n                    setAmount(e.target.value);\n                  }\n                }}\n                postfix={\n                  <FTypo className={\"f-pr-1\"} color=\"#dab46e\">\n                    TOKEN\n                  </FTypo>\n                }\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"Target Network\"}\n                disabled\n                value={'1'}\n                onChange={(e: any) => {}}\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"Target Token\"}\n                disabled\n                value={'qwe'}\n                onChange={(e: any) => {}}\n              />\n              {\n                connection.isWalletConnected && (\n                  <FButton \n                    title={\"SWAP\"}\n                    className=\"w-100 f-mt-2\"\n                    onClick={() => performSwap()}\n                  />\n                )\n              }\n              {\n                !connection.isWalletConnected && (\n                  <FButton title={\"Connect Casper Signer\"} className=\"w-100 f-mt-2\" onClick={() => connectWallet()} />\n                )\n              }\n              {\n                //     <FButton\n                //       title={stakingInfo.isStakingOpen ? \"Stake\" : stakingInfo.isEarlyWithdraw ? \"Early Withdraw\" : stakingInfo.isWithdrawOpen ? \"Maturity Withdraw\" : \"Refresh\"}\n                //       className=\"w-100 f-mt-2\"\n                //       onClick={() => {\n                //         // console.log(\"staking\");\n                //         // dispatch(algorandActions.shouldStake());\n                //         if (getStakingInfo(connection?.config?.stakingEnds, connection?.config?.stakingStarts, connection?.config?.withdrawStarts, connection?.config?.withdrawEnds).isStakingOpen) {\n                //           // navigate.push(`/${stakingId}/submit-stake`);\n                //         } else if (\n                //           getStakingInfo(connection?.config?.stakingEnds, connection?.config?.stakingStarts, connection?.config?.withdrawStarts, connection?.config?.withdrawEnds).isEarlyWithdraw ||\n                //           getStakingInfo(connection?.config?.stakingEnds, connection?.config?.stakingStarts, connection?.config?.withdrawStarts, connection?.config?.withdrawEnds).isWithdrawOpen\n                //         ) {\n                //           // console.log(stakingId, 'withdrawwww')\n                //           // navigate.push(`/${stakingId}/submit-withdraw`);\n                //         } else {\n                //           window.location.reload();\n                //         }\n                //       }}\n                //     />\n                //   )\n                // \n              }\n            </FItem>\n          </FGridItem>\n        </FGrid>\n      </FCard>\n      <FCard className={\"card-staking f-mb-2\"}>\n        <FGrid>\n          <FTypo size={18} align={\"center\"} className={\"f-mb--5 f-mt--7\"}>\n            SWAP FROM CASPER TO BSC\n          </FTypo>\n          <FGridItem alignX={\"center\"} size={[8, 8, 12]} className=\"f-m-auto f-mb-1\">\n            <FItem align={\"center\"}>\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"AMOUNT TO SWAP\"}\n                placeholder={\"0\"}\n                value={''}\n                onChange={(e: any) => {\n                  e.preventDefault();\n                  const re = /^-?\\d*\\.?\\d*$/;\n                  if (e.target.value === \"\" || re.test(e.target.value)) {\n                    //setAmount(e.target.value);\n                  }\n                }}\n                postfix={\n                  <FTypo className={\"f-pr-1\"} color=\"#dab46e\">\n                    TOKEN\n                  </FTypo>\n                }\n              />\n              {\n                connection.isWalletConnected && (\n                  <FButton \n                    title={\"SWAP\"}\n                    className=\"w-100 f-mt-2\"\n                    onClick={() => performSwap()}\n                  />\n                )\n              }\n              {\n                !connection.isWalletConnected && (\n                  <FButton title={\"Connect Metamask\"} className=\"w-100 f-mt-2\" onClick={() => connectWallet()} />\n                )\n              }\n            </FItem>\n          </FGridItem>\n        </FGrid>\n      </FCard>\n    </>\n  );\n};\n\nexport default CasperSwap\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,QAAQ,sBAAsB;AACjG,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAAwBC,aAAa,IAAIC,qBAAqB,QAAQ,+BAA+B;AACrG,SAASC,UAAU,QAAmB,cAAc;AACpD,OAAO,eAAe;AACtB,SAASC,sBAAsB,EAAEC,WAAW,EAC1CC,cAAc,EACdC,YAAY,EACZC,UAAU,EACVC,WAAW,EACXC,MAAM,EACNC,YAAY,QACP,eAAe;AACtB,OAAOC,KAAK,MAAM,iBAAiB;AAAC;AAAA;AAEpC,MAAMC,OAAO,GAAG,+BAA+B;AAE/C,MAAMC,aAAa,GAAG,IAAIV,sBAAsB,CAACS,OAAO,CAAC;AACzD,MAAME,YAAY,GAAG,IAAIJ,YAAY,CAACE,OAAO,CAAC;AAE9C,OAAO,MAAMG,UAAU,GAAG,MAAM;EAAA;EAC9B,MAAMC,QAAQ,GAAGd,UAAU,EAAE;EAC7B,MAAMe,QAAQ,GAAGpB,WAAW,EAAE;EAC9B,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,EAAE;EACtC,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,GAAG,CAAC;EACvD,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMuC,UAAU,GAAG9B,WAAW,CAAE+B,KAAU,IAAKA,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;EACpE,MAAM;IAAEA,OAAO,EAAE;MAAEC,MAAM;MAAEC,eAAe;MAAEC,iBAAiB;MAAEC;IAAgB;EAAE,CAAC,GAAGrC,WAAW,CAAE+B,KAAU,IAAKA,KAAK,CAACC,MAAM,CAAC;;EAE9H;EACA,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAMiD,SAAS,CAAC;EAC5D,MAAM,CAACC,gBAAgB,EAAEC,oBAAoB,CAAC,GAAGnD,QAAQ,CAAMiD,SAAS,CAAC;EAEzE,MAAMG,WAAW,GAAG1C,cAAc,CAChCiC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEU,WAAW,EACnBV,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEW,aAAa,EACrBX,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEY,cAAc,EACtBZ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEa,YAAY,CACrB;EAGD,eAAeC,kBAAkB,GAAG;IAClC,MAAMC,WAAW,GAAG,MAAMC,MAAM,CAACC,gBAAgB,CAACF,WAAW,EAAE;IAC/DG,OAAO,CAACC,GAAG,CAACJ,WAAW,EAAEnB,UAAU,EAAE,wBAAwB,CAAC;IAC9D,IAAImB,WAAW,EAAE;MAAA;MACb,MAAMK,SAAS,GAAG,MAAMJ,MAAM,CAACC,gBAAgB,CAACI,kBAAkB,EAAE;MACpEH,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;MACtB;;MAEA,MAAME,WAAW,GAAG,MAAMzC,aAAa,CAAC0C,kBAAkB,EAAE;MAC5DL,OAAO,CAACC,GAAG,CAACG,WAAW,CAAC;MAExB,MAAME,IAAI,GAAG,MAAM3C,aAAa,CAAC4C,gBAAgB,CAACH,WAAW,aAAXA,WAAW,6CAAXA,WAAW,CAAEI,KAAK,uDAAlB,mBAAoBC,IAAI,CAAC;MAC3ET,OAAO,CAACC,GAAG,CAACG,WAAW,EAAEE,IAAI,CAAC;MAE9B,MAAMvD,qBAAqB,CAAC,CAAC;QAC3B,SAAS,EAAEmD;MACb,CAAC,CAAC,CAAC,CAACnC,QAAQ,CAAC;MACb,MAAM2C,WAAW,GAAG,MAAM/C,aAAa,CAACgD,gCAAgC,CAACL,IAAI,EAAEpD,WAAW,CAAC0D,OAAO,CAACV,SAAS,CAAC,CAAC;MAC9GF,OAAO,CAACC,GAAG,CAACS,WAAW,CAAC;;MAExB;MACA,MAAMG,OAAO,GAAG,MAAMlD,aAAa,CAACmD,iBAAiB,CAACV,WAAW,aAAXA,WAAW,8CAAXA,WAAW,CAAEI,KAAK,iFAAlB,oBAAoBO,MAAM,0DAA1B,sBAA4BC,eAAe,EAAEN,WAAW,CAAC;MAC/GV,OAAO,CAACC,GAAG,CAACY,OAAO,CAACI,QAAQ,EAAE,CAAC;MAC/B;IACJ;EACF;;EAGA,MAAMnE,aAAa,GAAG,YAAY;IAChC,MAAMgD,MAAM,CAACC,gBAAgB,CAACmB,iBAAiB,EAAE;IAEjD,MAAMrB,WAAW,GAAG,MAAMC,MAAM,CAACC,gBAAgB,CAACF,WAAW,EAAE;IAE/D,IAAIA,WAAW,EAAE;MACf,MAAMD,kBAAkB,EAAE;IAC5B;EACF,CAAC;EACD;;EAEA,MAAMuB,WAAW,GAAG,YAAY;IAC9B,IACEnC,iBAAiB,IACjBD,eAAe,EACf;MACAd,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF;QACA,IAAIC,MAAM,IAAIkD,MAAM,CAAClD,MAAM,CAAC,GAAG,CAAC,EAAE;UAChC,MAAMmD,YAAY,GAAGtC,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEuC,OAAO;UAC7C,MAAMC,eAAe,GAAGrE,WAAW,CAAC0D,OAAO,CAACS,YAAY,CAAC;UAEzD,MAAMG,YAAY,GAAG,IAAInE,UAAU,CAACoE,YAAY,CAC9CF,eAAe,EACf,aAAa,CACd;UAED,MAAMG,IAAI,GAAGpE,WAAW,CAACqE,OAAO,CAAC;YAC/B,QAAQ,EAAExE,cAAc,CAACyE,IAAI,CAAC1D,MAAM,CAAC;YACrC,eAAe,EAAEf,cAAc,CAAC0E,MAAM,CAAC,uFAAuF,CAAC;YAC/H,gBAAgB,EAAE1E,cAAc,CAACyE,IAAI,CAAC,GAAG,CAAC;YAC1C,cAAc,EAAEzE,cAAc,CAAC0E,MAAM,CAAC,KAAK;UAC7C,CAAC,CAAC;UAEF,MAAMC,OAAO,GAAGzE,UAAU,CAAC0E,oBAAoB,CAACC,uBAAuB,CACrE5E,YAAY,CAAC,kEAAkE,CAAC,EAChF,MAAM,EACNsE,IAAI,CACL;UAED,MAAMO,OAAO,GAAG5E,UAAU,CAAC6E,eAAe,CAAC,UAAU,CAAC;UAEtD,MAAMC,MAAM,GAAG9E,UAAU,CAAC+E,UAAU,CAACZ,YAAY,EAAEM,OAAO,EAAEG,OAAO,CAAC;UAEpE,MAAMI,UAAe,GAAGhF,UAAU,CAACiF,YAAY,CAACH,MAAM,CAAC;UAEvD5E,MAAM,CAACgF,IAAI,CAACF,UAAU,EAAEhB,YAAY,CAAC,CAACmB,IAAI,CAAC,MAAOC,gBAAgB,IAAK;YACrE,MAAMC,YAAY,GAAGrF,UAAU,CAACsF,cAAc,CAACF,gBAAgB,CAAC;YAChEzC,OAAO,CAACC,GAAG,CAACyC,YAAY,CAAC;YACzB,IAAIA,YAAY,CAACE,EAAE,EAAE;cACnB,MAAMC,GAAG,GAAG,MAAMjF,YAAY,CAACkF,SAAS,CAACJ,YAAY,CAACK,GAAG,CAAC;cAC1D/C,OAAO,CAACC,GAAG,CAAC4C,GAAG,EAAE,QAAQ,CAAC;cAC1BtE,aAAa,CAACsE,GAAG,CAAC;cAClB5E,UAAU,CAAC,KAAK,CAAC;cACjBQ,mBAAmB,CAAC,IAAI,CAAC;YAC3B;UAEF,CAAC,CAAC;UACF;UACA;QACF,CAAC,MAAM;UACLhB,KAAK,CAACuF,KAAK,CAAC,+BAA+B,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVjD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEgD,CAAC,CAAC;QAC1BxF,KAAK,CAACuF,KAAK,CAAC,iDAAiD,CAAC;QAC9DlF,QAAQ,CAACoF,IAAI,CAAE,IAAGpE,MAAM,CAACqE,GAAI,EAAC,CAAC;MACjC,CAAC,SAAS;QACR;MAAA;IAGJ,CAAC,MAAM;MACLnD,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBnC,QAAQ,CAACoF,IAAI,CAAE,IAAGpE,MAAM,CAACqE,GAAI,EAAC,CAAC;IACjC;EACF,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,KAAK;MAAC,SAAS,EAAE,qBAAsB;MAAA,uBACtC,QAAC,KAAK;QAAC,MAAM,EAAE,QAAS;QAAC,SAAS,EAAC,QAAQ;QAAA,wBACzC,QAAC,KAAK;UAAC,IAAI,EAAE,EAAG;UAAC,KAAK,EAAE,QAAS;UAAC,SAAS,EAAE,iBAAkB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEvD,eACR,QAAC,SAAS;UAAC,MAAM,EAAE,QAAS;UAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE;UAAC,SAAS,EAAC,iBAAiB;UAAA,uBACxE,QAAC,KAAK;YAAC,KAAK,EAAE,QAAS;YAAA,wBACrB,QAAC,UAAU;cACT,SAAS,EAAE,QAAS;cACpB,KAAK,EAAE,iBAAkB;cACzB,WAAW,EAAE,GAAI;cACjB,KAAK,EAAEjF,MAAO;cACd,QAAQ,EAAG+E,CAAM,IAAK;gBACpBA,CAAC,CAACG,cAAc,EAAE;gBAClB,MAAMC,EAAE,GAAG,eAAe;gBAC1B,IAAIJ,CAAC,CAACK,MAAM,CAACC,KAAK,KAAK,EAAE,IAAIF,EAAE,CAACG,IAAI,CAACP,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,EAAE;kBACpDpF,SAAS,CAAC8E,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;gBAC3B;cACF,CAAE;cACF,OAAO,eACL,QAAC,KAAK;gBAAC,SAAS,EAAE,QAAS;gBAAC,KAAK,EAAC,SAAS;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAG5C;cAAA;cAAA;cAAA;YAAA,QACD,eACF,QAAC,UAAU;cACT,SAAS,EAAE,QAAS;cACpB,KAAK,EAAE,gBAAiB;cACxB,QAAQ;cACR,KAAK,EAAE,GAAI;cACX,QAAQ,EAAGN,CAAM,IAAK,CAAC;YAAE;cAAA;cAAA;cAAA;YAAA,QACzB,eACF,QAAC,UAAU;cACT,SAAS,EAAE,QAAS;cACpB,KAAK,EAAE,cAAe;cACtB,QAAQ;cACR,KAAK,EAAE,KAAM;cACb,QAAQ,EAAGA,CAAM,IAAK,CAAC;YAAE;cAAA;cAAA;cAAA;YAAA,QACzB,EAEAvE,UAAU,CAACM,iBAAiB,iBAC1B,QAAC,OAAO;cACN,KAAK,EAAE,MAAO;cACd,SAAS,EAAC,cAAc;cACxB,OAAO,EAAE,MAAMmC,WAAW;YAAG;cAAA;cAAA;cAAA;YAAA,QAEhC,EAGD,CAACzC,UAAU,CAACM,iBAAiB,iBAC3B,QAAC,OAAO;cAAC,KAAK,EAAE,uBAAwB;cAAC,SAAS,EAAC,cAAc;cAAC,OAAO,EAAE,MAAMlC,aAAa;YAAG;cAAA;cAAA;cAAA;YAAA,QAClG;UAAA;YAAA;YAAA;YAAA;UAAA;QAyBG;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA;IACN;MAAA;MAAA;MAAA;IAAA,QACF,eACR,QAAC,KAAK;MAAC,SAAS,EAAE,qBAAsB;MAAA,uBACtC,QAAC,KAAK;QAAA,wBACJ,QAAC,KAAK;UAAC,IAAI,EAAE,EAAG;UAAC,KAAK,EAAE,QAAS;UAAC,SAAS,EAAE,iBAAkB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEvD,eACR,QAAC,SAAS;UAAC,MAAM,EAAE,QAAS;UAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE;UAAC,SAAS,EAAC,iBAAiB;UAAA,uBACxE,QAAC,KAAK;YAAC,KAAK,EAAE,QAAS;YAAA,wBACrB,QAAC,UAAU;cACT,SAAS,EAAE,QAAS;cACpB,KAAK,EAAE,gBAAiB;cACxB,WAAW,EAAE,GAAI;cACjB,KAAK,EAAE,EAAG;cACV,QAAQ,EAAGmG,CAAM,IAAK;gBACpBA,CAAC,CAACG,cAAc,EAAE;gBAClB,MAAMC,EAAE,GAAG,eAAe;gBAC1B,IAAIJ,CAAC,CAACK,MAAM,CAACC,KAAK,KAAK,EAAE,IAAIF,EAAE,CAACG,IAAI,CAACP,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,EAAE;kBACpD;gBAAA;cAEJ,CAAE;cACF,OAAO,eACL,QAAC,KAAK;gBAAC,SAAS,EAAE,QAAS;gBAAC,KAAK,EAAC,SAAS;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAG5C;cAAA;cAAA;cAAA;YAAA,QACD,EAEA7E,UAAU,CAACM,iBAAiB,iBAC1B,QAAC,OAAO;cACN,KAAK,EAAE,MAAO;cACd,SAAS,EAAC,cAAc;cACxB,OAAO,EAAE,MAAMmC,WAAW;YAAG;cAAA;cAAA;cAAA;YAAA,QAEhC,EAGD,CAACzC,UAAU,CAACM,iBAAiB,iBAC3B,QAAC,OAAO;cAAC,KAAK,EAAE,kBAAmB;cAAC,SAAS,EAAC,cAAc;cAAC,OAAO,EAAE,MAAMlC,aAAa;YAAG;cAAA;cAAA;cAAA;YAAA,QAC7F;UAAA;YAAA;YAAA;YAAA;UAAA;QAEG;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA;IACN;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACP;AAEP,CAAC;AAAC,GAhQWe,UAAU;EAAA,QACJb,UAAU,EACVL,WAAW,EAMTC,WAAW,EACuDA,WAAW;AAAA;AAAA,KATrFiB,UAAU;AAkQvB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}