{"ast":null,"code":"import _objectSpread from\"/Users/kabiribraheem/Documents/casper-bridge-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from\"@reduxjs/toolkit\";// import { ME_TAG } from \"../../../../utils/const.utils\";\nimport{defaultWalletAuthenticationState}from\"./WalletAuthenticationInterfaces\";var initialWalletAUthenticationState=_objectSpread({},defaultWalletAuthenticationState);export var walletConnectorSlice=createSlice({name:\"walletAuthenticator\",initialState:initialWalletAUthenticationState,reducers:{saveSignature:function saveSignature(state,action){state.signature=action.payload.walletAuthenticator.signature;},saveNonce:function saveNonce(state,action){state.nonce=action.payload.walletAuthenticator.nonce;},saveApplicationUserToken:function saveApplicationUserToken(state,action){state.applicationUserToken=action.payload.walletAuthenticator.userToken;},isAllowedOnGateway:function isAllowedOnGateway(state,action){state.isAllowedonGateway=action.payload.walletAuthenticator.isAllowedOnGateway;},allowedNetworksonGateway:function allowedNetworksonGateway(state,action){state.allowedNetworksonGateway=action.payload.walletAuthenticator.allowedNetworksonGateway;},getSignatureFromMetamask:function getSignatureFromMetamask(state,action){state.getSignatureFromMetamask=action.payload.walletAuthenticator.getSignatureFromMetamask;},error:function error(state,action){state.error=action.payload.walletAuthenticator.error;},saveME:function saveME(state,action){state.meV2=action.payload.walletAuthenticator.meV2;},saveToken:function saveToken(state,action){state.tokenV2=action.payload.walletAuthenticator.tokenV2;},saveNetworkInformation:function saveNetworkInformation(state,action){state.currentNetworkInformation=action.payload.networkInformation.networkResponse;},saveCommunityMemberProfileToken:function saveCommunityMemberProfileToken(state,action){state.profileToken=action.payload.walletAuthenticator.profileToken;},resetWalletAuthentication:function resetWalletAuthentication(state,action){state.nonce=\"\";state.signature=\"\";state.applicationUserToken=action.payload.walletAuthenticator.userToken;state.isAllowedonGateway=undefined;state.allowedNetworksonGateway=[];state.error=false;state.getSignatureFromMetamask=false;state.profileToken=\"\";},removeSession:function removeSession(state,action){state.tokenV2=\"\";state.meV2={};}}});","map":{"version":3,"names":["createSlice","defaultWalletAuthenticationState","initialWalletAUthenticationState","walletConnectorSlice","name","initialState","reducers","saveSignature","state","action","signature","payload","walletAuthenticator","saveNonce","nonce","saveApplicationUserToken","applicationUserToken","userToken","isAllowedOnGateway","isAllowedonGateway","allowedNetworksonGateway","getSignatureFromMetamask","error","saveME","meV2","saveToken","tokenV2","saveNetworkInformation","currentNetworkInformation","networkInformation","networkResponse","saveCommunityMemberProfileToken","profileToken","resetWalletAuthentication","undefined","removeSession"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/connector/wallet-connector/walletAuthenticationSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n// import { ME_TAG } from \"../../../../utils/const.utils\";\nimport { WALLET_AUTHENTICATION_STATE, defaultWalletAuthenticationState } from \"./WalletAuthenticationInterfaces\";\n\nconst initialWalletAUthenticationState: WALLET_AUTHENTICATION_STATE = {\n    ...defaultWalletAuthenticationState,\n};\n\nexport const walletConnectorSlice = createSlice({\n    name: \"walletAuthenticator\",\n    initialState: initialWalletAUthenticationState,\n    reducers: { \n      saveSignature: (state, action) => { \n        state.signature = action.payload.walletAuthenticator.signature;\n      },\n      saveNonce: (state, action) => { \n        state.nonce = action.payload.walletAuthenticator.nonce;\n      },\n      saveApplicationUserToken: (state, action) => { \n        state.applicationUserToken = action.payload.walletAuthenticator.userToken;\n      },\n      isAllowedOnGateway: (state, action) => { \n        state.isAllowedonGateway = action.payload.walletAuthenticator.isAllowedOnGateway;\n      },\n      allowedNetworksonGateway: (state, action) => { \n        state.allowedNetworksonGateway = action.payload.walletAuthenticator.allowedNetworksonGateway;\n      },\n      getSignatureFromMetamask: (state, action) => { \n        state.getSignatureFromMetamask = action.payload.walletAuthenticator.getSignatureFromMetamask;\n      },\n      error: (state, action) => { \n        state.error = action.payload.walletAuthenticator.error;\n      },\n      saveME: (state, action) => { \n        state.meV2 = action.payload.walletAuthenticator.meV2;\n      },\n      saveToken: (state, action) => { \n        state.tokenV2 = action.payload.walletAuthenticator.tokenV2;\n      },\n      saveNetworkInformation: (state, action) => {  \n        state.currentNetworkInformation = action.payload.networkInformation.networkResponse;\n      },\n      saveCommunityMemberProfileToken: (state, action) => { \n        state.profileToken = action.payload.walletAuthenticator.profileToken;\n      },\n      resetWalletAuthentication: (state, action) => {\n        state.nonce = \"\";\n        state.signature = \"\";\n        state.applicationUserToken = action.payload.walletAuthenticator.userToken;\n        state.isAllowedonGateway = undefined;\n        state.allowedNetworksonGateway = [];\n        state.error = false;\n        state.getSignatureFromMetamask = false;\n        state.profileToken = \"\";\n      },\n      removeSession: (state, action) => {\n        state.tokenV2 = \"\";\n        state.meV2 = {};\n      }\n    }\n})\n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}