{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PaginationOptsGroup = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar object_1 = require(\"./helpers/object\");\nvar Form_1 = __importDefault(require(\"react-bootstrap/Form\"));\nfunction PaginationOptsGroup(_a) {\n  var classes = _a.classes,\n    labels = _a.labels,\n    value = _a.value,\n    onChange = _a.onChange,\n    options = _a.options;\n  return react_1.default.createElement(Form_1.default, {\n    inline: true,\n    className: object_1.makeClasses('paginationOpts__root', classes.paginationOptsForm)\n  }, react_1.default.createElement(Form_1.default.Group, {\n    controlId: \"formGroupPagination\",\n    className: classes.paginationOptsFormGroup\n  }, react_1.default.createElement(\"span\", {\n    className: classes.paginationOptsFormText\n  }, labels.show || 'Show'), react_1.default.createElement(Form_1.default.Control, {\n    name: \"form-control-pagination\",\n    defaultValue: value,\n    as: \"select\",\n    placeholder: \"select\",\n    onChange: onChange,\n    className: classes.paginationOptsFormControl\n  }, options.map(function (option, idx) {\n    var optionProps = {\n      key: \"page-opt-\" + option,\n      value: option\n    };\n    return react_1.default.createElement(\"option\", __assign({}, optionProps), option);\n  })), react_1.default.createElement(\"span\", {\n    className: classes.paginationOptsFormText\n  }, labels.entries || 'entries')));\n}\nexports.PaginationOptsGroup = PaginationOptsGroup;\nfunction PaginationOpts(_a) {\n  var labels = _a.labels,\n    rowsPerPage = _a.rowsPerPage,\n    rowsPerPageOption = _a.rowsPerPageOption,\n    onRowsPerPageChange = _a.onRowsPerPageChange,\n    classes = _a.classes,\n    CustomPaginationOptsGroup = _a.CustomPaginationOptsGroup;\n  function onRowsPerPageChangeHandler(e) {\n    onRowsPerPageChange(Number(e.target.value));\n  }\n  var renderedElements = null;\n  if (rowsPerPage !== undefined) {\n    var opts_1 = [rowsPerPage];\n    // Make sure there are no duplicates being pushed.\n    if (rowsPerPageOption !== undefined) {\n      rowsPerPageOption.forEach(function (opt) {\n        if (!opts_1.includes(opt) && typeof opt === 'number') {\n          opts_1.push(opt);\n        }\n      });\n      // Order the pagination options ascending.\n      opts_1 = opts_1.sort(function (a, b) {\n        if (a < b) {\n          return -1;\n        } else if (a > b) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    // Only render option if the length is more than 1.\n    if (opts_1.length > 1) {\n      var UsedPaginationOpts = CustomPaginationOptsGroup || PaginationOptsGroup;\n      renderedElements = react_1.default.createElement(UsedPaginationOpts, {\n        classes: classes,\n        labels: labels,\n        onChange: onRowsPerPageChangeHandler,\n        options: opts_1,\n        value: rowsPerPage\n      });\n    }\n  }\n  return renderedElements;\n}\nexports.default = PaginationOpts;","map":{"version":3,"sources":["../src/PaginationOpts.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AAGA,IAAA,QAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;AACA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAUA,SAAgB,mBAAmB,CAAC,EAMT,EAAA;MALzB,OAAO,GAAA,EAAA,CAAA,OAAA;IACP,MAAM,GAAA,EAAA,CAAA,MAAA;IACN,KAAK,GAAA,EAAA,CAAA,KAAA;IACL,QAAQ,GAAA,EAAA,CAAA,QAAA;IACR,OAAO,GAAA,EAAA,CAAA,OAAA;EAEP,OACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,OAAI,EAAA;IACH,MAAM,EAAA,IAAA;IACN,SAAS,EAAE,QAAA,CAAA,WAAW,CACpB,sBAAsB,EACtB,OAAO,CAAC,kBAAkB;EAC3B,CAAA,EAED,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,OAAI,CAAC,KAAK,EAAA;IACT,SAAS,EAAC,qBAAqB;IAC/B,SAAS,EAAE,OAAO,CAAC;EAAuB,CAAA,EAE1C,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,OAAO,CAAC;EAAsB,CAAA,EAC5C,MAAM,CAAC,IAAI,IAAI,MAAM,CACjB,EACP,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,OAAI,CAAC,OAAO,EAAA;IACX,IAAI,EAAC,yBAAyB;IAC9B,YAAY,EAAE,KAAK;IACnB,EAAE,EAAC,QAAQ;IACX,WAAW,EAAC,QAAQ;IACpB,QAAQ,EAAE,QAAQ;IAClB,SAAS,EAAE,OAAO,CAAC;EAAyB,CAAA,EAE3C,OAAO,CAAC,GAAG,CAAC,UAAC,MAA0B,EAAE,GAAW,EAAA;IACnD,IAAM,WAAW,GAAG;MAClB,GAAG,EAAE,WAAA,GAAY,MAAQ;MACzB,KAAK,EAAE;KACR;IAED,OAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,CAAA,CAAA,EAAY,WAAW,CAAA,EAAG,MAAM,CAAU;EACnD,CAAC,CAAC,CACW,EACf,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,OAAO,CAAC;EAAsB,CAAA,EAC5C,MAAM,CAAC,OAAO,IAAI,SAAS,CACvB,CACI,CACR;AAEX;AA7CA,OAAA,CAAA,mBAAA,GAAA,mBAAA;AA4DA,SAAwB,cAAc,CAAC,EAOjB,EAAA;MANpB,MAAM,GAAA,EAAA,CAAA,MAAA;IACN,WAAW,GAAA,EAAA,CAAA,WAAA;IACX,iBAAiB,GAAA,EAAA,CAAA,iBAAA;IACjB,mBAAmB,GAAA,EAAA,CAAA,mBAAA;IACnB,OAAO,GAAA,EAAA,CAAA,OAAA;IACP,yBAAyB,GAAA,EAAA,CAAA,yBAAA;EAEzB,SAAS,0BAA0B,CAAC,CAAM,EAAA;IACxC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;EAC7C;EAEA,IAAI,gBAAgB,GAAG,IAAI;EAE3B,IAAI,WAAW,KAAK,SAAS,EAAE;IAC7B,IAAI,MAAI,GAAa,CAAC,WAAW,CAAC;IAElC;IACA,IAAI,iBAAiB,KAAK,SAAS,EAAE;MACnC,iBAAiB,CAAC,OAAO,CAAC,UAAA,GAAG,EAAA;QAC3B,IAAI,CAAC,MAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;UAClD,MAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QACf;MACH,CAAC,CAAC;MAEF;MACA,MAAI,GAAG,MAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;QACpB,IAAI,CAAC,GAAG,CAAC,EAAE;UACT,OAAO,CAAC,CAAC;SACV,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;UAChB,OAAO,CAAC;QACT;QAED,OAAO,CAAC;MACV,CAAC,CAAC;IACH;IAED;IACA,IAAI,MAAI,CAAC,MAAM,GAAG,CAAC,EAAE;MACnB,IAAM,kBAAkB,GACtB,yBAAyB,IAAI,mBAAmB;MAElD,gBAAgB,GACd,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,kBAAkB,EAAA;QACjB,OAAO,EAAE,OAAO;QAChB,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,0BAA0B;QACpC,OAAO,EAAE,MAAI;QACb,KAAK,EAAE;MAAW,CAAA,CAErB;IACF;EACF;EAED,OAAO,gBAAgB;AACzB;AAvDA,OAAA,CAAA,OAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PaginationOptsGroup = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar object_1 = require(\"./helpers/object\");\nvar Form_1 = __importDefault(require(\"react-bootstrap/Form\"));\nfunction PaginationOptsGroup(_a) {\n    var classes = _a.classes, labels = _a.labels, value = _a.value, onChange = _a.onChange, options = _a.options;\n    return (react_1.default.createElement(Form_1.default, { inline: true, className: object_1.makeClasses('paginationOpts__root', classes.paginationOptsForm) },\n        react_1.default.createElement(Form_1.default.Group, { controlId: \"formGroupPagination\", className: classes.paginationOptsFormGroup },\n            react_1.default.createElement(\"span\", { className: classes.paginationOptsFormText }, labels.show || 'Show'),\n            react_1.default.createElement(Form_1.default.Control, { name: \"form-control-pagination\", defaultValue: value, as: \"select\", placeholder: \"select\", onChange: onChange, className: classes.paginationOptsFormControl }, options.map(function (option, idx) {\n                var optionProps = {\n                    key: \"page-opt-\" + option,\n                    value: option\n                };\n                return react_1.default.createElement(\"option\", __assign({}, optionProps), option);\n            })),\n            react_1.default.createElement(\"span\", { className: classes.paginationOptsFormText }, labels.entries || 'entries'))));\n}\nexports.PaginationOptsGroup = PaginationOptsGroup;\nfunction PaginationOpts(_a) {\n    var labels = _a.labels, rowsPerPage = _a.rowsPerPage, rowsPerPageOption = _a.rowsPerPageOption, onRowsPerPageChange = _a.onRowsPerPageChange, classes = _a.classes, CustomPaginationOptsGroup = _a.CustomPaginationOptsGroup;\n    function onRowsPerPageChangeHandler(e) {\n        onRowsPerPageChange(Number(e.target.value));\n    }\n    var renderedElements = null;\n    if (rowsPerPage !== undefined) {\n        var opts_1 = [rowsPerPage];\n        // Make sure there are no duplicates being pushed.\n        if (rowsPerPageOption !== undefined) {\n            rowsPerPageOption.forEach(function (opt) {\n                if (!opts_1.includes(opt) && typeof opt === 'number') {\n                    opts_1.push(opt);\n                }\n            });\n            // Order the pagination options ascending.\n            opts_1 = opts_1.sort(function (a, b) {\n                if (a < b) {\n                    return -1;\n                }\n                else if (a > b) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n        // Only render option if the length is more than 1.\n        if (opts_1.length > 1) {\n            var UsedPaginationOpts = CustomPaginationOptsGroup || PaginationOptsGroup;\n            renderedElements = (react_1.default.createElement(UsedPaginationOpts, { classes: classes, labels: labels, onChange: onRowsPerPageChangeHandler, options: opts_1, value: rowsPerPage }));\n        }\n    }\n    return renderedElements;\n}\nexports.default = PaginationOpts;\n//# sourceMappingURL=PaginationOpts.js.map"]},"metadata":{},"sourceType":"script"}