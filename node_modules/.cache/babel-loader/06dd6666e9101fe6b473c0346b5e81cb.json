{"ast":null,"code":"import _objectSpread from\"/Users/kabiribraheem/Documents/casper-bridge-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from\"@reduxjs/toolkit\";import{defaultWalletApplicationWrapper}from\"../walletApplicationWrapperInterfaces\";var defaultWalletApplicationWrapperstate=_objectSpread({},defaultWalletApplicationWrapper);export var applicationWrapperSlice=createSlice({name:\"applicationWrapper\",initialState:defaultWalletApplicationWrapperstate,reducers:{walletApplicationDefaultsLoaded:function walletApplicationDefaultsLoaded(state,action){state.groupInfo=action.payload.groupInfo;state.supportedCurrencies=action.payload.supportedCurrencies;state.tokenList=action.payload.tokenList;state.supportedNetworks=action.payload.supportedNetworks;state.filteredAssets=action.payload.filteredAssets;state.currencyPairs=action.payload.currencyPairs;state.walletWrapperInitialized=true;},walletApplicationUser:function walletApplicationUser(state,action){// console.log(action.payload);\nstate.userProfile=action.payload.userProfile;state.authToken=action.payload.authToken;},resetWalletApplicationUser:function resetWalletApplicationUser(state){state.userProfile=defaultWalletApplicationWrapper.userProfile;state.authToken=defaultWalletApplicationWrapper.authToken;},swapToAndFromToken:function swapToAndFromToken(state,action){state.fromInfo=action.payload.fromInfo;state.toInfo=action.payload.toInfo;},updateToInfo:function updateToInfo(state,action){state.toInfo=action.payload.toInfo;},updateFromInfo:function updateFromInfo(state,action){state.fromInfo=action.payload.fromInfo;},availableLiquidity:function availableLiquidity(state,action){state.availableLiquidity=action.payload.availableLiquidity;},updateAmount:function updateAmount(state,action){state.amount=action.payload.amount;},updateFee:function updateFee(state,action){state.fee=action.payload.fee;},updateMaxBalance:function updateMaxBalance(state,action){state.maxBalance=action.payload.maxBalance;},getNetworkTransactions:function getNetworkTransactions(state,action){state.networkTransactions=action.payload.networkTransactions;}}});","map":{"version":3,"names":["createSlice","defaultWalletApplicationWrapper","defaultWalletApplicationWrapperstate","applicationWrapperSlice","name","initialState","reducers","walletApplicationDefaultsLoaded","state","action","groupInfo","payload","supportedCurrencies","tokenList","supportedNetworks","filteredAssets","currencyPairs","walletWrapperInitialized","walletApplicationUser","userProfile","authToken","resetWalletApplicationUser","swapToAndFromToken","fromInfo","toInfo","updateToInfo","updateFromInfo","availableLiquidity","updateAmount","amount","updateFee","fee","updateMaxBalance","maxBalance","getNetworkTransactions","networkTransactions"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/redux/walletApplicationWrapperSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  defaultWalletApplicationWrapper,\n  WALLET_APPLICATION_WRAPPER_STATE,\n} from \"../walletApplicationWrapperInterfaces\";\n\nconst defaultWalletApplicationWrapperstate: WALLET_APPLICATION_WRAPPER_STATE = {\n  ...defaultWalletApplicationWrapper,\n};\n\nexport const applicationWrapperSlice = createSlice({\n  name: \"applicationWrapper\",\n  initialState: defaultWalletApplicationWrapperstate,\n  reducers: {\n    walletApplicationDefaultsLoaded: (state, action) => {\n      state.groupInfo = action.payload.groupInfo;\n      state.supportedCurrencies = action.payload.supportedCurrencies;\n      state.tokenList = action.payload.tokenList;\n      state.supportedNetworks = action.payload.supportedNetworks;\n      state.filteredAssets = action.payload.filteredAssets;\n      state.currencyPairs = action.payload.currencyPairs;\n      state.walletWrapperInitialized = true;\n    },\n    walletApplicationUser: (state, action) => {\n      // console.log(action.payload);\n      state.userProfile = action.payload.userProfile;\n      state.authToken = action.payload.authToken;\n    },\n    resetWalletApplicationUser: (state) => {\n      state.userProfile = defaultWalletApplicationWrapper.userProfile;\n      state.authToken = defaultWalletApplicationWrapper.authToken;\n    },\n    swapToAndFromToken: (state, action) => {\n      state.fromInfo = action.payload.fromInfo;\n      state.toInfo = action.payload.toInfo;\n    },\n    updateToInfo: (state, action) => {\n      state.toInfo = action.payload.toInfo;\n    },\n    updateFromInfo: (state, action) => {\n      state.fromInfo = action.payload.fromInfo;\n    },\n    availableLiquidity: (state, action) => {\n      state.availableLiquidity = action.payload.availableLiquidity;\n    },\n    updateAmount: (state, action) => {\n      state.amount = action.payload.amount;\n    },\n    updateFee: (state, action) => {\n      state.fee = action.payload.fee;\n    },\n    updateMaxBalance: (state, action) => {\n      state.maxBalance = action.payload.maxBalance;\n    },\n    getNetworkTransactions: (state, action) => {\n      state.networkTransactions = action.payload.networkTransactions;\n    },\n  },\n});\n"],"mappings":"0IAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OACEC,+BAA+B,KAE1B,uCAAuC,CAE9C,GAAMC,qCAAsE,kBACvED,+BAA+B,CACnC,CAED,MAAO,IAAME,wBAAuB,CAAGH,WAAW,CAAC,CACjDI,IAAI,CAAE,oBAAoB,CAC1BC,YAAY,CAAEH,oCAAoC,CAClDI,QAAQ,CAAE,CACRC,+BAA+B,CAAE,yCAACC,KAAK,CAAEC,MAAM,CAAK,CAClDD,KAAK,CAACE,SAAS,CAAGD,MAAM,CAACE,OAAO,CAACD,SAAS,CAC1CF,KAAK,CAACI,mBAAmB,CAAGH,MAAM,CAACE,OAAO,CAACC,mBAAmB,CAC9DJ,KAAK,CAACK,SAAS,CAAGJ,MAAM,CAACE,OAAO,CAACE,SAAS,CAC1CL,KAAK,CAACM,iBAAiB,CAAGL,MAAM,CAACE,OAAO,CAACG,iBAAiB,CAC1DN,KAAK,CAACO,cAAc,CAAGN,MAAM,CAACE,OAAO,CAACI,cAAc,CACpDP,KAAK,CAACQ,aAAa,CAAGP,MAAM,CAACE,OAAO,CAACK,aAAa,CAClDR,KAAK,CAACS,wBAAwB,CAAG,IAAI,CACvC,CAAC,CACDC,qBAAqB,CAAE,+BAACV,KAAK,CAAEC,MAAM,CAAK,CACxC;AACAD,KAAK,CAACW,WAAW,CAAGV,MAAM,CAACE,OAAO,CAACQ,WAAW,CAC9CX,KAAK,CAACY,SAAS,CAAGX,MAAM,CAACE,OAAO,CAACS,SAAS,CAC5C,CAAC,CACDC,0BAA0B,CAAE,oCAACb,KAAK,CAAK,CACrCA,KAAK,CAACW,WAAW,CAAGlB,+BAA+B,CAACkB,WAAW,CAC/DX,KAAK,CAACY,SAAS,CAAGnB,+BAA+B,CAACmB,SAAS,CAC7D,CAAC,CACDE,kBAAkB,CAAE,4BAACd,KAAK,CAAEC,MAAM,CAAK,CACrCD,KAAK,CAACe,QAAQ,CAAGd,MAAM,CAACE,OAAO,CAACY,QAAQ,CACxCf,KAAK,CAACgB,MAAM,CAAGf,MAAM,CAACE,OAAO,CAACa,MAAM,CACtC,CAAC,CACDC,YAAY,CAAE,sBAACjB,KAAK,CAAEC,MAAM,CAAK,CAC/BD,KAAK,CAACgB,MAAM,CAAGf,MAAM,CAACE,OAAO,CAACa,MAAM,CACtC,CAAC,CACDE,cAAc,CAAE,wBAAClB,KAAK,CAAEC,MAAM,CAAK,CACjCD,KAAK,CAACe,QAAQ,CAAGd,MAAM,CAACE,OAAO,CAACY,QAAQ,CAC1C,CAAC,CACDI,kBAAkB,CAAE,4BAACnB,KAAK,CAAEC,MAAM,CAAK,CACrCD,KAAK,CAACmB,kBAAkB,CAAGlB,MAAM,CAACE,OAAO,CAACgB,kBAAkB,CAC9D,CAAC,CACDC,YAAY,CAAE,sBAACpB,KAAK,CAAEC,MAAM,CAAK,CAC/BD,KAAK,CAACqB,MAAM,CAAGpB,MAAM,CAACE,OAAO,CAACkB,MAAM,CACtC,CAAC,CACDC,SAAS,CAAE,mBAACtB,KAAK,CAAEC,MAAM,CAAK,CAC5BD,KAAK,CAACuB,GAAG,CAAGtB,MAAM,CAACE,OAAO,CAACoB,GAAG,CAChC,CAAC,CACDC,gBAAgB,CAAE,0BAACxB,KAAK,CAAEC,MAAM,CAAK,CACnCD,KAAK,CAACyB,UAAU,CAAGxB,MAAM,CAACE,OAAO,CAACsB,UAAU,CAC9C,CAAC,CACDC,sBAAsB,CAAE,gCAAC1B,KAAK,CAAEC,MAAM,CAAK,CACzCD,KAAK,CAAC2B,mBAAmB,CAAG1B,MAAM,CAACE,OAAO,CAACwB,mBAAmB,CAChE,CACF,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}