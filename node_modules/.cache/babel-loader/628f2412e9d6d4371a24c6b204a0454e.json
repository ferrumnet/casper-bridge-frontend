{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/Withdrawals.tsx\",\n  _s = $RefreshSig$();\nimport { FTypo, FGrid, FTable, FButton } from \"ferrum-design-system\";\nimport { useEffect } from \"react\";\nimport Datatable from \"react-bs-datatable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crucibleApi } from \"../client\";\nimport { fetchWithdrawals } from \"../redux/casper/casperActions\";\nimport { Networks } from \"../utils/stringUtils\";\nimport { CasperWithdrawal } from \"../pages/CasperWithdrawal\";\nimport './layout.scss';\nimport { Web3Helper } from \"../utils/web3Helper\";\nimport { MetaMaskConnector } from \"./connector\";\nimport { ConnectWalletDialog } from \"../utils/connect-wallet/ConnectWalletDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Withdrawals = () => {\n  _s();\n  const {\n    connect: {\n      config,\n      selectedAccount,\n      isWalletConnected,\n      networkClient,\n      withdrawalItems\n    }\n  } = useSelector(state => state.casper);\n  const {\n    walletAddress,\n    isConnected\n  } = useSelector(state => state.casper.walletConnector);\n  const dispatch = useDispatch();\n  async function withdrawEvm() {\n    const Api = new crucibleApi();\n    await Api.signInToServer(walletAddress);\n    const res = await Api.gatewayApi({\n      command: 'swapGetTransaction',\n      data: {\n        amount: 1,\n        targetCurrency: `CSPR:222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473`,\n        currency: 'BSC_TESTNET:0xfe00ee6f00dd7ed533157f6250656b4e007e7179'\n      },\n      params: []\n    });\n    if (res.data.requests) {\n      const helper = new Web3Helper(networkClient);\n      const tx = await helper.sendTransactionAsync(dispatch, res.data.requests);\n      console.log(tx);\n    }\n    console.log(res);\n  }\n  const fetchEvmWithdrawalItems = async () => {\n    const Api = new crucibleApi();\n    await Api.signInToServer(`CSPR:${selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.address}`);\n    const userWithdrawals = await Api.gatewayApi({\n      command: 'getUserNonEvmWithdrawItems',\n      data: {\n        userAddress: `CSPR:${selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.address}`,\n        network: '56',\n        receiveAddress: walletAddress\n      },\n      params: []\n    });\n    if (userWithdrawals.data) {\n      console.log(userWithdrawals.data, 'userWithdrawals.data');\n      await fetchWithdrawals(userWithdrawals.data.withdrawableBalanceItems)(dispatch);\n    }\n    console.log(userWithdrawals, 'userWithdrawals');\n  };\n  console.log(withdrawalItems, 'userWithdrawals');\n  useEffect(() => {\n    fetchEvmWithdrawalItems();\n  }, [selectedAccount, walletAddress]);\n  const tableHeads = [{\n    width: 200,\n    prop: \"sourceNetwork\",\n    title: \"Source Network\"\n  }, {\n    prop: \"targetNetwork\",\n    title: \"Target Network\"\n  }, {\n    prop: \"amount\",\n    title: \"Amount\"\n  }, {\n    prop: \"action\",\n    title: \"Action\"\n  }];\n  console.log(withdrawalItems);\n  const body = (withdrawalItems || []).map(item => {\n    return {\n      amount: /*#__PURE__*/_jsxDEV(FTypo, {\n        className: \"col-amount\",\n        children: item.sendAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }, this),\n      sourceNetwork: /*#__PURE__*/_jsxDEV(FTypo, {\n        className: \"col-amount\",\n        children:\n        //@ts-ignore\n        Networks[item.sendNetwork] || item.receiveNetwork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }, this),\n      targetNetwork: /*#__PURE__*/_jsxDEV(FTypo, {\n        className: \"col-amount\",\n        children:\n        //@ts-ignore\n        Networks[item.receiveNetwork] || item.receiveNetwork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-action\",\n        children: isConnected ? /*#__PURE__*/_jsxDEV(FButton, {\n          title: \"Withdraw\",\n          onClick: () => withdrawEvm()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 f-mt-2\",\n          children: /*#__PURE__*/_jsxDEV(MetaMaskConnector.WalletConnector, {\n            WalletConnectView: FButton,\n            WalletConnectModal: ConnectWalletDialog,\n            isAuthenticationNeeded: false,\n            WalletConnectViewProps: {\n              className: \"w-100\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CasperWithdrawal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FGrid, {\n      alignX: \"center\",\n      className: \"f-mb-1 withdrawals_container\",\n      children: [/*#__PURE__*/_jsxDEV(FTypo, {\n        size: 18,\n        align: \"center\",\n        className: \"f-mb-14 f-mt--7\",\n        children: \"EVM WITHDRAWALS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FTable, {\n        children: /*#__PURE__*/_jsxDEV(Datatable, {\n          tableBody: body || [],\n          tableHeaders: tableHeads,\n          rowsPerPage: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Withdrawals, \"x3Sx8M1+pikQvOpoDdXl3yndOyw=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Withdrawals;\nvar _c;\n$RefreshReg$(_c, \"Withdrawals\");","map":{"version":3,"names":["FTypo","FGrid","FTable","FButton","useEffect","Datatable","useDispatch","useSelector","crucibleApi","fetchWithdrawals","Networks","CasperWithdrawal","Web3Helper","MetaMaskConnector","ConnectWalletDialog","Withdrawals","connect","config","selectedAccount","isWalletConnected","networkClient","withdrawalItems","state","casper","walletAddress","isConnected","walletConnector","dispatch","withdrawEvm","Api","signInToServer","res","gatewayApi","command","data","amount","targetCurrency","currency","params","requests","helper","tx","sendTransactionAsync","console","log","fetchEvmWithdrawalItems","address","userWithdrawals","userAddress","network","receiveAddress","withdrawableBalanceItems","tableHeads","width","prop","title","body","map","item","sendAmount","sourceNetwork","sendNetwork","receiveNetwork","targetNetwork","action","className"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/Withdrawals.tsx"],"sourcesContent":["import { FTypo, FGrid, FTable, FHeader, FButton } from \"ferrum-design-system\";\nimport { useEffect } from \"react\";\nimport Datatable from \"react-bs-datatable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crucibleApi } from \"../client\";\nimport { fetchWithdrawals } from \"../redux/casper/casperActions\";\nimport { Networks } from \"../utils/stringUtils\";\nimport { CasperWithdrawal } from \"../pages/CasperWithdrawal\";\n\nimport './layout.scss';\nimport { Web3Helper } from \"../utils/web3Helper\";\nimport { MetaMaskConnector } from \"./connector\";\nimport { ConnectWalletDialog } from \"../utils/connect-wallet/ConnectWalletDialog\";\n\nexport const Withdrawals = () => {\n    const { connect: { config, selectedAccount, isWalletConnected, networkClient, withdrawalItems } } = useSelector((state: any) => state.casper);\n    const { walletAddress, isConnected } = useSelector((state: any) => state.casper.walletConnector);\n\n    const dispatch = useDispatch();\n\n    async function withdrawEvm():Promise<any>{\n        const Api = new crucibleApi()\n        await Api.signInToServer(walletAddress)\n            const res = await Api.gatewayApi({\n                command: 'swapGetTransaction', data: {\n                  amount: 1,\n                  targetCurrency: `CSPR:222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473`,\n                  currency: 'BSC_TESTNET:0xfe00ee6f00dd7ed533157f6250656b4e007e7179'\n              },\n                params: [] });\n        \n        if (res.data.requests) {\n          const helper = new Web3Helper(networkClient)\n          const tx = await helper.sendTransactionAsync(\n            dispatch,\n            res.data.requests\n          )\n          console.log(tx);\n        }\n        console.log(res)\n    }    \n\n    const fetchEvmWithdrawalItems = async () => {\n        const Api = new crucibleApi()\n        await Api.signInToServer(`CSPR:${selectedAccount?.address}`)\n        const userWithdrawals = await Api.gatewayApi({\n            command: 'getUserNonEvmWithdrawItems', data: {\n            userAddress: `CSPR:${selectedAccount?.address}`,\n            network: '56',\n            receiveAddress: walletAddress,\n        }, params: [] });\n        if (userWithdrawals.data){\n            console.log(userWithdrawals.data,'userWithdrawals.data')\n            await fetchWithdrawals(userWithdrawals.data.withdrawableBalanceItems)(dispatch);\n        }\n        console.log(userWithdrawals, 'userWithdrawals');\n    }\n\n    console.log(withdrawalItems, 'userWithdrawals');\n\n    useEffect(() => {\n       fetchEvmWithdrawalItems()\n    }, [selectedAccount, walletAddress]);\n\n    const tableHeads: any[] = [\n        { width: 200, prop: \"sourceNetwork\", title: \"Source Network\" },\n        { prop: \"targetNetwork\", title: \"Target Network\" },\n        { prop: \"amount\", title: \"Amount\" },\n        { prop: \"action\", title: \"Action\" }\n    ];\n\n    console.log(withdrawalItems)\n\n    const body = (withdrawalItems || []).map((item: any) => { \n        return {\n          amount: <FTypo className={\"col-amount\"}>{item.sendAmount}</FTypo>,\n          sourceNetwork: <FTypo className={\"col-amount\"}>{\n            //@ts-ignore\n            Networks[item.sendNetwork] || item.receiveNetwork\n        }</FTypo>,\n          targetNetwork: <FTypo className={\"col-amount\"}>{\n            //@ts-ignore\n            Networks[item.receiveNetwork] || item.receiveNetwork\n        }</FTypo>,\n          action: (\n            <div className=\"col-action\">\n            {\n                isConnected\n                ? (<FButton title={\"Withdraw\"} onClick={() => withdrawEvm()} />)\n                : (\n                  <div className=\"w-100 f-mt-2\">\n                    <MetaMaskConnector.WalletConnector\n                      WalletConnectView={FButton}\n                      WalletConnectModal={ConnectWalletDialog}\n                      isAuthenticationNeeded={false}\n                      WalletConnectViewProps={{ className: \"w-100\" }}\n                    />\n                  </div>\n                )\n            }\n            </div>\n          ),\n        }; \n    }); \n\n    return (\n        <>\n            <CasperWithdrawal />\n            <FGrid alignX={\"center\"} className=\"f-mb-1 withdrawals_container\">\n                <FTypo size={18} align={\"center\"} className={\"f-mb-14 f-mt--7\"}>\n                    EVM WITHDRAWALS\n                </FTypo>\n                <FTable>\n                    <Datatable tableBody={body || []} tableHeaders={tableHeads} rowsPerPage={10} />\n                </FTable>\n            </FGrid>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}