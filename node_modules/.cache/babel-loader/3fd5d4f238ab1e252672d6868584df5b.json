{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldTableUpdate = exports.customJoin = exports.makeClasses = void 0;\nfunction makeClasses() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var classes = [];\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (!arg) continue;\n    var argType = typeof arg;\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  }\n  return classes.join(' ');\n}\nexports.makeClasses = makeClasses;\nfunction customJoin(array, separator, lastSeparator) {\n  if (lastSeparator === void 0) {\n    lastSeparator = '';\n  }\n  var lastSep = array.length === 2 ? lastSeparator : \"\" + separator + lastSeparator;\n  return \"\" + array.slice(0, -1).join(separator) + lastSep + array.slice(-1);\n}\nexports.customJoin = customJoin;\nvar includedProps = ['classes', 'async', 'rowsPerPage', 'rowsPerPageOption', 'tableBody'];\nfunction shouldTableUpdate(prevProps, nextProps) {\n  var checkedPropsLength = includedProps.length;\n  var isSame = true;\n  var index = 0;\n  while (isSame && index < checkedPropsLength) {\n    var prop = includedProps[index];\n    if (prevProps[prop] !== nextProps[prop]) {\n      if (prop === 'rowsPerPageOption') {\n        // First, check if defined -- defaults to empty array.\n        var prevOptions = prevProps[prop] || [];\n        var nextOptions = nextProps[prop] || [];\n        // Then, check if they have same length.\n        isSame = prevOptions.length === nextOptions.length;\n      } else {\n        isSame = false;\n      }\n    }\n    index += 1;\n  }\n  return isSame;\n}\nexports.shouldTableUpdate = shouldTableUpdate;","map":{"version":3,"sources":["../../src/helpers/object.ts"],"names":[],"mappings":";;;;;;AAEA,SAAgB,WAAW,GAAA;EAAC,IAAA,IAAA,GAAA,EAAA;OAAA,IAAA,EAAA,GAAA,CAAc,EAAd,EAAA,GAAA,SAAA,CAAA,MAAc,EAAd,EAAA,EAAc,EAAA;IAAd,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;EAC1B,IAAM,OAAO,GAAG,EAAE;EAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpC,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,CAAC,GAAG,EAAE;IAEV,IAAM,OAAO,GAAG,OAAO,GAAG;IAE1B,IAAI,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,QAAQ,EAAE;MAChD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;KAClB,MAAM,IAAI,OAAO,KAAK,QAAQ,EAAE;MAC/B,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;QACrB,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;UACZ,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB;MACF;IACF;EACF;EAED,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1B;AArBA,OAAA,CAAA,WAAA,GAAA,WAAA;AAuBA,SAAgB,UAAU,CACxB,KAAe,EACf,SAAiB,EACjB,aAA0B,EAAA;EAA1B,IAAA,aAAA,KAAA,KAAA,CAAA,EAAA;IAAA,aAAA,GAAA,EAA0B;EAAA;EAE1B,IAAM,OAAO,GACX,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,aAAa,GAAG,EAAA,GAAG,SAAS,GAAG,aAAe;EAErE,OAAO,EAAA,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAG;AAC5E;AATA,OAAA,CAAA,UAAA,GAAA,UAAA;AAWA,IAAM,aAAa,GAAG,CACpB,SAAS,EACT,OAAO,EACP,aAAa,EACb,mBAAmB,EACnB,WAAW,CACZ;AAED,SAAgB,iBAAiB,CAC/B,SAAyB,EACzB,SAAyB,EAAA;EAEzB,IAAM,kBAAkB,GAAG,aAAa,CAAC,MAAM;EAC/C,IAAI,MAAM,GAAG,IAAI;EACjB,IAAI,KAAK,GAAG,CAAC;EAEb,OAAO,MAAM,IAAI,KAAK,GAAG,kBAAkB,EAAE;IAC3C,IAAM,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC;IAEjC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,EAAE;MACvC,IAAI,IAAI,KAAK,mBAAmB,EAAE;QAChC;QACA,IAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE;QACzC,IAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE;QAEzC;QACA,MAAM,GAAG,WAAW,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM;OACnD,MAAM;QACL,MAAM,GAAG,KAAK;MACf;IACF;IAED,KAAK,IAAI,CAAC;EACX;EAED,OAAO,MAAM;AACf;AA5BA,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldTableUpdate = exports.customJoin = exports.makeClasses = void 0;\nfunction makeClasses() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var classes = [];\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        if (!arg)\n            continue;\n        var argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (argType === 'object') {\n            for (var key in arg) {\n                if (arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    }\n    return classes.join(' ');\n}\nexports.makeClasses = makeClasses;\nfunction customJoin(array, separator, lastSeparator) {\n    if (lastSeparator === void 0) { lastSeparator = ''; }\n    var lastSep = array.length === 2 ? lastSeparator : \"\" + separator + lastSeparator;\n    return \"\" + array.slice(0, -1).join(separator) + lastSep + array.slice(-1);\n}\nexports.customJoin = customJoin;\nvar includedProps = [\n    'classes',\n    'async',\n    'rowsPerPage',\n    'rowsPerPageOption',\n    'tableBody'\n];\nfunction shouldTableUpdate(prevProps, nextProps) {\n    var checkedPropsLength = includedProps.length;\n    var isSame = true;\n    var index = 0;\n    while (isSame && index < checkedPropsLength) {\n        var prop = includedProps[index];\n        if (prevProps[prop] !== nextProps[prop]) {\n            if (prop === 'rowsPerPageOption') {\n                // First, check if defined -- defaults to empty array.\n                var prevOptions = prevProps[prop] || [];\n                var nextOptions = nextProps[prop] || [];\n                // Then, check if they have same length.\n                isSame = prevOptions.length === nextOptions.length;\n            }\n            else {\n                isSame = false;\n            }\n        }\n        index += 1;\n    }\n    return isSame;\n}\nexports.shouldTableUpdate = shouldTableUpdate;\n//# sourceMappingURL=object.js.map"]},"metadata":{},"sourceType":"script"}