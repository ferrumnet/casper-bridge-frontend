{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kabiribraheem/Documents/casper-bridge-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kabiribraheem/Documents/casper-bridge-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{applicationWrapperSlice}from\"./walletApplicationWrapperSlice\";// import * as serverRequest from \"../../../common-client/axiosApiClient\";\n// import { getFilteredAssets } from \"../walletApplicationWrapperHelper\";\nvar actions=applicationWrapperSlice.actions;// export const loadWalletDefaults =\n//   (groupId: any, existingTokenList: Array<any>) => async (dispatch: any) => {\n//     //load bridge group info\n//     const groupInfo = await serverRequest.loadGroupInfo(groupId);\n//     //load bridge global token listing\n//     const tokenList = existingTokenList?.length\n//       ? existingTokenList\n//       : await serverRequest.getTokenList();\n//     //load bridge group currencies token configuration\n//     const currencyPairs = await serverRequest.getTokenConfigsForGroup(\n//       groupInfo?.bridgeCurrencies\n//     );\n//     //calculate filtered listing\n//     const filteredAssets = getFilteredAssets(\n//       tokenList,\n//       groupInfo?.bridgeCurrencies\n//     );\n//     const supportedNetworks = groupInfo?.bridgeCurrencies.map(\n//       (c: any) => c.split(\":\")[0]\n//     );\n//     const supportedCurrencies = groupInfo.bridgeCurrencies.map(\n//       (c: any) => c.split(\":\")[1]\n//     );\n//     dispatch(\n//       actions.walletApplicationDefaultsLoaded({\n//         groupInfo,\n//         tokenList,\n//         currencyPairs,\n//         filteredAssets,\n//         supportedNetworks,\n//         supportedCurrencies,\n//       })\n//     );\n//   };\nexport var loadUserProfileDetails=function loadUserProfileDetails(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};// export const getUserProfile = (userProfile: any) => async (dispatch: any) => {\n//   const authToken = await serverRequest.signInToServer(userProfile.userId);\n//   console.log(\"sign to server successfull user token authToken : \", authToken);\n//   // console.log({ userProfile, authToken });\n//   dispatch(actions.walletApplicationUser({ userProfile, authToken }));\n// };\nexport var resetUserProfile=function resetUserProfile(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(actions.resetWalletApplicationUser());case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var swapToAndFromToken=function swapToAndFromToken(toAndFromTokens){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(actions.swapToAndFromToken(toAndFromTokens));case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var updateToInfo=function updateToInfo(toInfo){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch(actions.updateToInfo(toInfo));case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var updateFromInfo=function updateFromInfo(fromInfo){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch(actions.updateFromInfo(fromInfo));case 1:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();};// export const getAvailableLiquidity =\n//   (targetNetwork: string, targetCurrency: string, authToken: string) =>\n//   async (dispatch: any) => {\n//     await serverRequest\n//       .getAvailableLiquidity(targetNetwork, targetCurrency, authToken)\n//       .then((response: any) => {\n//         dispatch(actions.availableLiquidity({ availableLiquidity: response }));\n//       })\n//       .catch((err: any) => {\n//         console.log(err);\n//       });\n//   };\nexport var updateAmount=function updateAmount(amount){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(dispatch){return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:dispatch(actions.updateAmount({amount:amount}));case 1:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var updateFee=function updateFee(fee){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(dispatch){return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:dispatch(actions.updateFee({fee:fee}));case 1:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x7){return _ref7.apply(this,arguments);};}();};export var updateMaxBalance=function updateMaxBalance(maxBalance){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(dispatch){return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:dispatch(actions.updateMaxBalance({maxBalance:maxBalance}));case 1:case\"end\":return _context8.stop();}}},_callee8);}));return function(_x8){return _ref8.apply(this,arguments);};}();};// export const getNetworkTransactions = () => async (dispatch: any) => {\n//   const transactionResponse = await serverRequest.getNetworkTransactions();\n//   dispatch(\n//     actions.getNetworkTransactions({\n//       networkTransactions: transactionResponse.data,\n//     })\n//   );\n// };","map":{"version":3,"names":["applicationWrapperSlice","actions","loadUserProfileDetails","dispatch","resetUserProfile","resetWalletApplicationUser","swapToAndFromToken","toAndFromTokens","updateToInfo","toInfo","updateFromInfo","fromInfo","updateAmount","amount","updateFee","fee","updateMaxBalance","maxBalance"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/connector/wallet-application-wrapper/redux/walletApplicationWrapperActions.ts"],"sourcesContent":["import { applicationWrapperSlice } from \"./walletApplicationWrapperSlice\";\n// import * as serverRequest from \"../../../common-client/axiosApiClient\";\n// import { getFilteredAssets } from \"../walletApplicationWrapperHelper\";\nconst { actions } = applicationWrapperSlice;\n\n// export const loadWalletDefaults =\n//   (groupId: any, existingTokenList: Array<any>) => async (dispatch: any) => {\n//     //load bridge group info\n//     const groupInfo = await serverRequest.loadGroupInfo(groupId);\n\n//     //load bridge global token listing\n//     const tokenList = existingTokenList?.length\n//       ? existingTokenList\n//       : await serverRequest.getTokenList();\n\n//     //load bridge group currencies token configuration\n//     const currencyPairs = await serverRequest.getTokenConfigsForGroup(\n//       groupInfo?.bridgeCurrencies\n//     );\n\n//     //calculate filtered listing\n//     const filteredAssets = getFilteredAssets(\n//       tokenList,\n//       groupInfo?.bridgeCurrencies\n//     );\n\n//     const supportedNetworks = groupInfo?.bridgeCurrencies.map(\n//       (c: any) => c.split(\":\")[0]\n//     );\n\n//     const supportedCurrencies = groupInfo.bridgeCurrencies.map(\n//       (c: any) => c.split(\":\")[1]\n//     );\n\n//     dispatch(\n//       actions.walletApplicationDefaultsLoaded({\n//         groupInfo,\n//         tokenList,\n//         currencyPairs,\n//         filteredAssets,\n//         supportedNetworks,\n//         supportedCurrencies,\n//       })\n//     );\n//   };\n\nexport const loadUserProfileDetails = () => async (dispatch: any) => {\n  // const [client, connect, currencyList, api, provider] =\n  //       inject5<UnifyreExtensionWeb3Client, Connect, CurrencyList, ApiClient, Web3ModalProvider>(\n  //           UnifyreExtensionWeb3Client, Connect, CurrencyList, ApiClient, 'Web3ModalProvider');\n  // connect.setProvider(provider);\n  // const net = await connect.getProvider()!.netId();\n  // console.log(net);\n};\n\n// export const getUserProfile = (userProfile: any) => async (dispatch: any) => {\n//   const authToken = await serverRequest.signInToServer(userProfile.userId);\n//   console.log(\"sign to server successfull user token authToken : \", authToken);\n//   // console.log({ userProfile, authToken });\n//   dispatch(actions.walletApplicationUser({ userProfile, authToken }));\n// };\n\nexport const resetUserProfile = () => async (dispatch: any) => {\n  dispatch(actions.resetWalletApplicationUser());\n};\n\nexport const swapToAndFromToken = (toAndFromTokens: any) => async (dispatch: any) => {\n  dispatch(actions.swapToAndFromToken(toAndFromTokens));\n};\n\nexport const updateToInfo = (toInfo: any) => async (dispatch: any) => {\n  dispatch(actions.updateToInfo(toInfo));\n};\n\nexport const updateFromInfo = (fromInfo: any) => async (dispatch: any) => {\n  dispatch(actions.updateFromInfo(fromInfo));\n};\n\n// export const getAvailableLiquidity =\n//   (targetNetwork: string, targetCurrency: string, authToken: string) =>\n//   async (dispatch: any) => {\n//     await serverRequest\n//       .getAvailableLiquidity(targetNetwork, targetCurrency, authToken)\n//       .then((response: any) => {\n//         dispatch(actions.availableLiquidity({ availableLiquidity: response }));\n//       })\n//       .catch((err: any) => {\n//         console.log(err);\n//       });\n//   };\n\nexport const updateAmount = (amount: any) => async (dispatch: any) => {\n  dispatch(actions.updateAmount({ amount }));\n};\n\nexport const updateFee = (fee: any) => async (dispatch: any) => {\n  dispatch(actions.updateFee({ fee }));\n};\n\nexport const updateMaxBalance = (maxBalance: any) => async (dispatch: any) => {\n  dispatch(actions.updateMaxBalance({ maxBalance }));\n};\n\n// export const getNetworkTransactions = () => async (dispatch: any) => {\n//   const transactionResponse = await serverRequest.getNetworkTransactions();\n//   dispatch(\n//     actions.getNetworkTransactions({\n//       networkTransactions: transactionResponse.data,\n//     })\n//   );\n// };\n"],"mappings":"sSAAA,OAASA,uBAAuB,KAAQ,iCAAiC,CACzE;AACA;AACA,GAAQC,QAAO,CAAKD,uBAAuB,CAAnCC,OAAO,CAEf;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,uBAAsB,CAAG,QAAzBA,uBAAsB,oGAAS,iBAAOC,QAAa,mKAO/D,iEAED;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,qGAAS,kBAAOD,QAAa,wHACxDA,QAAQ,CAACF,OAAO,CAACI,0BAA0B,EAAE,CAAC,CAAC,wDAChD,mEAED,MAAO,IAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIC,eAAoB,oGAAK,kBAAOJ,QAAa,wHAC9EA,QAAQ,CAACF,OAAO,CAACK,kBAAkB,CAACC,eAAe,CAAC,CAAC,CAAC,wDACvD,mEAED,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,MAAW,oGAAK,kBAAON,QAAa,wHAC/DA,QAAQ,CAACF,OAAO,CAACO,YAAY,CAACC,MAAM,CAAC,CAAC,CAAC,wDACxC,mEAED,MAAO,IAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAIC,QAAa,oGAAK,kBAAOR,QAAa,wHACnEA,QAAQ,CAACF,OAAO,CAACS,cAAc,CAACC,QAAQ,CAAC,CAAC,CAAC,wDAC5C,mEAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,MAAW,oGAAK,kBAAOV,QAAa,wHAC/DA,QAAQ,CAACF,OAAO,CAACW,YAAY,CAAC,CAAEC,MAAM,CAANA,MAAO,CAAC,CAAC,CAAC,CAAC,wDAC5C,mEAED,MAAO,IAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,GAAQ,oGAAK,kBAAOZ,QAAa,wHACzDA,QAAQ,CAACF,OAAO,CAACa,SAAS,CAAC,CAAEC,GAAG,CAAHA,GAAI,CAAC,CAAC,CAAC,CAAC,wDACtC,mEAED,MAAO,IAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIC,UAAe,oGAAK,kBAAOd,QAAa,wHACvEA,QAAQ,CAACF,OAAO,CAACe,gBAAgB,CAAC,CAAEC,UAAU,CAAVA,UAAW,CAAC,CAAC,CAAC,CAAC,wDACpD,mEAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}