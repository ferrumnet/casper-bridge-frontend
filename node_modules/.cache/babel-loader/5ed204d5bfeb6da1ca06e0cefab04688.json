{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar React = require('react');\nvar React__default = _interopDefault(React);\nfunction useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler) {\n  return function mouseEventsHandler(event) {\n    var positions = mouseDownHandler(event);\n    function onMouseMove(event) {\n      positions = mouseMoveHandler(event, positions) || positions;\n    }\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', function (event) {\n      window.removeEventListener('mousemove', onMouseMove);\n      mouseUpHandler && mouseUpHandler(event, positions);\n    }, {\n      once: true\n    });\n  };\n}\n\n/* eslint react-hooks/exhaustive-deps: 0 */\n\nvar useMount = function useMount(effect) {\n  return React.useEffect(effect, []);\n};\nfunction rgbToHSv(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var rr;\n  var gg;\n  var bb;\n  var h;\n  var s;\n  var rabs = red / 255;\n  var gabs = green / 255;\n  var babs = blue / 255;\n  var v = Math.max(rabs, gabs, babs);\n  var diff = v - Math.min(rabs, gabs, babs);\n  var diffc = function diffc(c) {\n    return (v - c) / 6 / diff + 1 / 2;\n  };\n  if (diff === 0) {\n    h = 0;\n    s = 0;\n  } else {\n    s = diff / v;\n    rr = diffc(rabs);\n    gg = diffc(gabs);\n    bb = diffc(babs);\n    if (rabs === v) {\n      h = bb - gg;\n    } else if (gabs === v) {\n      h = 1 / 3 + rr - bb;\n    } else if (babs === v) {\n      h = 2 / 3 + gg - rr;\n    }\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n  return {\n    hue: Math.round(h * 360),\n    saturation: Math.round(s * 100),\n    value: Math.round(v * 100)\n  };\n}\nfunction getRgbByHue(hue) {\n  var C = 1;\n  var H = hue / 60;\n  var X = C * (1 - Math.abs(H % 2 - 1));\n  var m = 0;\n  var precision = 255;\n  var r = 0;\n  var g = 0;\n  var b = 0;\n  C = (C + m) * precision | 0;\n  X = (X + m) * precision | 0;\n  if (H >= 0 && H < 1) {\n    r = C | 0;\n    g = X | 0;\n    b = m | 0;\n  }\n  if (H >= 1 && H < 2) {\n    r = X | 0;\n    g = C | 0;\n    b = m | 0;\n  }\n  if (H >= 2 && H < 3) {\n    r = m | 0;\n    g = C | 0;\n    b = X | 0;\n  }\n  if (H >= 3 && H < 4) {\n    r = m | 0;\n    g = X | 0;\n    b = C | 0;\n  }\n  if (H >= 4 && H < 5) {\n    r = X | 0;\n    g = m | 0;\n    b = C | 0;\n  }\n  if (H >= 5 && H <= 6) {\n    r = C | 0;\n    g = m | 0;\n    b = X | 0;\n  }\n  return {\n    red: r,\n    green: g,\n    blue: b\n  };\n}\nfunction isValidRGBValue(value) {\n  return typeof value === 'number' && Number.isNaN(value) === false && value >= 0 && value <= 255;\n}\nfunction setRGBA(red, green, blue, alpha) {\n  if (isValidRGBValue(red) && isValidRGBValue(green) && isValidRGBValue(blue)) {\n    var color = {\n      red: red | 0,\n      green: green | 0,\n      blue: blue | 0\n    };\n    if (isValidRGBValue(alpha) === true) {\n      color.alpha = alpha | 0;\n    }\n\n    // RGBToHSL(color.r, color.g, color.b);\n\n    return color;\n  }\n}\nfunction hsvToRgb(hue, saturation, value) {\n  value /= 100;\n  var sat = saturation / 100;\n  var C = sat * value;\n  var H = hue / 60;\n  var X = C * (1 - Math.abs(H % 2 - 1));\n  var m = value - C;\n  var precision = 255;\n  C = (C + m) * precision | 0;\n  X = (X + m) * precision | 0;\n  m = m * precision | 0;\n  if (H >= 1 && H < 2) {\n    return setRGBA(X, C, m);\n  }\n  if (H >= 2 && H < 3) {\n    return setRGBA(m, C, X);\n  }\n  if (H >= 3 && H < 4) {\n    return setRGBA(m, X, C);\n  }\n  if (H >= 4 && H < 5) {\n    return setRGBA(X, m, C);\n  }\n  if (H >= 5 && H <= 6) {\n    return setRGBA(C, m, X);\n  }\n  return setRGBA(C, X, m);\n}\nfunction changePicker(x, y, height, width, hue) {\n  if (x > width) {\n    x = width;\n  }\n  if (y > height) {\n    y = height;\n  }\n  if (x < 0) {\n    x = 0;\n  }\n  if (y < 0) {\n    y = 0;\n  }\n  var value = 100 - y * 100 / height | 0;\n  var saturation = x * 100 / width | 0;\n  return Object.assign({}, hsvToRgb(hue, saturation, value), {\n    saturation: saturation,\n    value: value\n  });\n}\nfunction getHue(offsetX, width, saturation, value) {\n  var hue = 360 * offsetX / width | 0;\n  hue = hue < 0 ? 0 : hue > 360 ? 360 : hue;\n  return Object.assign({}, hsvToRgb(hue, saturation, value), {\n    hue: hue\n  });\n}\nfunction getAlpha(value, width) {\n  value = Number((value / width).toFixed(2));\n  return value > 1 ? 1 : value < 0 ? 0 : value;\n}\nfunction rgbToHex(red, green, blue) {\n  var r16 = red.toString(16);\n  var g16 = green.toString(16);\n  var b16 = blue.toString(16);\n  if (red < 16) {\n    r16 = \"0\" + r16;\n  }\n  if (green < 16) {\n    g16 = \"0\" + g16;\n  }\n  if (blue < 16) {\n    b16 = \"0\" + b16;\n  }\n  return r16 + g16 + b16;\n}\nvar hexRegexp = /(^#{0,1}[0-9A-F]{6}$)|(^#{0,1}[0-9A-F]{3}$)|(^#{0,1}[0-9A-F]{8}$)/i;\nvar regexp = /([0-9A-F])([0-9A-F])([0-9A-F])/i;\nfunction hexToRgb(value) {\n  var valid = hexRegexp.test(value);\n  if (valid) {\n    if (value[0] === '#') {\n      value = value.slice(1, value.length);\n    }\n    if (value.length === 3) {\n      value = value.replace(regexp, '$1$1$2$2$3$3');\n    }\n    var red = parseInt(value.substr(0, 2), 16);\n    var green = parseInt(value.substr(2, 2), 16);\n    var blue = parseInt(value.substr(4, 2), 16);\n    var alpha = parseInt(value.substr(6, 2), 16) / 255;\n    var color = setRGBA(red, green, blue, alpha);\n    var hsv = rgbToHSv(Object.assign({}, color));\n    return Object.assign({}, color, hsv);\n  }\n  return false;\n}\nfunction updateGradientActivePercent(offsetX, width) {\n  var leftPercent = offsetX * 100 / width;\n  return leftPercent < 0 ? 0 : leftPercent > 100 ? 100 : leftPercent;\n}\nfunction calculateDegree(x, y, centerX, centerY) {\n  var radians = Math.atan2(x - centerX, y - centerY);\n  return radians * (180 / Math.PI) * -1 + 180;\n}\nfunction getRightValue(newValue, oldValue) {\n  return !newValue && newValue !== 0 ? oldValue : newValue;\n}\nfunction generateSolidStyle(red, green, blue, alpha) {\n  return \"rgba(\" + red + \", \" + green + \", \" + blue + \", \" + alpha + \")\";\n}\nfunction generateGradientStyle(points, type, degree) {\n  var style = '';\n  var sortedPoints = points.slice();\n  sortedPoints.sort(function (a, b) {\n    return a.left - b.left;\n  });\n  if (type === 'linear') {\n    style = \"linear-gradient(\" + degree + \"deg,\";\n  } else {\n    style = 'radial-gradient(';\n  }\n  sortedPoints.forEach(function (point, index) {\n    style += \"rgba(\" + point.red + \", \" + point.green + \", \" + point.blue + \", \" + point.alpha + \") \" + point.left + \"%\";\n    if (index !== sortedPoints.length - 1) {\n      style += ',';\n    }\n  });\n  style += ')';\n  return style;\n}\nfunction Picking(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var hue = ref.hue;\n  var saturation = ref.saturation;\n  var value = ref.value;\n  var updateRgb = ref.updateRgb;\n  var pickingAreaRef = React.useRef();\n  var ref$1 = React.useState(0);\n  var width = ref$1[0];\n  var setWidth = ref$1[1];\n  var ref$2 = React.useState(0);\n  var height = ref$2[0];\n  var setHeight = ref$2[1];\n  React.useEffect(function () {\n    if (pickingAreaRef.current) {\n      setWidth(pickingAreaRef.current.clientWidth);\n      setHeight(pickingAreaRef.current.clientHeight);\n    }\n  }, [pickingAreaRef, setWidth, setHeight]);\n  React.useEffect(function () {\n    var ref = getRgbByHue(hue);\n    var red = ref.red;\n    var green = ref.green;\n    var blue = ref.blue;\n    pickingAreaRef.current.style.backgroundColor = \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n  }, [hue]);\n\n  // generate offsetLeft by saturation\n  var offsetLeft = (saturation * width / 100 | 0) - 6;\n\n  // generate offsetTop by value\n  var offsetTop = (height - value * height / 100 | 0) - 6;\n  var getPointerStyle = {\n    backgroundColor: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\",\n    left: offsetLeft + \"px\",\n    top: offsetTop + \"px\"\n  };\n  var mouseDownHandler = React.useCallback(function (event) {\n    var elementX = event.currentTarget.getBoundingClientRect().x;\n    var elementY = event.currentTarget.getBoundingClientRect().y;\n    var startX = event.pageX;\n    var startY = event.pageY;\n    var positionX = startX - elementX;\n    var positionY = startY - elementY;\n    var color = changePicker(positionX, positionY, height, width, hue);\n    updateRgb(color, 'onStartChange');\n    return {\n      startX: startX,\n      startY: startY,\n      positionX: positionX,\n      positionY: positionY\n    };\n  }, [height, width, hue, updateRgb]);\n  var changeObjectPositions = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var startY = ref.startY;\n    var positionX = ref.positionX;\n    var positionY = ref.positionY;\n    var moveX = event.pageX - startX;\n    var moveY = event.pageY - startY;\n    positionX += moveX;\n    positionY += moveY;\n    var color = changePicker(positionX, positionY, height, width, hue);\n    return {\n      positions: {\n        positionX: positionX,\n        positionY: positionY,\n        startX: event.pageX,\n        startY: event.pageY\n      },\n      color: color\n    };\n  }, [height, hue, width]);\n  var mouseMoveHandler = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var startY = ref.startY;\n    var positionX = ref.positionX;\n    var positionY = ref.positionY;\n    var ref$1 = changeObjectPositions(event, {\n      startX: startX,\n      startY: startY,\n      positionX: positionX,\n      positionY: positionY\n    });\n    var positions = ref$1.positions;\n    var color = ref$1.color;\n    updateRgb(color, 'onChange');\n    return positions;\n  }, [updateRgb, changeObjectPositions]);\n  var mouseUpHandler = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var startY = ref.startY;\n    var positionX = ref.positionX;\n    var positionY = ref.positionY;\n    var ref$1 = changeObjectPositions(event, {\n      startX: startX,\n      startY: startY,\n      positionX: positionX,\n      positionY: positionY\n    });\n    var positions = ref$1.positions;\n    var color = ref$1.color;\n    updateRgb(color, 'onEndChange');\n    return positions;\n  }, [updateRgb, changeObjectPositions]);\n  var mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n  var onMouseDown = function onMouseDown(event) {\n    mouseEvents(event);\n  };\n  return React__default.createElement('div', {\n    className: \"picking-area\",\n    ref: pickingAreaRef,\n    onMouseDown: onMouseDown\n  }, React__default.createElement('div', {\n    className: \"picking-area-overlay1\"\n  }, React__default.createElement('div', {\n    className: \"picking-area-overlay2\"\n  }, React__default.createElement('div', {\n    className: \"picker-pointer\",\n    style: getPointerStyle\n  }))));\n}\nfunction Preview(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var alpha = ref.alpha;\n  var isGradient = ref.isGradient;\n  var points = ref.points;\n  var gradientType = ref.gradientType;\n  var gradientDegree = ref.gradientDegree;\n  var ref$1 = React.useState({});\n  var style = ref$1[0];\n  var setStyle = ref$1[1];\n  React.useEffect(function () {\n    if (isGradient) {\n      var style$1 = generateGradientStyle(points, gradientType, gradientDegree);\n      setStyle({\n        background: style$1\n      });\n      return;\n    }\n    var style = generateSolidStyle(red, green, blue, alpha);\n    setStyle({\n      backgroundColor: style\n    });\n  }, [points, gradientDegree, gradientType, isGradient, red, green, blue, alpha]);\n  return React__default.createElement('div', {\n    className: \"preview-area\"\n  }, React__default.createElement('div', {\n    className: \"preview-box\",\n    style: style\n  }));\n}\nfunction Hue(ref) {\n  var hue = ref.hue;\n  var saturation = ref.saturation;\n  var value = ref.value;\n  var updateRgb = ref.updateRgb;\n  var hueRef = React.useRef();\n  var ref$1 = React.useState(0);\n  var width = ref$1[0];\n  var setWidth = ref$1[1];\n  React.useEffect(function () {\n    if (hueRef.current) {\n      setWidth(hueRef.current.clientWidth);\n    }\n  }, [setWidth]);\n  var mouseDownHandler = React.useCallback(function (event) {\n    var elementX = event.currentTarget.getBoundingClientRect().x;\n    var startX = event.pageX;\n    var positionX = startX - elementX;\n    var color = getHue(positionX, width, saturation, value);\n    updateRgb(color, 'onStartChange');\n    return {\n      startX: startX,\n      positionX: positionX\n    };\n  }, [width, saturation, value, updateRgb]);\n  var changeObjectPositions = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var positionX = ref.positionX;\n    var moveX = event.pageX - startX;\n    positionX += moveX;\n\n    // update value and saturation\n    var offsetX = positionX > width ? width : positionX <= 0 ? 0 : positionX;\n    var color = getHue(offsetX, width, saturation, value);\n    return {\n      positions: {\n        positionX: positionX,\n        startX: event.pageX\n      },\n      color: color\n    };\n  }, [width, saturation, value]);\n  var mouseMoveHandler = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var positionX = ref.positionX;\n    var ref$1 = changeObjectPositions(event, {\n      startX: startX,\n      positionX: positionX\n    });\n    var positions = ref$1.positions;\n    var color = ref$1.color;\n    updateRgb(color, 'onChange');\n    return positions;\n  }, [changeObjectPositions, updateRgb]);\n  var mouseUpHandler = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var positionX = ref.positionX;\n    var ref$1 = changeObjectPositions(event, {\n      startX: startX,\n      positionX: positionX\n    });\n    var positions = ref$1.positions;\n    var color = ref$1.color;\n    updateRgb(color, 'onEndChange');\n    return positions;\n  }, [changeObjectPositions, updateRgb]);\n  var mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n  var onMouseDown = function onMouseDown(event) {\n    mouseEvents(event);\n  };\n  var offsetLeft = (hue * width / 360 | 0) - 6;\n  var pointerStyle = {\n    left: offsetLeft + \"px\"\n  };\n  return React__default.createElement('div', {\n    className: \"hue\",\n    onMouseDown: onMouseDown\n  }, React__default.createElement('div', {\n    className: \"hue-area\",\n    ref: hueRef\n  }, React__default.createElement('div', {\n    className: \"picker-pointer\",\n    style: pointerStyle\n  })));\n}\nfunction Alpha(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var alpha = ref.alpha;\n  var updateRgb = ref.updateRgb;\n  var alphaMaskRef = React.useRef();\n  var ref$1 = React.useState(0);\n  var width = ref$1[0];\n  var setWidth = ref$1[1];\n  React.useEffect(function () {\n    if (alphaMaskRef.current) {\n      setWidth(alphaMaskRef.current.clientWidth);\n    }\n  }, [setWidth]);\n  var mouseDownHandler = React.useCallback(function (event) {\n    var elementX = event.currentTarget.getBoundingClientRect().x;\n    var startX = event.pageX;\n    var positionX = startX - elementX;\n    updateRgb({\n      alpha: getAlpha(positionX, width)\n    }, 'onStartChange');\n    return {\n      startX: startX,\n      positionX: positionX\n    };\n  }, [width, updateRgb]);\n  var changeObjectPositions = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var positionX = ref.positionX;\n    var moveX = event.pageX - startX;\n    positionX += moveX;\n    var alpha = getAlpha(positionX, width);\n    return {\n      positions: {\n        positionX: positionX,\n        startX: event.pageX\n      },\n      alpha: alpha\n    };\n  }, [width]);\n  var mouseMoveHandler = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var positionX = ref.positionX;\n    var ref$1 = changeObjectPositions(event, {\n      startX: startX,\n      positionX: positionX\n    });\n    var positions = ref$1.positions;\n    var alpha = ref$1.alpha;\n    updateRgb({\n      alpha: alpha\n    }, 'onChange');\n    return positions;\n  }, [changeObjectPositions, updateRgb]);\n  var mouseUpHandler = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var positionX = ref.positionX;\n    var ref$1 = changeObjectPositions(event, {\n      startX: startX,\n      positionX: positionX\n    });\n    var positions = ref$1.positions;\n    var alpha = ref$1.alpha;\n    updateRgb({\n      alpha: alpha\n    }, 'onEndChange');\n    return positions;\n  }, [changeObjectPositions, updateRgb]);\n  var mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n  var onMouseDown = function onMouseDown(event) {\n    mouseEvents(event);\n  };\n  var style = {\n    background: \"linear-gradient(to right, rgba(0, 0, 0, 0), rgb(\" + red + \", \" + green + \", \" + blue + \"))\"\n  };\n  var offsetLeft = (alpha * width | 0) - 6;\n  var pointerStyle = {\n    left: offsetLeft + \"px\"\n  };\n  return React__default.createElement('div', {\n    onMouseDown: onMouseDown,\n    className: \"alpha\"\n  }, React__default.createElement('div', {\n    className: \"gradient\",\n    style: style\n  }), React__default.createElement('div', {\n    className: \"alpha-area\"\n  }, React__default.createElement('div', {\n    className: \"alpha-mask\",\n    ref: alphaMaskRef\n  }, React__default.createElement('div', {\n    className: \"picker-pointer\",\n    style: pointerStyle\n  }))));\n}\nfunction GradientPoint(ref) {\n  var point = ref.point;\n  var activePointIndex = ref.activePointIndex;\n  var index = ref.index;\n  var width = ref.width;\n  var positions = ref.positions;\n  var changeActivePointIndex = ref.changeActivePointIndex;\n  var updateGradientLeft = ref.updateGradientLeft;\n  var removePoint = ref.removePoint;\n  var activeClassName = activePointIndex === index ? ' active' : '';\n  var pointStyle = {\n    left: point.left * (width / 100) - 6 + \"px\"\n  };\n  var mouseDownHandler = React.useCallback(function (event) {\n    changeActivePointIndex(index);\n    var startX = event.pageX;\n    var startY = event.pageY;\n    var offsetX = startX - positions.x;\n    updateGradientLeft(point.left, index, 'onStartChange');\n    return {\n      startX: startX,\n      startY: startY,\n      offsetX: offsetX\n    };\n  }, [point.left, index, positions, changeActivePointIndex, updateGradientLeft]);\n  var changeObjectPositions = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var offsetX = ref.offsetX;\n    var moveX = event.pageX - startX;\n    offsetX += moveX;\n    // update point percent\n    var left = updateGradientActivePercent(offsetX, width);\n    return {\n      positions: {\n        offsetX: offsetX,\n        startX: event.pageX\n      },\n      left: left\n    };\n  }, [width]);\n  var mouseMoveHandler = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var offsetX = ref.offsetX;\n    var ref$1 = changeObjectPositions(event, {\n      startX: startX,\n      offsetX: offsetX\n    });\n    var positions = ref$1.positions;\n    var left = ref$1.left;\n    updateGradientLeft(left, index, 'onChange');\n    return positions;\n  }, [index, changeObjectPositions, updateGradientLeft]);\n  var mouseUpHandler = React.useCallback(function (event, ref) {\n    var startX = ref.startX;\n    var offsetX = ref.offsetX;\n    var ref$1 = changeObjectPositions(event, {\n      startX: startX,\n      offsetX: offsetX\n    });\n    var positions = ref$1.positions;\n    var left = ref$1.left;\n    updateGradientLeft(left, index, 'onEndChange');\n    return positions;\n  }, [index, changeObjectPositions, updateGradientLeft]);\n  var mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n  var onMouseDown = function onMouseDown(event) {\n    changeActivePointIndex(index);\n    mouseEvents(event);\n  };\n  var pointerClickHandler = function pointerClickHandler(event) {\n    event.stopPropagation();\n  };\n  return React__default.createElement('div', {\n    className: \"picker-pointer\" + activeClassName,\n    onClick: pointerClickHandler,\n    style: pointStyle,\n    onMouseDown: onMouseDown,\n    onDoubleClick: function onDoubleClick() {\n      return removePoint(index);\n    }\n  }, React__default.createElement('span', {\n    className: \"child-point\" + activeClassName\n  }));\n}\nfunction GradientPoints(ref) {\n  var points = ref.points;\n  var activePointIndex = ref.activePointIndex;\n  var changeActivePointIndex = ref.changeActivePointIndex;\n  var updateGradientLeft = ref.updateGradientLeft;\n  var addPoint = ref.addPoint;\n  var removePoint = ref.removePoint;\n  var ref$1 = React.useState({});\n  var pointsStyle = ref$1[0];\n  var setpointsStyle = ref$1[1];\n  var ref$2 = React.useState(0);\n  var width = ref$2[0];\n  var setWidth = ref$2[1];\n  var ref$3 = React.useState({});\n  var positions = ref$3[0];\n  var setPositions = ref$3[1];\n  var pointsContainerRef = React.useRef();\n  React.useEffect(function () {\n    if (pointsContainerRef.current) {\n      setWidth(pointsContainerRef.current.clientWidth);\n      var pointerPos = pointsContainerRef.current.getBoundingClientRect();\n      setPositions({\n        x: pointerPos.x,\n        y: pointerPos.y\n      });\n    }\n  }, []);\n  React.useEffect(function () {\n    var style = generateGradientStyle(points, 'linear', 90);\n    setpointsStyle({\n      background: style\n    });\n  }, [points]);\n  var pointsContainerClick = React.useCallback(function (event) {\n    var left = updateGradientActivePercent(event.pageX - positions.x, width);\n    addPoint(left);\n  }, [addPoint, positions.x, width]);\n  var pointsContainer = function pointsContainer() {\n    return React__default.createElement('div', {\n      className: \"gradient-slider-container\",\n      ref: pointsContainerRef\n    }, points && points.map(function (point, index) {\n      return React__default.createElement(GradientPoint, {\n        key: index,\n        activePointIndex: activePointIndex,\n        index: index,\n        point: point,\n        width: width,\n        positions: positions,\n        changeActivePointIndex: changeActivePointIndex,\n        updateGradientLeft: updateGradientLeft,\n        removePoint: removePoint\n      });\n    }));\n  };\n  return React__default.createElement('div', {\n    className: \"gradient\",\n    style: pointsStyle,\n    onClick: pointsContainerClick\n  }, pointsContainer());\n}\nfunction Area(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var alpha = ref.alpha;\n  var hue = ref.hue;\n  var saturation = ref.saturation;\n  var value = ref.value;\n  var isGradient = ref.isGradient;\n  var type = ref.type;\n  var degree = ref.degree;\n  var points = ref.points;\n  var activePointIndex = ref.activePointIndex;\n  var updateRgb = ref.updateRgb;\n  var changeActivePointIndex = ref.changeActivePointIndex;\n  var updateGradientLeft = ref.updateGradientLeft;\n  var addPoint = ref.addPoint;\n  var removePoint = ref.removePoint;\n  return React__default.createElement('div', {\n    className: \"picker-area\"\n  }, React__default.createElement(Picking, {\n    red: red,\n    green: green,\n    blue: blue,\n    hue: hue,\n    saturation: saturation,\n    value: value,\n    updateRgb: updateRgb\n  }), isGradient && React__default.createElement(GradientPoints, {\n    type: type,\n    degree: degree,\n    points: points,\n    activePointIndex: activePointIndex,\n    changeActivePointIndex: changeActivePointIndex,\n    updateGradientLeft: updateGradientLeft,\n    addPoint: addPoint,\n    removePoint: removePoint\n  }), React__default.createElement('div', {\n    className: \"preview\"\n  }, React__default.createElement(Preview, {\n    red: red,\n    green: green,\n    blue: blue,\n    alpha: alpha,\n    points: points,\n    gradientDegree: degree,\n    gradientType: type,\n    isGradient: isGradient\n  }), React__default.createElement('div', {\n    className: \"color-hue-alpha\"\n  }, React__default.createElement(Hue, {\n    hue: hue,\n    saturation: saturation,\n    value: value,\n    updateRgb: updateRgb\n  }), React__default.createElement(Alpha, {\n    alpha: alpha,\n    red: red,\n    green: green,\n    blue: blue,\n    updateRgb: updateRgb\n  }))));\n}\nfunction Input(ref) {\n  var value = ref.value;\n  var label = ref.label;\n  var type = ref.type;\n  if (type === void 0) type = 'text';\n  var onChange = ref.onChange;\n  var onFocus = ref.onFocus;\n  var onBlur = ref.onBlur;\n  var classes = ref.classes;\n  return React__default.createElement('div', {\n    className: \"input-field \" + classes\n  }, React__default.createElement('div', {\n    className: \"input-container\"\n  }, React__default.createElement('input', {\n    className: type + \"-input input\",\n    value: value,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur\n  })), React__default.createElement('div', {\n    className: \"label\"\n  }, label));\n}\nfunction Hex(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var updateRgb = ref.updateRgb;\n  var ref$1 = React.useState('');\n  var hexValue = ref$1[0];\n  var setHexValue = ref$1[1];\n  var ref$2 = React.useState(false);\n  var progress = ref$2[0];\n  var setProgress = ref$2[1];\n  React.useEffect(function () {\n    if (progress) {\n      return;\n    }\n    var hex = rgbToHex(red, green, blue);\n    setHexValue(hex);\n  }, [red, green, blue, progress]);\n  var changeHex = React.useCallback(function (event) {\n    setHexValue(event.target.value);\n    var color = hexToRgb(event.target.value);\n    if (color) {\n      updateRgb(color);\n    }\n  }, [setHexValue, updateRgb]);\n  return React__default.createElement(Input, {\n    value: hexValue,\n    label: \"hex\",\n    onChange: changeHex,\n    onFocus: function onFocus() {\n      return setProgress(true);\n    },\n    onBlur: function onBlur() {\n      return setProgress(false);\n    },\n    classes: \"hex\"\n  });\n}\nfunction RGBItem(ref) {\n  var value = ref.value;\n  var type = ref.type;\n  var label = ref.label;\n  var onChange = ref.onChange;\n  var ref$1 = React.useState(value);\n  var inputValue = ref$1[0];\n  var setInputValue = ref$1[1];\n  React.useEffect(function () {\n    if (value !== +inputValue && inputValue !== '') {\n      setInputValue(value);\n    }\n  }, [inputValue, value]);\n  var onChangeHandler = React.useCallback(function (event) {\n    var value = +event.target.value;\n    if (Number.isNaN(value) || value.length > 3 || value < 0 || value > 255) {\n      return;\n    }\n    setInputValue(event.target.value);\n    onChange(value);\n  }, [onChange]);\n  var onBlur = React.useCallback(function () {\n    !inputValue && inputValue !== 0 && setInputValue(value);\n  }, [inputValue, setInputValue, value]);\n  return React__default.createElement(Input, {\n    value: inputValue,\n    type: type,\n    label: label,\n    onChange: onChangeHandler,\n    onBlur: onBlur,\n    classes: \"rgb\"\n  });\n}\nfunction RGB(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var alpha = ref.alpha;\n  var updateRgb = ref.updateRgb;\n  var changeValue = React.useCallback(function (field, value) {\n    var obj, obj$1;\n    if (field === 'alpha') {\n      updateRgb({\n        alpha: value / 100\n      });\n      return;\n    }\n    var color = rgbToHSv((obj = {\n      red: red,\n      green: green,\n      blue: blue\n    }, obj[field] = value, obj));\n    updateRgb(Object.assign({}, color, (obj$1 = {}, obj$1[field] = value, obj$1)));\n  }, [red, green, blue, updateRgb]);\n  return React__default.createElement(React__default.Fragment, null, React__default.createElement(RGBItem, {\n    value: red,\n    type: \"number\",\n    label: \"R\",\n    onChange: function onChange(value) {\n      return changeValue('red', value);\n    }\n  }), React__default.createElement(RGBItem, {\n    value: green,\n    type: \"number\",\n    label: \"G\",\n    onChange: function onChange(value) {\n      return changeValue('green', value);\n    }\n  }), React__default.createElement(RGBItem, {\n    value: blue,\n    type: \"number\",\n    label: \"B\",\n    onChange: function onChange(value) {\n      return changeValue('blue', value);\n    }\n  }), React__default.createElement(RGBItem, {\n    value: parseInt(alpha * 100, 10),\n    type: \"number\",\n    label: \"alpha\",\n    onChange: function onChange(value) {\n      return changeValue('alpha', value);\n    }\n  }));\n}\nfunction Preview$1(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var alpha = ref.alpha;\n  var updateRgb = ref.updateRgb;\n  return React__default.createElement('div', {\n    className: \"color-preview-area\"\n  }, React__default.createElement('div', {\n    className: \"input-group\"\n  }, React__default.createElement(Hex, {\n    red: red,\n    green: green,\n    blue: blue,\n    updateRgb: updateRgb\n  }), React__default.createElement(RGB, {\n    red: red,\n    green: green,\n    blue: blue,\n    alpha: alpha,\n    updateRgb: updateRgb\n  })));\n}\nfunction Solid(ref) {\n  var red = ref.red;\n  var green = ref.green;\n  var blue = ref.blue;\n  var alpha = ref.alpha;\n  var onChange = ref.onChange;\n  var onStartChange = ref.onStartChange;\n  var onEndChange = ref.onEndChange;\n  var ref$1 = React.useState(red);\n  var colorRed = ref$1[0];\n  var setColorRed = ref$1[1];\n  var ref$2 = React.useState(green);\n  var colorGreen = ref$2[0];\n  var setColorGreen = ref$2[1];\n  var ref$3 = React.useState(blue);\n  var colorBlue = ref$3[0];\n  var setColorBlue = ref$3[1];\n  var ref$4 = React.useState(alpha);\n  var colorAlpha = ref$4[0];\n  var setColorAlpha = ref$4[1];\n  var ref$5 = React.useState(0);\n  var colorHue = ref$5[0];\n  var setColorHue = ref$5[1];\n  var ref$6 = React.useState(100);\n  var colorSaturation = ref$6[0];\n  var setColorSaturation = ref$6[1];\n  var ref$7 = React.useState(100);\n  var colorValue = ref$7[0];\n  var setColorValue = ref$7[1];\n  var actions = {\n    onChange: onChange,\n    onStartChange: onStartChange,\n    onEndChange: onEndChange\n  };\n  useMount(function () {\n    var ref = rgbToHSv({\n      red: colorRed,\n      green: colorGreen,\n      blue: colorBlue\n    });\n    var hue = ref.hue;\n    var saturation = ref.saturation;\n    var value = ref.value;\n    setColorHue(hue);\n    setColorSaturation(saturation);\n    setColorValue(value);\n  });\n  var updateColor = React.useCallback(function (ref, actionName) {\n    var red = ref.red;\n    var green = ref.green;\n    var blue = ref.blue;\n    var alpha = ref.alpha;\n    var hue = ref.hue;\n    var saturation = ref.saturation;\n    var value = ref.value;\n    if (actionName === void 0) actionName = 'onChange';\n    red = getRightValue(red, colorRed);\n    green = getRightValue(green, colorGreen);\n    blue = getRightValue(blue, colorBlue);\n    alpha = getRightValue(alpha, colorAlpha);\n    hue = getRightValue(hue, colorHue);\n    saturation = getRightValue(saturation, colorSaturation);\n    value = getRightValue(value, colorValue);\n    setColorRed(red);\n    setColorGreen(green);\n    setColorBlue(blue);\n    setColorAlpha(alpha);\n    setColorHue(hue);\n    setColorSaturation(saturation);\n    setColorValue(value);\n    var action = actions[actionName];\n    action && action({\n      red: red,\n      green: green,\n      blue: blue,\n      alpha: alpha,\n      hue: hue,\n      saturation: saturation,\n      value: value,\n      style: generateSolidStyle(red, green, blue, alpha)\n    });\n  }, [colorRed, colorGreen, colorBlue, colorAlpha, colorHue, colorSaturation, colorValue, actions]);\n  return React__default.createElement(React__default.Fragment, null, React__default.createElement(Area, {\n    red: colorRed,\n    green: colorGreen,\n    blue: colorBlue,\n    alpha: colorAlpha,\n    hue: colorHue,\n    saturation: colorSaturation,\n    value: colorValue,\n    updateRgb: updateColor\n  }), React__default.createElement(Preview$1, {\n    red: colorRed,\n    green: colorGreen,\n    blue: colorBlue,\n    alpha: colorAlpha,\n    updateRgb: updateColor\n  }));\n}\nSolid.defaultProps = {\n  red: 255,\n  green: 0,\n  blue: 0,\n  alpha: 1\n};\nfunction GradientControls(ref) {\n  var type = ref.type;\n  var degree = ref.degree;\n  var changeGradientControl = ref.changeGradientControl;\n  var ref$1 = React.useState(false);\n  var disableClick = ref$1[0];\n  var setDisableClick = ref$1[1];\n  var onClickGradientDegree = React.useCallback(function () {\n    if (disableClick) {\n      setDisableClick(false);\n      return;\n    }\n    var gradientDegree = degree + 45;\n    if (gradientDegree >= 360) {\n      gradientDegree = 0;\n    }\n    changeGradientControl({\n      degree: parseInt(gradientDegree, 10)\n    });\n  }, [disableClick, degree, changeGradientControl]);\n  var mouseDownHandler = React.useCallback(function (event) {\n    var pointer = event.target;\n    var pointerBox = pointer.getBoundingClientRect();\n    var centerY = pointerBox.top + parseInt(8 - window.pageYOffset, 10);\n    var centerX = pointerBox.left + parseInt(8 - window.pageXOffset, 10);\n    return {\n      centerY: centerY,\n      centerX: centerX\n    };\n  }, []);\n  var mouseMoveHandler = React.useCallback(function (event, ref) {\n    var centerX = ref.centerX;\n    var centerY = ref.centerY;\n    setDisableClick(true);\n    var newDegree = calculateDegree(event.clientX, event.clientY, centerX, centerY);\n    changeGradientControl({\n      degree: parseInt(newDegree, 10)\n    });\n    return {\n      centerX: centerX,\n      centerY: centerY\n    };\n  }, [changeGradientControl]);\n  var mouseUpHandler = function mouseUpHandler(event) {\n    var targetClasses = event.target.classList;\n    if (targetClasses.contains('gradient-degrees') || targetClasses.contains('icon-rotate')) {\n      return;\n    }\n    setDisableClick(false);\n  };\n  var mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n  var onMouseDown = function onMouseDown(event) {\n    mouseEvents(event);\n  };\n  var degreesStyle = {\n    transform: \"rotate(\" + degree + \"deg)\"\n  };\n  return React__default.createElement('div', {\n    className: \"gradient-controls\"\n  }, React__default.createElement('div', {\n    className: \"gradient-type\"\n  }, React__default.createElement('div', {\n    className: \"gradient-type-item liner-gradient \" + (type === 'linear' ? 'active' : ''),\n    onClick: function onClick() {\n      return changeGradientControl({\n        type: 'linear'\n      });\n    }\n  }), React__default.createElement('div', {\n    className: \"gradient-type-item radial-gradient \" + (type === 'radial' ? 'active' : ''),\n    onClick: function onClick() {\n      return changeGradientControl({\n        type: 'radial'\n      });\n    }\n  })), type === 'linear' && React__default.createElement('div', {\n    className: \"gradient-degrees-options\"\n  }, React__default.createElement('div', {\n    className: \"gradient-degrees\",\n    onMouseDown: onMouseDown,\n    onClick: onClickGradientDegree\n  }, React__default.createElement('div', {\n    className: \"gradient-degree-center\",\n    style: degreesStyle\n  }, React__default.createElement('div', {\n    className: \"gradient-degree-pointer\"\n  }))), React__default.createElement('div', {\n    className: \"gradient-degree-value\"\n  }, React__default.createElement('p', null, degree, \"°\"))));\n}\nfunction Gradient(ref) {\n  var points = ref.points;\n  var type = ref.type;\n  var degree = ref.degree;\n  var onChange = ref.onChange;\n  var onStartChange = ref.onStartChange;\n  var onEndChange = ref.onEndChange;\n  var ref$1 = React.useState(0);\n  var activePointIndex = ref$1[0];\n  var setActivePointIndex = ref$1[1];\n  var ref$2 = React.useState(points);\n  var gradientPoints = ref$2[0];\n  var setGradientPoints = ref$2[1];\n  var ref$3 = React.useState(gradientPoints[0]);\n  var activePoint = ref$3[0];\n  var setActivePoint = ref$3[1];\n  var ref$4 = React.useState(activePoint.red);\n  var colorRed = ref$4[0];\n  var setColorRed = ref$4[1];\n  var ref$5 = React.useState(activePoint.green);\n  var colorGreen = ref$5[0];\n  var setColorGreen = ref$5[1];\n  var ref$6 = React.useState(activePoint.blue);\n  var colorBlue = ref$6[0];\n  var setColorBlue = ref$6[1];\n  var ref$7 = React.useState(activePoint.alpha);\n  var colorAlpha = ref$7[0];\n  var setColorAlpha = ref$7[1];\n  var ref$8 = React.useState(0);\n  var colorHue = ref$8[0];\n  var setColorHue = ref$8[1];\n  var ref$9 = React.useState(100);\n  var colorSaturation = ref$9[0];\n  var setColorSaturation = ref$9[1];\n  var ref$10 = React.useState(100);\n  var colorValue = ref$10[0];\n  var setColorValue = ref$10[1];\n  var ref$11 = React.useState(type);\n  var gradientType = ref$11[0];\n  var setGradientType = ref$11[1];\n  var ref$12 = React.useState(degree);\n  var gradientDegree = ref$12[0];\n  var setGradientDegree = ref$12[1];\n  var actions = {\n    onChange: onChange,\n    onStartChange: onStartChange,\n    onEndChange: onEndChange\n  };\n  useMount(function () {\n    var ref = rgbToHSv({\n      red: colorRed,\n      green: colorGreen,\n      blue: colorBlue\n    });\n    var hue = ref.hue;\n    var saturation = ref.saturation;\n    var value = ref.value;\n    setColorHue(hue);\n    setColorSaturation(saturation);\n    setColorValue(value);\n  });\n  var removePoint = React.useCallback(function (index) {\n    if (index === void 0) index = activePointIndex;\n    if (gradientPoints.length <= 2) {\n      return;\n    }\n    var localGradientPoints = gradientPoints.slice();\n    localGradientPoints.splice(index, 1);\n    setGradientPoints(localGradientPoints);\n    if (index > 0) {\n      setActivePointIndex(index - 1);\n    }\n    onChange && onChange({\n      points: localGradientPoints,\n      type: gradientType,\n      degree: gradientDegree,\n      style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree)\n    });\n  }, [gradientPoints, activePointIndex, gradientType, gradientDegree, onChange]);\n  var keyUpHandler = React.useCallback(function (event) {\n    if (event.keyCode === 46 || event.keyCode === 8) {\n      removePoint(activePointIndex);\n    }\n  }, [activePointIndex, removePoint]);\n  React.useEffect(function () {\n    document.addEventListener('keyup', keyUpHandler);\n    return function () {\n      document.removeEventListener('keyup', keyUpHandler);\n    };\n  });\n  var changeGradientControl = React.useCallback(function (ref, actionName) {\n    var type = ref.type;\n    var degree = ref.degree;\n    if (actionName === void 0) actionName = 'onChange';\n    type = getRightValue(type, gradientType);\n    degree = getRightValue(degree, gradientDegree);\n    setGradientType(type);\n    setGradientDegree(degree);\n    var action = actions[actionName];\n    action && action({\n      points: gradientPoints,\n      type: type,\n      degree: degree,\n      style: generateGradientStyle(gradientPoints, type, degree)\n    });\n  }, [actions, gradientPoints, gradientDegree, gradientType]);\n  var changeActivePointIndex = React.useCallback(function (index) {\n    setActivePointIndex(index);\n    var localGradientPoint = gradientPoints[index];\n    var red = localGradientPoint.red;\n    var green = localGradientPoint.green;\n    var blue = localGradientPoint.blue;\n    var alpha = localGradientPoint.alpha;\n    setActivePoint(localGradientPoint);\n    setColorRed(red);\n    setColorGreen(green);\n    setColorBlue(blue);\n    setColorAlpha(alpha);\n    var ref = rgbToHSv({\n      red: red,\n      green: green,\n      blue: blue\n    });\n    var hue = ref.hue;\n    var saturation = ref.saturation;\n    var value = ref.value;\n    setColorHue(hue);\n    setColorSaturation(saturation);\n    setColorValue(value);\n  }, [gradientPoints]);\n  var updateColor = React.useCallback(function (ref, actionName) {\n    var red = ref.red;\n    var green = ref.green;\n    var blue = ref.blue;\n    var alpha = ref.alpha;\n    var hue = ref.hue;\n    var saturation = ref.saturation;\n    var value = ref.value;\n    if (actionName === void 0) actionName = 'onChange';\n    red = getRightValue(red, colorRed);\n    green = getRightValue(green, colorGreen);\n    blue = getRightValue(blue, colorBlue);\n    alpha = getRightValue(alpha, colorAlpha);\n    hue = getRightValue(hue, colorHue);\n    saturation = getRightValue(saturation, colorSaturation);\n    value = getRightValue(value, colorValue);\n    var localGradientPoints = gradientPoints.slice();\n    localGradientPoints[activePointIndex] = Object.assign({}, localGradientPoints[activePointIndex], {\n      red: red,\n      green: green,\n      blue: blue,\n      alpha: alpha\n    });\n    setColorRed(red);\n    setColorGreen(green);\n    setColorBlue(blue);\n    setColorAlpha(alpha);\n    setColorHue(hue);\n    setColorSaturation(saturation);\n    setColorValue(value);\n    setGradientPoints(localGradientPoints);\n    var action = actions[actionName];\n    action && action({\n      points: localGradientPoints,\n      type: gradientType,\n      degree: gradientDegree,\n      style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree)\n    });\n  }, [colorRed, colorGreen, colorBlue, colorAlpha, colorHue, colorSaturation, colorValue, activePointIndex, gradientPoints, actions, gradientType, gradientDegree]);\n  var updateGradientLeft = React.useCallback(function (left, index, actionName) {\n    if (actionName === void 0) actionName = 'onChange';\n    var localGradientPoints = gradientPoints.slice();\n    localGradientPoints[index].left = left;\n    setGradientPoints(localGradientPoints);\n    var action = actions[actionName];\n    action && action({\n      points: localGradientPoints,\n      type: gradientType,\n      degree: gradientDegree,\n      style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree)\n    });\n  }, [actions, gradientPoints, gradientDegree, gradientType]);\n  var addPoint = React.useCallback(function (left) {\n    var localGradientPoints = gradientPoints.slice();\n    localGradientPoints.push(Object.assign({}, localGradientPoints[activePointIndex], {\n      left: left\n    }));\n    setGradientPoints(localGradientPoints);\n    setActivePointIndex(localGradientPoints.length - 1);\n    onChange && onChange({\n      points: localGradientPoints,\n      type: gradientType,\n      degree: gradientDegree,\n      style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree)\n    });\n  }, [onChange, gradientPoints, activePointIndex, gradientType, gradientDegree]);\n  return React__default.createElement(React__default.Fragment, null, React__default.createElement(GradientControls, {\n    type: gradientType,\n    degree: gradientDegree,\n    changeGradientControl: changeGradientControl\n  }), React__default.createElement(Area, {\n    red: colorRed,\n    green: colorGreen,\n    blue: colorBlue,\n    alpha: colorAlpha,\n    hue: colorHue,\n    saturation: colorSaturation,\n    value: colorValue,\n    updateRgb: updateColor,\n    isGradient: true,\n    type: gradientType,\n    degree: gradientDegree,\n    points: gradientPoints,\n    activePointIndex: activePointIndex,\n    changeGradientControl: changeGradientControl,\n    changeActivePointIndex: changeActivePointIndex,\n    updateGradientLeft: updateGradientLeft,\n    addPoint: addPoint,\n    removePoint: removePoint\n  }), React__default.createElement(Preview$1, {\n    red: colorRed,\n    green: colorGreen,\n    blue: colorBlue,\n    alpha: colorAlpha,\n    updateRgb: updateColor\n  }));\n}\nfunction ColorPicker(ref) {\n  var color = ref.color;\n  var isGradient = ref.isGradient;\n  var gradient = ref.gradient;\n  var onStartChange = ref.onStartChange;\n  var onChange = ref.onChange;\n  var onEndChange = ref.onEndChange;\n  return React__default.createElement('div', {\n    className: \"ui-color-picker\"\n  }, isGradient ? React__default.createElement(Gradient, {\n    points: gradient.points,\n    updateColor: onChange,\n    type: gradient.type,\n    degree: gradient.degree,\n    onChange: onChange,\n    onStartChange: onStartChange,\n    onEndChange: onEndChange\n  }) : React__default.createElement(Solid, {\n    red: color.red,\n    green: color.green,\n    blue: color.blue,\n    alpha: color.alpha,\n    onChange: onChange,\n    onStartChange: onStartChange,\n    onEndChange: onEndChange\n  }));\n}\nColorPicker.defaultProps = {\n  isGradient: false,\n  onChange: function onChange() {},\n  color: {\n    red: 255,\n    green: 0,\n    blue: 0,\n    alpha: 1\n  },\n  gradient: {\n    points: [{\n      left: 0,\n      red: 0,\n      green: 0,\n      blue: 0,\n      alpha: 1\n    }, {\n      left: 100,\n      red: 255,\n      green: 0,\n      blue: 0,\n      alpha: 1\n    }],\n    degree: 0,\n    type: 'linear'\n  }\n};\nexports.ColorPicker = ColorPicker;","map":{"version":3,"sources":["../src/lib/hooks/mouseEvents.js","../src/lib/hooks/useMount.js","../src/lib/helpers/rgbToHsv.js","../src/lib/helpers/getRgbByHue.js","../src/lib/helpers/setRgba.js","../src/lib/helpers/hsvToRgb.js","../src/lib/helpers/changePicker.js","../src/lib/helpers/getHue.js","../src/lib/helpers/getAlpha.js","../src/lib/helpers/rgbToHex.js","../src/lib/helpers/hexToRgb.js","../src/lib/helpers/updateGradientActivePercent.js","../src/lib/helpers/calculateDegree.js","../src/lib/helpers/getRightValue.js","../src/lib/helpers/generateStyles.js","../src/lib/components/ColorPicker/Area/Picking/index.jsx","../src/lib/components/ColorPicker/Area/Preview/index.jsx","../src/lib/components/ColorPicker/Area/Hue/index.jsx","../src/lib/components/ColorPicker/Area/Alpha/index.jsx","../src/lib/components/ColorPicker/Area/GradientPoints/GradientPoint/index.jsx","../src/lib/components/ColorPicker/Area/GradientPoints/index.jsx","../src/lib/components/ColorPicker/Area/index.jsx","../src/lib/components/UI/Input/index.jsx","../src/lib/components/ColorPicker/Preview/Hex/index.jsx","../src/lib/components/ColorPicker/Preview/RGB/item/index.jsx","../src/lib/components/ColorPicker/Preview/RGB/index.jsx","../src/lib/components/ColorPicker/Preview/index.jsx","../src/lib/components/ColorPicker/Solid/index.jsx","../src/lib/components/ColorPicker/Gradient/GradientControls/index.jsx","../src/lib/components/ColorPicker/Gradient/index.jsx","../src/lib/components/ColorPicker/index.jsx"],"names":["let","const","useEffect","setRgba","rgbToHsv","useRef","useState","useCallback","React","style","Preview"],"mappings":"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","sourcesContent":["export default function useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler) {\n    return function mouseEventsHandler(event) {\n        let positions = mouseDownHandler(event);\n\n        function onMouseMove(event) {\n            positions = mouseMoveHandler(event, positions) || positions;\n        }\n\n        window.addEventListener('mousemove', onMouseMove);\n\n        window.addEventListener('mouseup', event => {\n            window.removeEventListener('mousemove', onMouseMove);\n\n            mouseUpHandler && mouseUpHandler(event, positions);\n        }, { once: true });\n    };\n}\n","/* eslint react-hooks/exhaustive-deps: 0 */\n\nimport { useEffect } from 'react';\n\nconst useMount = effect => useEffect(effect, []);\n\nexport default useMount;\n","export default function rgbToHSv({ red, green, blue }) {\n    let rr;\n    let gg;\n    let bb;\n    let h;\n    let s;\n\n    const rabs = red / 255;\n    const gabs = green / 255;\n    const babs = blue / 255;\n    const v = Math.max(rabs, gabs, babs);\n    const diff = v - Math.min(rabs, gabs, babs);\n    const diffc = c => (v - c) / 6 / diff + 1 / 2;\n    if (diff === 0) {\n        h = 0;\n        s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return {\n        hue: Math.round(h * 360),\n        saturation: Math.round(s * 100),\n        value: Math.round(v * 100),\n    };\n}\n","export default function getRgbByHue(hue) {\n    let C = 1;\n    const H = hue / 60;\n    let X = C * (1 - Math.abs(H % 2 - 1));\n    const m = 0;\n    const precision = 255;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    C = (C + m) * precision | 0;\n    X = (X + m) * precision | 0;\n\n    if (H >= 0 && H < 1) {\n        r = C | 0;\n        g = X | 0;\n        b = m | 0;\n    }\n    if (H >= 1 && H < 2) {\n        r = X | 0;\n        g = C | 0;\n        b = m | 0;\n    }\n    if (H >= 2 && H < 3) {\n        r = m | 0;\n        g = C | 0;\n        b = X | 0;\n    }\n    if (H >= 3 && H < 4) {\n        r = m | 0;\n        g = X | 0;\n        b = C | 0;\n    }\n    if (H >= 4 && H < 5) {\n        r = X | 0;\n        g = m | 0;\n        b = C | 0;\n    }\n    if (H >= 5 && H <= 6) {\n        r = C | 0;\n        g = m | 0;\n        b = X | 0;\n    }\n\n    return {\n        red: r,\n        green: g,\n        blue: b,\n    };\n}\n","function isValidRGBValue(value) {\n    return (typeof (value) === 'number' && Number.isNaN(value) === false && value >= 0 && value <= 255);\n}\n\nexport default function setRGBA(red, green, blue, alpha) {\n    if (isValidRGBValue(red) && isValidRGBValue(green) && isValidRGBValue(blue)) {\n        const color = {\n            red: red | 0,\n            green: green | 0,\n            blue: blue | 0,\n        };\n\n        if (isValidRGBValue(alpha) === true) {\n            color.alpha = alpha | 0;\n        }\n\n        // RGBToHSL(color.r, color.g, color.b);\n\n        return color;\n    }\n}\n","import setRGBA from './setRgba';\n\nexport default function hsvToRgb(hue, saturation, value) {\n    value /= 100;\n    const sat = saturation / 100;\n    let C = sat * value;\n    const H = hue / 60;\n    let X = C * (1 - Math.abs(H % 2 - 1));\n    let m = value - C;\n    const precision = 255;\n\n    C = (C + m) * precision | 0;\n    X = (X + m) * precision | 0;\n    m = m * precision | 0;\n\n    if (H >= 1 && H < 2) {\n        return setRGBA(X, C, m);\n    }\n    if (H >= 2 && H < 3) {\n        return setRGBA(m, C, X);\n    }\n    if (H >= 3 && H < 4) {\n        return setRGBA(m, X, C);\n    }\n    if (H >= 4 && H < 5) {\n        return setRGBA(X, m, C);\n    }\n    if (H >= 5 && H <= 6) {\n        return setRGBA(C, m, X);\n    }\n\n    return setRGBA(C, X, m);\n}\n","import hsvToRgb from './hsvToRgb';\n\nexport default function changePicker(x, y, height, width, hue) {\n    if (x > width) x = width;\n    if (y > height) y = height;\n    if (x < 0) x = 0;\n    if (y < 0) y = 0;\n    const value = 100 - (y * 100 / height) | 0;\n    const saturation = x * 100 / width | 0;\n    return {\n        ...hsvToRgb(hue, saturation, value),\n        saturation,\n        value,\n    };\n}\n","import { hsvToRgb } from './index';\n\nexport default function getHue(offsetX, width, saturation, value) {\n    let hue = ((360 * offsetX) / width) | 0;\n\n    hue = hue < 0 ? 0 : hue > 360 ? 360 : hue;\n\n    return {\n        ...hsvToRgb(hue, saturation, value),\n        hue,\n    };\n}\n","export default function getAlpha(value, width) {\n    value = Number((value / width).toFixed(2));\n\n    return value > 1 ? 1 : value < 0 ? 0 : value;\n}\n","export default function rgbToHex(red, green, blue) {\n    let r16 = red.toString(16);\n    let g16 = green.toString(16);\n    let b16 = blue.toString(16);\n\n    if (red < 16) r16 = `0${r16}`;\n    if (green < 16) g16 = `0${g16}`;\n    if (blue < 16) b16 = `0${b16}`;\n\n    return r16 + g16 + b16;\n}\n","import { rgbToHsv, setRgba } from './index';\n\nconst hexRegexp = /(^#{0,1}[0-9A-F]{6}$)|(^#{0,1}[0-9A-F]{3}$)|(^#{0,1}[0-9A-F]{8}$)/i;\n\nconst regexp = /([0-9A-F])([0-9A-F])([0-9A-F])/i;\n\nexport default function hexToRgb(value) {\n    const valid = hexRegexp.test(value);\n\n    if (valid) {\n        if (value[0] === '#') value = value.slice(1, value.length);\n\n        if (value.length === 3) value = value.replace(regexp, '$1$1$2$2$3$3');\n\n        const red = parseInt(value.substr(0, 2), 16);\n        const green = parseInt(value.substr(2, 2), 16);\n        const blue = parseInt(value.substr(4, 2), 16);\n        const alpha = parseInt(value.substr(6, 2), 16) / 255;\n\n        const color = setRgba(red, green, blue, alpha);\n        const hsv = rgbToHsv({ ...color });\n\n        return {\n            ...color,\n            ...hsv,\n        };\n    }\n\n    return false;\n}\n","export default function updateGradientActivePercent(offsetX, width) {\n    const leftPercent = (offsetX * 100) / width;\n    return leftPercent < 0 ? 0 : leftPercent > 100 ? 100 : leftPercent;\n}\n","export default function calculateDegree(x, y, centerX, centerY) {\n    const radians = Math.atan2(x - centerX, y - centerY);\n    return (radians * (180 / Math.PI) * -1) + 180;\n}\n","export default function getRightValue(newValue, oldValue) {\n    return (!newValue && newValue !== 0) ? oldValue : newValue;\n}\n","export function generateSolidStyle(red, green, blue, alpha) {\n    return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n}\n\nexport function generateGradientStyle(points, type, degree) {\n    let style = '';\n    const sortedPoints = points.slice();\n\n    sortedPoints.sort((a, b) => a.left - b.left);\n\n    if (type === 'linear') {\n        style = `linear-gradient(${degree}deg,`;\n    } else {\n        style = 'radial-gradient(';\n    }\n\n    sortedPoints.forEach((point, index) => {\n        style += `rgba(${point.red}, ${point.green}, ${point.blue}, ${point.alpha}) ${point.left}%`;\n\n        if (index !== sortedPoints.length - 1) {\n            style += ',';\n        }\n    });\n\n    style += ')';\n    return style;\n}\n","import React, {\n    useEffect, useCallback, useRef, useState,\n} from 'react';\n\nimport { changePicker, getRgbByHue } from 'lib/helpers';\nimport { useMouseEvents } from 'lib/hooks';\n\nfunction Picking({\n    red,\n    green,\n    blue,\n    hue,\n    saturation,\n    value,\n    updateRgb,\n}) {\n    const pickingAreaRef = useRef();\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        if (pickingAreaRef.current) {\n            setWidth(pickingAreaRef.current.clientWidth);\n            setHeight(pickingAreaRef.current.clientHeight);\n        }\n    }, [pickingAreaRef, setWidth, setHeight]);\n\n    useEffect(() => {\n        const { red, green, blue } = getRgbByHue(hue);\n\n        pickingAreaRef.current.style.backgroundColor = `rgb(${red}, ${green}, ${blue})`;\n    }, [hue]);\n\n    // generate offsetLeft by saturation\n    const offsetLeft = ((saturation * width / 100) | 0) - 6;\n\n    // generate offsetTop by value\n    const offsetTop = (height - (value * height / 100) | 0) - 6;\n\n    const getPointerStyle = {\n        backgroundColor: `rgb(${red}, ${green}, ${blue})`,\n        left: `${offsetLeft}px`,\n        top: `${offsetTop}px`,\n    };\n\n    const mouseDownHandler = useCallback(event => {\n        const elementX = event.currentTarget.getBoundingClientRect().x;\n        const elementY = event.currentTarget.getBoundingClientRect().y;\n        const startX = event.pageX;\n        const startY = event.pageY;\n        const positionX = startX - elementX;\n        const positionY = startY - elementY;\n\n        const color = changePicker(positionX, positionY, height, width, hue);\n\n        updateRgb(color, 'onStartChange');\n        return {\n            startX,\n            startY,\n            positionX,\n            positionY,\n\n        };\n    }, [height, width, hue, updateRgb]);\n\n    const changeObjectPositions = useCallback((event, {\n        startX, startY, positionX, positionY,\n    }) => {\n        const moveX = event.pageX - startX;\n        const moveY = event.pageY - startY;\n        positionX += moveX;\n        positionY += moveY;\n\n        const color = changePicker(positionX, positionY, height, width, hue);\n\n        return {\n            positions: {\n                positionX,\n                positionY,\n                startX: event.pageX,\n                startY: event.pageY,\n            },\n            color,\n        };\n    }, [height, hue, width]);\n\n    const mouseMoveHandler = useCallback((event, {\n        startX, startY, positionX, positionY,\n    }) => {\n        const { positions, color } = changeObjectPositions(event, {\n            startX, startY, positionX, positionY,\n        });\n\n        updateRgb(color, 'onChange');\n\n        return positions;\n    }, [updateRgb, changeObjectPositions]);\n\n    const mouseUpHandler = useCallback((event, {\n        startX, startY, positionX, positionY,\n    }) => {\n        const { positions, color } = changeObjectPositions(event, {\n            startX, startY, positionX, positionY,\n        });\n\n        updateRgb(color, 'onEndChange');\n\n        return positions;\n    }, [updateRgb, changeObjectPositions]);\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        mouseEvents(event);\n    };\n\n    return (\n        <div\n            className=\"picking-area\"\n            ref={pickingAreaRef}\n            onMouseDown={onMouseDown}\n        >\n            <div className=\"picking-area-overlay1\">\n                <div className=\"picking-area-overlay2\">\n                    <div className=\"picker-pointer\" style={getPointerStyle} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Picking;\n","import React, { useEffect, useState } from 'react';\n\nimport { generateSolidStyle, generateGradientStyle } from 'lib/helpers';\n\nfunction Preview({\n    red,\n    green,\n    blue,\n    alpha,\n    isGradient,\n    points,\n    gradientType,\n    gradientDegree,\n}) {\n    const [style, setStyle] = useState({});\n\n    useEffect(() => {\n        if (isGradient) {\n            const style = generateGradientStyle(points, gradientType, gradientDegree);\n\n            setStyle({ background: style });\n\n            return;\n        }\n\n        const style = generateSolidStyle(red, green, blue, alpha);\n\n        setStyle({ backgroundColor: style });\n    }, [points, gradientDegree, gradientType, isGradient, red, green, blue, alpha]);\n\n    return (\n        <div className=\"preview-area\">\n            <div className=\"preview-box\" style={style} />\n        </div>\n    );\n}\n\nexport default Preview;\n","import React, {\n    useCallback, useEffect, useRef, useState,\n} from 'react';\n\nimport { useMouseEvents } from 'lib/hooks';\nimport { getHue } from 'lib/helpers';\n\nfunction Hue({\n    hue, saturation, value, updateRgb,\n}) {\n    const hueRef = useRef();\n    const [width, setWidth] = useState(0);\n\n    useEffect(() => {\n        if (hueRef.current) {\n            setWidth(hueRef.current.clientWidth);\n        }\n    }, [setWidth]);\n\n    const mouseDownHandler = useCallback(event => {\n        const elementX = event.currentTarget.getBoundingClientRect().x;\n        const startX = event.pageX;\n        const positionX = startX - elementX;\n\n        const color = getHue(positionX, width, saturation, value);\n\n        updateRgb(color, 'onStartChange');\n\n        return {\n            startX,\n            positionX,\n        };\n    }, [width, saturation, value, updateRgb]);\n\n    const changeObjectPositions = useCallback((event, { startX, positionX }) => {\n        const moveX = event.pageX - startX;\n        positionX += moveX;\n\n        // update value and saturation\n        const offsetX = positionX > width ? width : positionX <= 0 ? 0 : positionX;\n        const color = getHue(offsetX, width, saturation, value);\n\n        return {\n            positions: {\n                positionX,\n                startX: event.pageX,\n            },\n            color,\n        };\n    }, [width, saturation, value]);\n\n    const mouseMoveHandler = useCallback((event, { startX, positionX }) => {\n        const { positions, color } = changeObjectPositions(event, { startX, positionX });\n\n        updateRgb(color, 'onChange');\n\n        return positions;\n    }, [changeObjectPositions, updateRgb]);\n\n    const mouseUpHandler = useCallback((event, { startX, positionX }) => {\n        const { positions, color } = changeObjectPositions(event, { startX, positionX });\n\n        updateRgb(color, 'onEndChange');\n\n        return positions;\n    }, [changeObjectPositions, updateRgb]);\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        mouseEvents(event);\n    };\n\n    const offsetLeft = ((hue * width / 360) | 0) - 6;\n\n    const pointerStyle = {\n        left: `${offsetLeft}px`,\n    };\n\n    return (\n        <div\n            className=\"hue\"\n            onMouseDown={onMouseDown}\n        >\n            <div className=\"hue-area\" ref={hueRef}>\n                <div\n                    className=\"picker-pointer\"\n                    style={pointerStyle}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Hue;\n","import React, {\n    useCallback, useEffect, useRef, useState,\n} from 'react';\n\nimport { useMouseEvents } from 'lib/hooks';\nimport { getAlpha } from 'lib/helpers';\n\nfunction Alpha({\n    red, green, blue, alpha, updateRgb,\n}) {\n    const alphaMaskRef = useRef();\n    const [width, setWidth] = useState(0);\n\n    useEffect(() => {\n        if (alphaMaskRef.current) {\n            setWidth(alphaMaskRef.current.clientWidth);\n        }\n    }, [setWidth]);\n\n    const mouseDownHandler = useCallback(event => {\n        const elementX = event.currentTarget.getBoundingClientRect().x;\n        const startX = event.pageX;\n        const positionX = startX - elementX;\n\n        updateRgb({ alpha: getAlpha(positionX, width) }, 'onStartChange');\n        return {\n            startX,\n            positionX,\n\n        };\n    }, [width, updateRgb]);\n\n    const changeObjectPositions = useCallback((event, { startX, positionX }) => {\n        const moveX = event.pageX - startX;\n        positionX += moveX;\n\n        const alpha = getAlpha(positionX, width);\n\n        return {\n            positions: {\n                positionX,\n                startX: event.pageX,\n            },\n            alpha,\n        };\n    }, [width]);\n\n    const mouseMoveHandler = useCallback((event, { startX, positionX }) => {\n        const { positions, alpha } = changeObjectPositions(event, { startX, positionX });\n\n        updateRgb({ alpha }, 'onChange');\n\n        return positions;\n    }, [changeObjectPositions, updateRgb]);\n\n    const mouseUpHandler = useCallback((event, { startX, positionX }) => {\n        const { positions, alpha } = changeObjectPositions(event, { startX, positionX });\n\n        updateRgb({ alpha }, 'onEndChange');\n\n        return positions;\n    }, [changeObjectPositions, updateRgb]);\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        mouseEvents(event);\n    };\n\n    const style = {\n        background: `linear-gradient(to right, rgba(0, 0, 0, 0), rgb(${red}, ${green}, ${blue}))`,\n    };\n\n    const offsetLeft = ((alpha * width) | 0) - 6;\n\n    const pointerStyle = {\n        left: `${offsetLeft}px`,\n    };\n\n    return (\n        <div\n            onMouseDown={onMouseDown}\n            className=\"alpha\"\n        >\n            <div className=\"gradient\" style={style} />\n            <div className=\"alpha-area\">\n                <div className=\"alpha-mask\" ref={alphaMaskRef}>\n                    <div className=\"picker-pointer\" style={pointerStyle} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alpha;\n","import React, { useCallback } from 'react';\n\nimport { updateGradientActivePercent } from 'lib/helpers';\nimport { useMouseEvents } from 'lib/hooks';\n\nfunction GradientPoint({\n    point,\n    activePointIndex,\n    index,\n    width,\n    positions,\n    changeActivePointIndex,\n    updateGradientLeft,\n    removePoint,\n}) {\n    const activeClassName = activePointIndex === index ? ' active' : '';\n\n    const pointStyle = {\n        left: `${(point.left * (width / 100)) - 6}px`,\n    };\n\n    const mouseDownHandler = useCallback(event => {\n        changeActivePointIndex(index);\n\n        const startX = event.pageX;\n        const startY = event.pageY;\n        const offsetX = startX - positions.x;\n\n        updateGradientLeft(point.left, index, 'onStartChange');\n\n        return {\n            startX,\n            startY,\n            offsetX,\n\n        };\n    }, [point.left, index, positions, changeActivePointIndex, updateGradientLeft]);\n\n    const changeObjectPositions = useCallback((event, { startX, offsetX }) => {\n        const moveX = event.pageX - startX;\n        offsetX += moveX;\n        // update point percent\n        const left = updateGradientActivePercent(offsetX, width);\n\n        return {\n            positions: {\n                offsetX,\n                startX: event.pageX,\n            },\n            left,\n        };\n    }, [width]);\n\n    const mouseMoveHandler = useCallback((event, { startX, offsetX }) => {\n        const { positions, left } = changeObjectPositions(event, { startX, offsetX });\n\n        updateGradientLeft(left, index, 'onChange');\n\n        return positions;\n    }, [index, changeObjectPositions, updateGradientLeft]);\n\n    const mouseUpHandler = useCallback((event, { startX, offsetX }) => {\n        const { positions, left } = changeObjectPositions(event, { startX, offsetX });\n\n        updateGradientLeft(left, index, 'onEndChange');\n\n        return positions;\n    }, [index, changeObjectPositions, updateGradientLeft]);\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        changeActivePointIndex(index);\n        mouseEvents(event);\n    };\n\n    const pointerClickHandler = event => {\n        event.stopPropagation();\n    };\n\n    return (\n        <div\n            className={`picker-pointer${activeClassName}`}\n            onClick={pointerClickHandler}\n            style={pointStyle}\n            onMouseDown={onMouseDown}\n            onDoubleClick={() => removePoint(index)}\n        >\n            <span className={`child-point${activeClassName}`} />\n        </div>\n    );\n}\n\nexport default GradientPoint;\n","import React, {\n    useEffect, useState, useRef, useCallback,\n} from 'react';\n\nimport { generateGradientStyle, updateGradientActivePercent } from 'lib/helpers';\n\nimport GradientPoint from './GradientPoint';\n\nfunction GradientPoints({\n    points, activePointIndex, changeActivePointIndex, updateGradientLeft, addPoint, removePoint,\n}) {\n    const [pointsStyle, setpointsStyle] = useState({});\n    const [width, setWidth] = useState(0);\n    const [positions, setPositions] = useState({});\n\n    const pointsContainerRef = useRef();\n\n\n    useEffect(() => {\n        if (pointsContainerRef.current) {\n            setWidth(pointsContainerRef.current.clientWidth);\n\n            const pointerPos = pointsContainerRef.current.getBoundingClientRect();\n            setPositions({ x: pointerPos.x, y: pointerPos.y });\n        }\n    }, []);\n    useEffect(() => {\n        const style = generateGradientStyle(points, 'linear', 90);\n\n        setpointsStyle({ background: style });\n    }, [points]);\n\n\n    const pointsContainerClick = useCallback(event => {\n        const left = updateGradientActivePercent(event.pageX - positions.x, width);\n\n        addPoint(left);\n    }, [addPoint, positions.x, width]);\n\n    const pointsContainer = () => (\n        <div\n            className=\"gradient-slider-container\"\n            ref={pointsContainerRef}\n        >\n            {\n                points && points.map((point, index) => (\n                    <GradientPoint\n                        key={index}\n                        activePointIndex={activePointIndex}\n                        index={index}\n                        point={point}\n                        width={width}\n                        positions={positions}\n                        changeActivePointIndex={changeActivePointIndex}\n                        updateGradientLeft={updateGradientLeft}\n                        removePoint={removePoint}\n                    />\n                ))\n            }\n        </div>\n    );\n\n    return (\n        <div\n            className=\"gradient\"\n            style={pointsStyle}\n            onClick={pointsContainerClick}\n        >\n            {pointsContainer()}\n        </div>\n\n\n    );\n}\n\nexport default GradientPoints;\n","import React from 'react';\n\nimport Picking from './Picking';\nimport Preview from './Preview';\nimport Hue from './Hue';\nimport Alpha from './Alpha';\nimport GradientPoints from './GradientPoints';\n\nfunction Area({\n    red,\n    green,\n    blue,\n    alpha,\n    hue,\n    saturation,\n    value,\n    isGradient,\n    type,\n    degree,\n    points,\n    activePointIndex,\n    updateRgb,\n    changeActivePointIndex,\n    updateGradientLeft,\n    addPoint,\n    removePoint,\n}) {\n    return (\n        <div className=\"picker-area\">\n            <Picking\n                red={red}\n                green={green}\n                blue={blue}\n                hue={hue}\n                saturation={saturation}\n                value={value}\n                updateRgb={updateRgb}\n            />\n\n            {\n                isGradient\n                && (\n                    <GradientPoints\n                        type={type}\n                        degree={degree}\n                        points={points}\n                        activePointIndex={activePointIndex}\n                        changeActivePointIndex={changeActivePointIndex}\n                        updateGradientLeft={updateGradientLeft}\n                        addPoint={addPoint}\n                        removePoint={removePoint}\n                    />\n                )\n            }\n\n            <div className=\"preview\">\n                <Preview\n                    red={red}\n                    green={green}\n                    blue={blue}\n                    alpha={alpha}\n                    points={points}\n                    gradientDegree={degree}\n                    gradientType={type}\n                    isGradient={isGradient}\n                />\n\n                <div className=\"color-hue-alpha\">\n                    <Hue\n                        hue={hue}\n                        saturation={saturation}\n                        value={value}\n                        updateRgb={updateRgb}\n                    />\n                    <Alpha\n                        alpha={alpha}\n                        red={red}\n                        green={green}\n                        blue={blue}\n                        updateRgb={updateRgb}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Area;\n","import React from 'react';\nimport './index.scss';\n\nfunction Input({\n    value, label, type = 'text', onChange, onFocus, onBlur, classes,\n}) {\n    return (\n        <div className={`input-field ${classes}`}>\n            <div className=\"input-container\">\n                <input\n                    className={`${type}-input input`}\n                    value={value}\n                    onChange={onChange}\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                />\n            </div>\n            <div className=\"label\">\n                {label}\n            </div>\n        </div>\n    );\n}\n\nexport { Input };\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { rgbToHex, hexToRgb } from 'lib/helpers';\nimport { Input } from 'lib/components/UI';\n\nfunction Hex({\n    red, green, blue, updateRgb,\n}) {\n    const [hexValue, setHexValue] = useState('');\n    const [progress, setProgress] = useState(false);\n\n    useEffect(() => {\n        if (progress) {\n            return;\n        }\n        const hex = rgbToHex(red, green, blue);\n\n        setHexValue(hex);\n    }, [red, green, blue, progress]);\n\n    const changeHex = useCallback(event => {\n        setHexValue(event.target.value);\n        const color = hexToRgb(event.target.value);\n\n        if (color) {\n            updateRgb(color);\n        }\n    }, [setHexValue, updateRgb]);\n\n    return (\n        <Input\n            value={hexValue}\n            label=\"hex\"\n            onChange={changeHex}\n            onFocus={() => setProgress(true)}\n            onBlur={() => setProgress(false)}\n            classes=\"hex\"\n        />\n    );\n}\n\nexport default Hex;\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { Input } from 'lib/components/UI';\n\nexport default function RGBItem({\n    value, type, label, onChange,\n}) {\n    const [inputValue, setInputValue] = useState(value);\n\n    useEffect(() => {\n        if (value !== +inputValue && inputValue !== '') {\n            setInputValue(value);\n        }\n    }, [inputValue, value]);\n\n    const onChangeHandler = useCallback(event => {\n        const value = +event.target.value;\n\n        if (Number.isNaN(value) || value.length > 3 || value < 0 || value > 255) {\n            return;\n        }\n        setInputValue(event.target.value);\n\n        onChange(value);\n    }, [onChange]);\n\n    const onBlur = useCallback(() => {\n        !inputValue && inputValue !== 0 && setInputValue(value);\n    }, [inputValue, setInputValue, value]);\n\n    return (\n        <Input\n            value={inputValue}\n            type={type}\n            label={label}\n            onChange={onChangeHandler}\n            onBlur={onBlur}\n            classes=\"rgb\"\n        />\n    );\n}\n","import React, { useCallback } from 'react';\n\nimport { rgbToHsv } from 'lib/helpers';\n\nimport RGBItem from './item';\n\nfunction RGB({\n    red, green, blue, alpha, updateRgb,\n}) {\n    const changeValue = useCallback((field, value) => {\n        if (field === 'alpha') {\n            updateRgb({ alpha: value / 100 });\n\n            return;\n        }\n\n        const color = rgbToHsv({\n            red, green, blue, [field]: value,\n        });\n\n        updateRgb({ ...color, [field]: value });\n    }, [red, green, blue, updateRgb]);\n\n    return (\n        <>\n            <RGBItem\n                value={red}\n                type=\"number\"\n                label=\"R\"\n                onChange={value => changeValue('red', value)}\n            />\n\n            <RGBItem\n                value={green}\n                type=\"number\"\n                label=\"G\"\n                onChange={value => changeValue('green', value)}\n            />\n\n            <RGBItem\n                value={blue}\n                type=\"number\"\n                label=\"B\"\n                onChange={value => changeValue('blue', value)}\n            />\n\n            <RGBItem\n                value={parseInt(alpha * 100, 10)}\n                type=\"number\"\n                label=\"alpha\"\n                onChange={value => changeValue('alpha', value)}\n            />\n        </>\n    );\n}\n\nexport default RGB;\n","import React from 'react';\n\nimport Hex from './Hex';\nimport RGB from './RGB';\n\nfunction Preview({\n    red, green, blue, alpha, updateRgb,\n}) {\n    return (\n        <div className=\"color-preview-area\">\n            <div className=\"input-group\">\n                <Hex\n                    red={red}\n                    green={green}\n                    blue={blue}\n                    updateRgb={updateRgb}\n                />\n\n                <RGB\n                    red={red}\n                    green={green}\n                    blue={blue}\n                    alpha={alpha}\n                    updateRgb={updateRgb}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Preview;\n","import React, { useCallback, useState } from 'react';\n\nimport { useMount } from 'lib/hooks';\nimport { rgbToHsv, getRightValue, generateSolidStyle } from 'lib/helpers';\n\nimport Area from '../Area';\nimport Preview from '../Preview';\n\nfunction Solid({\n    red,\n    green,\n    blue,\n    alpha,\n    onChange,\n    onStartChange,\n    onEndChange,\n}) {\n    const [colorRed, setColorRed] = useState(red);\n    const [colorGreen, setColorGreen] = useState(green);\n    const [colorBlue, setColorBlue] = useState(blue);\n    const [colorAlpha, setColorAlpha] = useState(alpha);\n    const [colorHue, setColorHue] = useState(0);\n    const [colorSaturation, setColorSaturation] = useState(100);\n    const [colorValue, setColorValue] = useState(100);\n\n    const actions = {\n        onChange,\n        onStartChange,\n        onEndChange,\n    };\n\n    useMount(() => {\n        const { hue, saturation, value } = rgbToHsv({ red: colorRed, green: colorGreen, blue: colorBlue });\n\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n    });\n\n    const updateColor = useCallback(({\n        red, green, blue, alpha, hue, saturation, value,\n    }, actionName = 'onChange') => {\n        red = getRightValue(red, colorRed);\n        green = getRightValue(green, colorGreen);\n        blue = getRightValue(blue, colorBlue);\n        alpha = getRightValue(alpha, colorAlpha);\n        hue = getRightValue(hue, colorHue);\n        saturation = getRightValue(saturation, colorSaturation);\n        value = getRightValue(value, colorValue);\n\n        setColorRed(red);\n        setColorGreen(green);\n        setColorBlue(blue);\n        setColorAlpha(alpha);\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n\n        const action = actions[actionName];\n\n        action && action({\n            red,\n            green,\n            blue,\n            alpha,\n            hue,\n            saturation,\n            value,\n            style: generateSolidStyle(red, green, blue, alpha),\n        });\n    }, [\n        colorRed, colorGreen, colorBlue, colorAlpha,\n        colorHue, colorSaturation, colorValue,\n        actions,\n    ]);\n\n    return (\n        <>\n            <Area\n                red={colorRed}\n                green={colorGreen}\n                blue={colorBlue}\n                alpha={colorAlpha}\n                hue={colorHue}\n                saturation={colorSaturation}\n                value={colorValue}\n                updateRgb={updateColor}\n            />\n            <Preview\n                red={colorRed}\n                green={colorGreen}\n                blue={colorBlue}\n                alpha={colorAlpha}\n                updateRgb={updateColor}\n            />\n        </>\n    );\n}\n\nSolid.defaultProps = {\n    red: 255,\n    green: 0,\n    blue: 0,\n    alpha: 1,\n};\n\nexport default Solid;\n","import React, { useCallback, useState } from 'react';\n\nimport { calculateDegree } from 'lib/helpers';\nimport { useMouseEvents } from 'lib/hooks';\n\nfunction GradientControls({ type, degree, changeGradientControl }) {\n    const [disableClick, setDisableClick] = useState(false);\n\n    const onClickGradientDegree = useCallback(() => {\n        if (disableClick) {\n            setDisableClick(false);\n            return;\n        }\n\n        let gradientDegree = degree + 45;\n\n        if (gradientDegree >= 360) {\n            gradientDegree = 0;\n        }\n\n        changeGradientControl({ degree: parseInt(gradientDegree, 10) });\n    }, [disableClick, degree, changeGradientControl]);\n\n    const mouseDownHandler = useCallback(event => {\n        const pointer = event.target;\n        const pointerBox = pointer.getBoundingClientRect();\n        const centerY = pointerBox.top + parseInt(8 - window.pageYOffset, 10);\n        const centerX = pointerBox.left + parseInt(8 - window.pageXOffset, 10);\n\n        return {\n            centerY,\n            centerX,\n\n        };\n    }, []);\n\n    const mouseMoveHandler = useCallback((event, { centerX, centerY }) => {\n        setDisableClick(true);\n\n        const newDegree = calculateDegree(event.clientX, event.clientY, centerX, centerY);\n\n        changeGradientControl({ degree: parseInt(newDegree, 10) });\n\n        return { centerX, centerY };\n    }, [changeGradientControl]);\n\n    const mouseUpHandler = event => {\n        const targetClasses = event.target.classList;\n\n        if (targetClasses.contains('gradient-degrees') || targetClasses.contains('icon-rotate')) {\n            return;\n        }\n\n        setDisableClick(false);\n    };\n\n    const mouseEvents = useMouseEvents(mouseDownHandler, mouseMoveHandler, mouseUpHandler);\n\n    const onMouseDown = event => {\n        mouseEvents(event);\n    };\n\n    const degreesStyle = {\n        transform: `rotate(${degree}deg)`,\n    };\n\n    return (\n        <div className=\"gradient-controls\">\n            <div className=\"gradient-type\">\n                <div\n                    className={`gradient-type-item liner-gradient ${type === 'linear' ? 'active' : ''}`}\n                    onClick={() => changeGradientControl({ type: 'linear' })}\n                />\n                <div\n                    className={`gradient-type-item radial-gradient ${type === 'radial' ? 'active' : ''}`}\n                    onClick={() => changeGradientControl({ type: 'radial' })}\n                />\n            </div>\n            {\n                type === 'linear'\n                && (\n                    <div className=\"gradient-degrees-options\">\n                        <div\n                            className=\"gradient-degrees\"\n                            onMouseDown={onMouseDown}\n                            onClick={onClickGradientDegree}\n                        >\n                            <div className=\"gradient-degree-center\" style={degreesStyle}>\n                                <div className=\"gradient-degree-pointer\" />\n                            </div>\n                        </div>\n                        <div className=\"gradient-degree-value\">\n                            <p>\n                                {degree}\n                                &#176;\n                            </p>\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n    );\n}\n\nexport default GradientControls;\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { useMount } from 'lib/hooks';\nimport { rgbToHsv, getRightValue, generateGradientStyle } from 'lib/helpers';\n\nimport Area from '../Area';\nimport Preview from '../Preview';\nimport GradientControls from './GradientControls';\n\nfunction Gradient({\n    points, type, degree, onChange, onStartChange, onEndChange,\n}) {\n    const [activePointIndex, setActivePointIndex] = useState(0);\n    const [gradientPoints, setGradientPoints] = useState(points);\n    const [activePoint, setActivePoint] = useState(gradientPoints[0]);\n    const [colorRed, setColorRed] = useState(activePoint.red);\n    const [colorGreen, setColorGreen] = useState(activePoint.green);\n    const [colorBlue, setColorBlue] = useState(activePoint.blue);\n    const [colorAlpha, setColorAlpha] = useState(activePoint.alpha);\n    const [colorHue, setColorHue] = useState(0);\n    const [colorSaturation, setColorSaturation] = useState(100);\n    const [colorValue, setColorValue] = useState(100);\n    const [gradientType, setGradientType] = useState(type);\n    const [gradientDegree, setGradientDegree] = useState(degree);\n\n    const actions = {\n        onChange,\n        onStartChange,\n        onEndChange,\n    };\n\n    useMount(() => {\n        const { hue, saturation, value } = rgbToHsv({ red: colorRed, green: colorGreen, blue: colorBlue });\n\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n    });\n\n    const removePoint = useCallback((index = activePointIndex) => {\n        if (gradientPoints.length <= 2) {\n            return;\n        }\n\n        const localGradientPoints = gradientPoints.slice();\n        localGradientPoints.splice(index, 1);\n\n        setGradientPoints(localGradientPoints);\n\n        if (index > 0) {\n            setActivePointIndex(index - 1);\n        }\n\n        onChange && onChange({\n            points: localGradientPoints,\n            type: gradientType,\n            degree: gradientDegree,\n            style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree),\n        });\n    }, [gradientPoints, activePointIndex, gradientType, gradientDegree, onChange]);\n\n    const keyUpHandler = useCallback(event => {\n        if ((event.keyCode === 46 || event.keyCode === 8)) {\n            removePoint(activePointIndex);\n        }\n    }, [activePointIndex, removePoint]);\n\n    useEffect(() => {\n        document.addEventListener('keyup', keyUpHandler);\n\n        return () => {\n            document.removeEventListener('keyup', keyUpHandler);\n        };\n    });\n\n    const changeGradientControl = useCallback(({ type, degree }, actionName = 'onChange') => {\n        type = getRightValue(type, gradientType);\n        degree = getRightValue(degree, gradientDegree);\n\n        setGradientType(type);\n        setGradientDegree(degree);\n\n        const action = actions[actionName];\n\n        action && action({\n            points: gradientPoints,\n            type,\n            degree,\n            style: generateGradientStyle(gradientPoints, type, degree),\n        });\n    }, [actions, gradientPoints, gradientDegree, gradientType]);\n\n    const changeActivePointIndex = useCallback(index => {\n        setActivePointIndex(index);\n\n        const localGradientPoint = gradientPoints[index];\n        const {\n            red, green, blue, alpha,\n        } = localGradientPoint;\n        setActivePoint(localGradientPoint);\n\n        setColorRed(red);\n        setColorGreen(green);\n        setColorBlue(blue);\n        setColorAlpha(alpha);\n\n        const { hue, saturation, value } = rgbToHsv({ red, green, blue });\n\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n    }, [gradientPoints]);\n\n    const updateColor = useCallback(({\n        red, green, blue, alpha, hue, saturation, value,\n    }, actionName = 'onChange') => {\n        red = getRightValue(red, colorRed);\n        green = getRightValue(green, colorGreen);\n        blue = getRightValue(blue, colorBlue);\n        alpha = getRightValue(alpha, colorAlpha);\n        hue = getRightValue(hue, colorHue);\n        saturation = getRightValue(saturation, colorSaturation);\n        value = getRightValue(value, colorValue);\n\n        const localGradientPoints = gradientPoints.slice();\n\n        localGradientPoints[activePointIndex] = {\n            ...localGradientPoints[activePointIndex],\n            red,\n            green,\n            blue,\n            alpha,\n        };\n\n        setColorRed(red);\n        setColorGreen(green);\n        setColorBlue(blue);\n        setColorAlpha(alpha);\n        setColorHue(hue);\n        setColorSaturation(saturation);\n        setColorValue(value);\n        setGradientPoints(localGradientPoints);\n\n        const action = actions[actionName];\n\n        action && action({\n            points: localGradientPoints,\n            type: gradientType,\n            degree: gradientDegree,\n            style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree),\n        });\n    }, [\n        colorRed, colorGreen, colorBlue, colorAlpha,\n        colorHue, colorSaturation, colorValue,\n        activePointIndex, gradientPoints, actions, gradientType, gradientDegree,\n    ]);\n\n    const updateGradientLeft = useCallback((left, index, actionName = 'onChange') => {\n        const localGradientPoints = gradientPoints.slice();\n        localGradientPoints[index].left = left;\n\n        setGradientPoints(localGradientPoints);\n\n        const action = actions[actionName];\n\n        action && action({\n            points: localGradientPoints,\n            type: gradientType,\n            degree: gradientDegree,\n            style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree),\n        });\n    }, [actions, gradientPoints, gradientDegree, gradientType]);\n\n    const addPoint = useCallback(left => {\n        const localGradientPoints = gradientPoints.slice();\n\n        localGradientPoints.push({\n            ...localGradientPoints[activePointIndex],\n            left,\n        });\n\n        setGradientPoints(localGradientPoints);\n        setActivePointIndex(localGradientPoints.length - 1);\n\n        onChange && onChange({\n            points: localGradientPoints,\n            type: gradientType,\n            degree: gradientDegree,\n            style: generateGradientStyle(localGradientPoints, gradientType, gradientDegree),\n        });\n    }, [onChange, gradientPoints, activePointIndex, gradientType, gradientDegree]);\n\n    return (\n        <>\n            <GradientControls\n                type={gradientType}\n                degree={gradientDegree}\n                changeGradientControl={changeGradientControl}\n            />\n            <Area\n                red={colorRed}\n                green={colorGreen}\n                blue={colorBlue}\n                alpha={colorAlpha}\n                hue={colorHue}\n                saturation={colorSaturation}\n                value={colorValue}\n                updateRgb={updateColor}\n                isGradient\n                type={gradientType}\n                degree={gradientDegree}\n                points={gradientPoints}\n                activePointIndex={activePointIndex}\n                changeGradientControl={changeGradientControl}\n                changeActivePointIndex={changeActivePointIndex}\n                updateGradientLeft={updateGradientLeft}\n                addPoint={addPoint}\n                removePoint={removePoint}\n            />\n            <Preview\n                red={colorRed}\n                green={colorGreen}\n                blue={colorBlue}\n                alpha={colorAlpha}\n                updateRgb={updateColor}\n            />\n        </>\n    );\n}\n\nexport default Gradient;\n","import React from 'react';\n\nimport Solid from './Solid';\nimport Gradient from './Gradient';\n\nfunction ColorPicker({\n    color,\n    isGradient,\n    gradient,\n    onStartChange,\n    onChange,\n    onEndChange,\n}) {\n    return (\n        <div className=\"ui-color-picker\">\n            {\n                isGradient\n                    ? (\n                        <Gradient\n                            points={gradient.points}\n                            updateColor={onChange}\n                            type={gradient.type}\n                            degree={gradient.degree}\n                            onChange={onChange}\n                            onStartChange={onStartChange}\n                            onEndChange={onEndChange}\n                        />\n                    )\n                    : (\n                        <Solid\n                            red={color.red}\n                            green={color.green}\n                            blue={color.blue}\n                            alpha={color.alpha}\n                            onChange={onChange}\n                            onStartChange={onStartChange}\n                            onEndChange={onEndChange}\n                        />\n                    )\n            }\n        </div>\n    );\n}\n\nColorPicker.defaultProps = {\n    isGradient: false,\n    onChange: () => {},\n    color: {\n        red: 255,\n        green: 0,\n        blue: 0,\n        alpha: 1,\n    },\n    gradient: {\n        points: [\n            {\n                left: 0,\n                red: 0,\n                green: 0,\n                blue: 0,\n                alpha: 1,\n            },\n            {\n                left: 100,\n                red: 255,\n                green: 0,\n                blue: 0,\n                alpha: 1,\n            },\n        ],\n        degree: 0,\n        type: 'linear',\n    },\n};\n\nexport default ColorPicker;\n"]},"metadata":{},"sourceType":"script"}