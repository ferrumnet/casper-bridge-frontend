{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/CasperWithdrawal.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { FButton, FCard, FGrid, FGridItem, FInputText, FItem, FTypo } from \"ferrum-design-system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStakingInfo } from \"../utils/DateUtil\";\nimport { connectWallet as connectWalletDispatch } from '../redux/casper/casperActions';\nimport { useHistory } from \"react-router\";\nimport './layout.scss';\nimport { CasperServiceByJsonRPC, CLPublicKey, CLValueBuilder, decodeBase16, DeployUtil, RuntimeArgs, Signer, CasperClient } from \"casper-js-sdk\";\nimport toast from \"react-hot-toast\";\nimport TxProcessingDialog from \"../dialogs/TxProcessingDialog\";\nimport ConfirmationDialog from \"../dialogs/ConfirmationDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\nexport const CasperWithdrawal = () => {\n  _s();\n  const navigate = useHistory();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState();\n  const [targetNetwork, setTargetNetwork] = useState('56');\n  const [targetToken, setTargetToken] = useState('BASE_FRM');\n  const [processMsg, setProcessMsg] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const connection = useSelector(state => state.casper.connect);\n  const {\n    connect: {\n      config,\n      selectedAccount,\n      isWalletConnected,\n      signedAddresses\n    }\n  } = useSelector(state => state.casper);\n\n  // const [stakingCap, setStakingCap] = useState<any>(undefined);\n  const [stakeSoFar, setStakeSoFar] = useState(undefined);\n  const [youStakedBalance, setYourStakedBalance] = useState(undefined);\n  const {\n    isConnected,\n    isConnecting,\n    currentWalletNetwork,\n    walletAddress,\n    networkClient\n  } = useSelector(state => state.casper.walletConnector);\n  const stakingInfo = getStakingInfo(config === null || config === void 0 ? void 0 : config.stakingEnds, config === null || config === void 0 ? void 0 : config.stakingStarts, config === null || config === void 0 ? void 0 : config.withdrawStarts, config === null || config === void 0 ? void 0 : config.withdrawEnds);\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    console.log(isConnected, connection, 'isConnectedisConnected');\n    if (isConnected) {\n      var _latestBlock$block, _latestBlock$block2, _latestBlock$block2$h;\n      const publicKey = await window.casperlabsHelper.getActivePublicKey();\n      console.log(publicKey);\n      //textAddress.textContent += publicKey;\n\n      const latestBlock = await casperService.getLatestBlockInfo();\n      console.log(latestBlock);\n      const root = await casperService.getStateRootHash(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block = latestBlock.block) === null || _latestBlock$block === void 0 ? void 0 : _latestBlock$block.hash);\n      console.log(latestBlock, root);\n      await connectWalletDispatch([{\n        \"address\": publicKey\n      }])(dispatch);\n      const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n      console.log(balanceUref);\n\n      // @ts-ignore\n      const balance = await casperService.getAccountBalance(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block2 = latestBlock.block) === null || _latestBlock$block2 === void 0 ? void 0 : (_latestBlock$block2$h = _latestBlock$block2.header) === null || _latestBlock$block2$h === void 0 ? void 0 : _latestBlock$block2$h.state_root_hash, balanceUref);\n      console.log(balance.toString());\n      //textBalance.textContent = `PublicKeyHex ${balance.toString()}`;\n    }\n  }\n\n  const connectWallet = async () => {\n    await window.casperlabsHelper.requestConnection();\n    const isConnected = await window.casperlabsHelper.isConnected();\n    if (isConnected) {\n      await AccountInformation();\n    }\n  };\n  // console.log(stakingCap, stakeSoFar, youStakedBalance);\n  {/* casper-client put-deploy \\\n    --chain-name casper-test \\\n    --node-address http://44.208.234.65:7777 \\\n    --secret-key keys/secret_key.pem \\\n    --session-hash hash-c312f4eda82c253e2817f41586ce0af99294d652507c2c7827bb6abbdc0f6e0f \\\n    --session-entry-point withdraw_signed \\\n    --payment-amount 5000000000 \\\n    --session-arg \"token_address:string='contract-package-wasme222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473'\" \\\n    --session-arg \"payee:string='0203d3a2770de0d4fe892c74e4e33f98580bb6136b1ab35f1244b0cf0758b3d1d3b3'\" \\\n    --session-arg \"amount:u256='1'\" \\\n    --session-arg \"signature:string='7369676e6174757265'\" \\\n    --session-arg \"salt:string='0000000000000000000000000000000000000000000000000000000000000001'\"  */}\n  const performWithdraw = async () => {\n    if (isWalletConnected && selectedAccount) {\n      setLoading(true);\n      try {\n        // console.log(selectedAccount?.address, Number(amount));\n        if (amount && Number(amount) > 0) {\n          const publicKeyHex = selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.address;\n          const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n          const deployParams = new DeployUtil.DeployParams(senderPublicKey, 'casper-test');\n          const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(amount),\n            \"token_address\": CLValueBuilder.string('contract-package-wasme222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473'),\n            \"payee\": CLValueBuilder.u256('0203d3a2770de0d4fe892c74e4e33f98580bb6136b1ab35f1244b0cf0758b3d1d3b3'),\n            \"signature\": CLValueBuilder.string('7369676e6174757265'),\n            \"salt\": CLValueBuilder.string('0000000000000000000000000000000000000000000000000000000000000001')\n          });\n          const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(decodeBase16('c312f4eda82c253e2817f41586ce0af99294d652507c2c7827bb6abbdc0f6e0f'), 'swap', args);\n          const payment = DeployUtil.standardPayment(5000000000);\n          const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n          const deployJson = DeployUtil.deployToJson(deploy);\n          Signer.sign(deployJson, publicKeyHex).then(async signedDeployJson => {\n            const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n            console.log(signedDeploy);\n            if (signedDeploy.ok) {\n              const res = await casperClient.putDeploy(signedDeploy.val);\n              console.log(res, 'resres');\n              if (res) {}\n              setProcessMsg(res);\n              setLoading(false);\n              setShowConfirmation(true);\n            }\n          });\n          // navigate.push(`/${config._id}`);\n          //toast.success(`${amount} tokens are staked successfully`);\n        } else {\n          toast.error(\"Amount must be greater than 0\");\n        }\n      } catch (e) {\n        console.log(\"ERROR : \", e);\n        toast.error(\"An error occured please see console for details\");\n        navigate.push(`/${config._id}`);\n      } finally {\n        //setLoading(false)\n      }\n    } else {\n      console.log(\"heelelll\");\n      navigate.push(`/${config._id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FCard, {\n      className: \"card-staking f-mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(FGrid, {\n        alignX: \"center\",\n        className: \"f-mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(FTypo, {\n          size: 18,\n          align: \"center\",\n          className: \"f-mb-14 f-mt--7\",\n          children: \"CASPER TOKEN WITHDRAWAL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FGridItem, {\n          alignX: \"center\",\n          size: [8, 8, 12],\n          className: \"f-m-auto f-mb-1\",\n          children: /*#__PURE__*/_jsxDEV(FItem, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"AMOUNT TO WITHDRAW\",\n              placeholder: \"0\",\n              value: amount,\n              onChange: e => {\n                e.preventDefault();\n                const re = /^-?\\d*\\.?\\d*$/;\n                if (e.target.value === \"\" || re.test(e.target.value)) {\n                  setAmount(e.target.value);\n                }\n              },\n              postfix: /*#__PURE__*/_jsxDEV(FTypo, {\n                className: \"f-pr-1\",\n                color: \"#dab46e\",\n                children: \"TOKEN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"Target Network\",\n              disabled: true,\n              value: targetNetwork,\n              onChange: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"Target Token\",\n              disabled: true,\n              value: targetToken,\n              onChange: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"Token Address\",\n              disabled: true,\n              value: 'contract-package-wasme222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473',\n              onChange: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"Payee\",\n              disabled: true,\n              value: '0203d3a2770de0d4fe892c74e4e33f98580bb6136b1ab35f1244b0cf0758b3d1d3b3',\n              onChange: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"signature\",\n              disabled: true,\n              value: '7369676e6174757265',\n              onChange: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FInputText, {\n              className: \"f-mt-2\",\n              label: \"salt\",\n              disabled: true,\n              value: '0000000000000000000000000000000000000000000000000000000000000001',\n              onChange: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), connection.isWalletConnected && /*#__PURE__*/_jsxDEV(FButton, {\n              title: \"WITHDRAW\",\n              className: \"w-100 f-mt-2\",\n              onClick: () => performWithdraw()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), !connection.isWalletConnected && /*#__PURE__*/_jsxDEV(FButton, {\n              title: \"Connect Casper Signer\",\n              className: \"w-100 f-mt-2\",\n              onClick: () => connectWallet()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n        onHide: () => setShowConfirmation(false),\n        transaction: processMsg,\n        message: 'Transaction sent to network and is processing.',\n        show: showConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TxProcessingDialog, {\n        onHide: () => setLoading(false),\n        message: processMsg || \"Transaction Processing....\",\n        show: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CasperWithdrawal, \"hf7d/t1W1VONsMIRXrb9sErHAWI=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n_c = CasperWithdrawal;\nexport default CasperWithdrawal;\nvar _c;\n$RefreshReg$(_c, \"CasperWithdrawal\");","map":{"version":3,"names":["useState","FButton","FCard","FGrid","FGridItem","FInputText","FItem","FTypo","useDispatch","useSelector","getStakingInfo","connectWallet","connectWalletDispatch","useHistory","CasperServiceByJsonRPC","CLPublicKey","CLValueBuilder","decodeBase16","DeployUtil","RuntimeArgs","Signer","CasperClient","toast","TxProcessingDialog","ConfirmationDialog","RPC_API","casperService","casperClient","CasperWithdrawal","navigate","dispatch","loading","setLoading","amount","setAmount","targetNetwork","setTargetNetwork","targetToken","setTargetToken","processMsg","setProcessMsg","showConfirmation","setShowConfirmation","connection","state","casper","connect","config","selectedAccount","isWalletConnected","signedAddresses","stakeSoFar","setStakeSoFar","undefined","youStakedBalance","setYourStakedBalance","isConnected","isConnecting","currentWalletNetwork","walletAddress","networkClient","walletConnector","stakingInfo","stakingEnds","stakingStarts","withdrawStarts","withdrawEnds","AccountInformation","window","casperlabsHelper","console","log","publicKey","getActivePublicKey","latestBlock","getLatestBlockInfo","root","getStateRootHash","block","hash","balanceUref","getAccountBalanceUrefByPublicKey","fromHex","balance","getAccountBalance","header","state_root_hash","toString","requestConnection","performWithdraw","Number","publicKeyHex","address","senderPublicKey","deployParams","DeployParams","args","fromMap","u256","string","session","ExecutableDeployItem","newStoredContractByHash","payment","standardPayment","deploy","makeDeploy","deployJson","deployToJson","sign","then","signedDeployJson","signedDeploy","deployFromJson","ok","res","putDeploy","val","error","e","push","_id","preventDefault","re","target","value","test"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/CasperWithdrawal.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { FButton, FCard, FGrid, FGridItem, FInputText, FItem, FTypo } from \"ferrum-design-system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStakingInfo } from \"../utils/DateUtil\";\nimport { connectWallet, connectWallet as connectWalletDispatch } from '../redux/casper/casperActions';\nimport { useHistory, useParams } from \"react-router\";\nimport './layout.scss';\nimport { CasperServiceByJsonRPC, CLPublicKey, CLValue, \n  CLValueBuilder, \n  decodeBase16, \n  DeployUtil,\n  RuntimeArgs,\n  Signer,\n  CasperClient\n} from \"casper-js-sdk\";\nimport toast from \"react-hot-toast\";\nimport TxProcessingDialog from \"../dialogs/TxProcessingDialog\";\nimport ConfirmationDialog from \"../dialogs/ConfirmationDialog\";\nimport { MetaMaskConnector } from \"./connector\";\nimport { ConnectWalletDialog } from \"../utils/connect-wallet/ConnectWalletDialog\";\nimport { crucibleApi } from \"../client\";\nimport { Web3Helper } from \"../utils/web3Helper\";\nimport { Withdrawals } from \"./Withdrawals\";\n\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\n\nexport const CasperWithdrawal = () => {\n  const navigate = useHistory();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState();\n  const [targetNetwork, setTargetNetwork] = useState('56');\n  const [targetToken, setTargetToken] = useState('BASE_FRM');\n  const [processMsg, setProcessMsg] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const connection = useSelector((state: any) => state.casper.connect)\n  const { connect: { config, selectedAccount, isWalletConnected, signedAddresses, } } = useSelector((state: any) => state.casper);\n\n  // const [stakingCap, setStakingCap] = useState<any>(undefined);\n  const [stakeSoFar, setStakeSoFar] = useState<any>(undefined);\n  const [youStakedBalance, setYourStakedBalance] = useState<any>(undefined);\n  const { isConnected, isConnecting, currentWalletNetwork, walletAddress, networkClient } =\n    useSelector((state: any) => state.casper.walletConnector);\n\n  const stakingInfo = getStakingInfo(\n    config?.stakingEnds,\n    config?.stakingStarts,\n    config?.withdrawStarts,\n    config?.withdrawEnds\n  );\n\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    console.log(isConnected, connection, 'isConnectedisConnected')\n    if (isConnected) {\n        const publicKey = await window.casperlabsHelper.getActivePublicKey();\n        console.log(publicKey);\n        //textAddress.textContent += publicKey;\n\n        const latestBlock = await casperService.getLatestBlockInfo();\n        console.log(latestBlock);\n\n        const root = await casperService.getStateRootHash(latestBlock?.block?.hash);\n        console.log(latestBlock, root)\n\n        await connectWalletDispatch([{\n          \"address\": publicKey\n        }])(dispatch)\n        const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n        console.log(balanceUref)\n        \n        // @ts-ignore\n        const balance = await casperService.getAccountBalance(latestBlock?.block?.header?.state_root_hash, balanceUref);\n        console.log(balance.toString())\n        //textBalance.textContent = `PublicKeyHex ${balance.toString()}`;\n    }\n  }\n\n\n  const connectWallet = async () => {\n    await window.casperlabsHelper.requestConnection()\n\n    const isConnected = await window.casperlabsHelper.isConnected();\n\n    if (isConnected) {\n      await AccountInformation();\n    }   \n  };\n  // console.log(stakingCap, stakeSoFar, youStakedBalance);\n  {/* casper-client put-deploy \\\n    --chain-name casper-test \\\n    --node-address http://44.208.234.65:7777 \\\n    --secret-key keys/secret_key.pem \\\n    --session-hash hash-c312f4eda82c253e2817f41586ce0af99294d652507c2c7827bb6abbdc0f6e0f \\\n    --session-entry-point withdraw_signed \\\n    --payment-amount 5000000000 \\\n    --session-arg \"token_address:string='contract-package-wasme222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473'\" \\\n    --session-arg \"payee:string='0203d3a2770de0d4fe892c74e4e33f98580bb6136b1ab35f1244b0cf0758b3d1d3b3'\" \\\n    --session-arg \"amount:u256='1'\" \\\n    --session-arg \"signature:string='7369676e6174757265'\" \\\n    --session-arg \"salt:string='0000000000000000000000000000000000000000000000000000000000000001'\"  */}\n\n  const performWithdraw = async () => {\n    if (\n      isWalletConnected &&\n      selectedAccount\n    ) {\n      setLoading(true)\n      try {\n        // console.log(selectedAccount?.address, Number(amount));\n        if (amount && Number(amount) > 0) {\n          const publicKeyHex = selectedAccount?.address;\n          const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n\n          const deployParams = new DeployUtil.DeployParams(\n            senderPublicKey,\n            'casper-test'\n          );\n\n          const args = RuntimeArgs.fromMap({\n            \"amount\": CLValueBuilder.u256(amount),\n            \"token_address\": CLValueBuilder.string('contract-package-wasme222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473'),\n            \"payee\": CLValueBuilder.u256('0203d3a2770de0d4fe892c74e4e33f98580bb6136b1ab35f1244b0cf0758b3d1d3b3'),\n            \"signature\": CLValueBuilder.string('7369676e6174757265'),\n            \"salt\": CLValueBuilder.string('0000000000000000000000000000000000000000000000000000000000000001'),\n          });\n\n          const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(\n            decodeBase16('c312f4eda82c253e2817f41586ce0af99294d652507c2c7827bb6abbdc0f6e0f'),\n            'swap',\n            args\n          );\n\n          const payment = DeployUtil.standardPayment(5000000000);\n\n          const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n\n          const deployJson: any = DeployUtil.deployToJson(deploy);\n        \n          Signer.sign(deployJson, publicKeyHex).then(async (signedDeployJson) => {\n            const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n            console.log(signedDeploy)\n            if (signedDeploy.ok) {\n              const res = await casperClient.putDeploy(signedDeploy.val);\n              console.log(res, 'resres');\n              if (res) {\n               \n              }\n              setProcessMsg(res)\n              setLoading(false)\n              setShowConfirmation(true)\n            }\n            \n          });\n          // navigate.push(`/${config._id}`);\n          //toast.success(`${amount} tokens are staked successfully`);\n        } else {\n          toast.error(\"Amount must be greater than 0\");\n        }\n      } catch (e) {\n        console.log(\"ERROR : \", e);\n        toast.error(\"An error occured please see console for details\");\n        navigate.push(`/${config._id}`);\n      } finally {\n        //setLoading(false)\n      }\n\n    } else {\n      console.log(\"heelelll\")\n      navigate.push(`/${config._id}`);\n    }\n  };\n\n  return (\n    <>\n      <FCard className={\"card-staking f-mb-2\"}>\n        <FGrid alignX={\"center\"} className=\"f-mb-1\">\n          <FTypo size={18} align={\"center\"} className={\"f-mb-14 f-mt--7\"}>\n           CASPER TOKEN WITHDRAWAL\n          </FTypo>\n          <FGridItem alignX={\"center\"} size={[8, 8, 12]} className=\"f-m-auto f-mb-1\">\n            <FItem align={\"center\"}>    \n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"AMOUNT TO WITHDRAW\"}\n                placeholder={\"0\"}\n                value={amount}\n                onChange={(e: any) => {\n                  e.preventDefault();\n                  const re = /^-?\\d*\\.?\\d*$/;\n                  if (e.target.value === \"\" || re.test(e.target.value)) {\n                    setAmount(e.target.value);\n                  }\n                }}\n                postfix={\n                  <FTypo className={\"f-pr-1\"} color=\"#dab46e\">\n                    TOKEN\n                  </FTypo>\n                }\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"Target Network\"}\n                disabled\n                value={targetNetwork}\n                onChange={(e: any) => {}}\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"Target Token\"}\n                disabled\n                value={targetToken}\n                onChange={(e: any) => {}}\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"Token Address\"}\n                disabled\n                value={'contract-package-wasme222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473'}\n                onChange={(e: any) => {}}\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"Payee\"}\n                disabled\n                value={'0203d3a2770de0d4fe892c74e4e33f98580bb6136b1ab35f1244b0cf0758b3d1d3b3'}\n                onChange={(e: any) => {}}\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"signature\"}\n                disabled\n                value={'7369676e6174757265'}\n                onChange={(e: any) => {}}\n              />\n              <FInputText\n                className={\"f-mt-2\"}\n                label={\"salt\"}\n                disabled\n                value={'0000000000000000000000000000000000000000000000000000000000000001'}\n                onChange={(e: any) => {}}\n              />\n              {\n                connection.isWalletConnected && (\n                  <FButton \n                    title={\"WITHDRAW\"}\n                    className=\"w-100 f-mt-2\"\n                    onClick={() => performWithdraw()}\n                  />\n                )\n              }\n              {\n                !connection.isWalletConnected && (\n                  <FButton title={\"Connect Casper Signer\"} className=\"w-100 f-mt-2\" onClick={() => connectWallet()} />\n                )\n              }\n            </FItem>\n          </FGridItem>\n        </FGrid>\n        <ConfirmationDialog onHide={() =>setShowConfirmation(false)} transaction={processMsg} message={'Transaction sent to network and is processing.'} show={showConfirmation} />\n        <TxProcessingDialog onHide={() =>setLoading(false)} message={ processMsg || \"Transaction Processing....\"} show={loading}/>\n      </FCard>\n    </>\n  );\n};\n\nexport default CasperWithdrawal\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}