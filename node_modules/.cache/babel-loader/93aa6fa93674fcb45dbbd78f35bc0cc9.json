{"ast":null,"code":"import _objectSpread from\"/Users/kabiribraheem/Documents/casper-bridge-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/kabiribraheem/Documents/casper-bridge-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{walletConnectorActions}from\".\";import{useWeb3React}from\"@web3-react/core\";import{injected}from\"./web3React/connectors\";import{AiOutlineDisconnect,AiOutlineLoading3Quarters}from\"react-icons/ai\";import{VscDebugDisconnect}from\"react-icons/vsc\";import toast from\"react-hot-toast\";// import { WalletAuthencationOnSignIn } from \"../../components/common/wallet-authentication/WalletAuthenticationSignIn\";\nimport*as walletAuthenticatorActions from\"./walletAuthenticationActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var WalletConnector=function WalletConnector(_ref){var WalletConnectView=_ref.WalletConnectView,WalletConnectModal=_ref.WalletConnectModal,WalletConnectViewProps=_ref.WalletConnectViewProps;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showWalletDialog=_useState2[0],setShowWalletDialog=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),reconnect=_useState4[0],setReconnect=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),networkClient=_useState6[0],setNetworkClient=_useState6[1];var state=useSelector(function(state){return state;});console.log(state);var dispatch=useDispatch();var _useWeb3React=useWeb3React(),active=_useWeb3React.active,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate,library=_useWeb3React.library,account=_useWeb3React.account,chainId=_useWeb3React.chainId,error=_useWeb3React.error;var _useSelector=useSelector(function(state){return state.casper.walletConnector;}),isConnected=_useSelector.isConnected,isConnecting=_useSelector.isConnecting,currentWalletNetwork=_useSelector.currentWalletNetwork,walletAddress=_useSelector.walletAddress;var _useSelector2=useSelector(function(state){return state.casper.walletAuthenticator;}),applicationUserToken=_useSelector2.applicationUserToken;useEffect(function(){if(account&&walletAddress&&walletAddress!==account&&isConnected&&active){// console.log(\"Account Changed reconnect wallet\");\nactivate(injected);setReconnect(true);}// eslint-disable-next-line\n},[walletAddress,account,isConnected,active]);useEffect(function(){injected.isAuthorized().then(function(isAuthorized){// console.log(isAuthorized, active, \"isAuthorized\");\nif(isAuthorized&&!active&&!error&&isConnected){activate(injected);}}).catch(function(){});// eslint-disable-next-line\n},[activate,active,error,isConnected]);useEffect(function(){if(chainId&&currentWalletNetwork&&currentWalletNetwork!==chainId&&isConnected&&active){// console.log(\"Chain Changed reconnect wallet\");\nactivate(injected);setReconnect(true);}// eslint-disable-next-line\n},[currentWalletNetwork,chainId,isConnected,active]);useEffect(function(){if(active&&!isConnected&&library&&!networkClient){// console.log(\"web3 react connect set network client\");\ndispatch(walletConnectorActions.connectWallet());setNetworkClient(library);}if(!active&&isConnected&&!library&&!isConnecting){// console.log(\"connected in currenct browser session reconnect wallet\");\nactivate(injected);setReconnect(true);}// eslint-disable-next-line\n},[isConnected,active,library,isConnecting,networkClient]);useEffect(function(){if(reconnect&&active){// console.log(\n//   \"reconnect called and web3 is active again reset network client to set again\"\n// );\ndispatch(walletConnectorActions.reconnectWallet());setNetworkClient(undefined);setReconnect(false);}// eslint-disable-next-line\n},[reconnect,active]);useEffect(function(){if(active&&networkClient&&library&&!isConnected&&account&&chainId&&isConnecting){// console.log(\n//   \"network client is set, web3 react is also active test by fetching account balance\"\n// );\nnetworkClient.eth.getBalance(account===null||account===void 0?void 0:account.toString()).then(function(balance){// console.log(\n//   \"newtork ping completed successfully update redux with wallet and network client information\",\n//   balance,\n//   account?.toString()\n// );\ndispatch(walletConnectorActions.walletConnected({chainId:chainId,account:account,balance:balance,currentWallet:undefined,networkClient:networkClient}));}).catch(function(err){// console.log(\"newtork ping failed reset wallet state\");\n// console.log(err, \" : error connecting wallet\");\ntoast.error(err||\"Error connecting wallet\");dispatch(walletConnectorActions.resetWalletConnector());});}// eslint-disable-next-line\n},[networkClient,library,isConnected,active,account,chainId,isConnecting]);var openWalletSelectorDialog=function openWalletSelectorDialog(){// console.log(\"open wallet selector to connect\");\nif(!isConnecting){if(!isConnected){setShowWalletDialog(true);}else{// console.log(\"wallet is already connect disconnect wallet\");\ndispatch(walletConnectorActions.resetWalletConnector());dispatch(walletAuthenticatorActions.resetWalletAuthentication({userToken:applicationUserToken}));dispatch(walletAuthenticatorActions.removeSession({userToken:applicationUserToken}));setNetworkClient(undefined);deactivate();}}else{// console.log(\"wallet is already in connect state\");\n}};// // console.log(isConnecting, \"isConnecting\");\n// // console.log(isConnected, \"isConnected\");\n// // console.log(active, \"active\");\n// // console.log(library, \"library\");\n// // console.log(networkClient, \"networkClient\");\n// // console.log(walletAddress, \"walletAddress\");\n// // console.log(account, \"account\");\n// // console.log(walletAddress === account);\n// // console.log(chainId, \"chainId\");\n// // console.log(currentWalletNetwork, \"currentWalletNetwork\");\n// // console.log(currentWalletNetwork === chainId);\n// // console.log(error);\nvar connectMetaMask=function connectMetaMask(){if(isConnected){// console.log(\"wallet is already connect disconnect wallet\");\ndispatch(walletConnectorActions.resetWalletConnector());setNetworkClient(undefined);deactivate();}else{// console.log(\"intialize web3 wallet connect for meta mask\");\nactivate(injected);setShowWalletDialog(false);setNetworkClient(undefined);}};useEffect(function(){if(error){dispatch(walletConnectorActions.resetWalletConnector());// console.log(error);\ntoast.error((error===null||error===void 0?void 0:error.message)||\"Error connecting wallet\");}// eslint-disable-next-line\n},[error]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(WalletConnectView,_objectSpread(_objectSpread({},_objectSpread(_objectSpread({},WalletConnectViewProps),{},{prefix:_objectSpread({},isConnecting?/*#__PURE__*/_jsx(AiOutlineLoading3Quarters,{}):!isConnected?/*#__PURE__*/_jsx(VscDebugDisconnect,{}):/*#__PURE__*/_jsx(AiOutlineDisconnect,{})),title:isConnecting?\"Connecting...\":!isConnected?\"Connect to Metamask\":\"Disconnect\",disabled:isConnecting})),{},{onClick:function onClick(){console.log(\"helloooo-=====>><<<\");openWalletSelectorDialog();}})),/*#__PURE__*/_jsx(WalletConnectModal,{show:showWalletDialog,metaMaskClickEvent:function metaMaskClickEvent(){connectMetaMask();},onHide:function onHide(){return setShowWalletDialog(false);}})]});};","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","walletConnectorActions","useWeb3React","injected","AiOutlineDisconnect","AiOutlineLoading3Quarters","VscDebugDisconnect","toast","walletAuthenticatorActions","WalletConnector","WalletConnectView","WalletConnectModal","WalletConnectViewProps","showWalletDialog","setShowWalletDialog","reconnect","setReconnect","undefined","networkClient","setNetworkClient","state","console","log","dispatch","active","activate","deactivate","library","account","chainId","error","casper","walletConnector","isConnected","isConnecting","currentWalletNetwork","walletAddress","walletAuthenticator","applicationUserToken","isAuthorized","then","catch","connectWallet","reconnectWallet","eth","getBalance","toString","balance","walletConnected","currentWallet","err","resetWalletConnector","openWalletSelectorDialog","resetWalletAuthentication","userToken","removeSession","connectMetaMask","message","prefix","title","disabled"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/components/connector/wallet-connector/wallet-connector.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { WalletConnectorProps } from \"./walletConnectorInterfaces\";\nimport { walletConnectorActions } from \".\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"./web3React/connectors\";\nimport Web3 from \"web3\";\nimport { RootState } from \"../../../redux/rootReducer\";\nimport { AiOutlineDisconnect, AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { VscDebugDisconnect } from \"react-icons/vsc\";\nimport toast from \"react-hot-toast\";\n// import { WalletAuthencationOnSignIn } from \"../../components/common/wallet-authentication/WalletAuthenticationSignIn\";\nimport * as walletAuthenticatorActions from \"./walletAuthenticationActions\";\n\nexport const WalletConnector = ({\n  WalletConnectView,\n  WalletConnectModal, \n  WalletConnectViewProps,\n}: WalletConnectorProps) => {\n  const [showWalletDialog, setShowWalletDialog] = useState<boolean>(false);\n  const [reconnect, setReconnect] = useState<boolean>(false);\n  const [networkClient, setNetworkClient] = useState<Web3 | undefined>(\n    undefined\n  );\n  const state =  useSelector((state: RootState) => state);\n  console.log(state);\n\n  const dispatch = useDispatch();\n  const { active, activate, deactivate, library, account, chainId, error } =\n    useWeb3React();\n  const { isConnected, isConnecting, currentWalletNetwork, walletAddress } =\n    useSelector((state: any) => state.casper.walletConnector);\n  const {\n    // nonce,\n    applicationUserToken,\n    //  signature, isAllowedonGateway, allowedNetworksonGateway, getSignatureFromMetamask, tokenV2, meV2\n  } = useSelector((state: any) => state.casper.walletAuthenticator);\n\n  \n  useEffect(() => {\n    if (\n      account &&\n      walletAddress &&\n      walletAddress !== account &&\n      isConnected &&\n      active\n    ) {\n      // console.log(\"Account Changed reconnect wallet\");\n      activate(injected);\n      setReconnect(true);\n    }\n    // eslint-disable-next-line\n  }, [walletAddress, account, isConnected, active]);\n\n  useEffect(() => {\n    injected\n      .isAuthorized()\n      .then((isAuthorized) => {\n        // console.log(isAuthorized, active, \"isAuthorized\");\n        if (isAuthorized && !active && !error && isConnected) {\n          activate(injected);\n        }\n      })\n      .catch(() => {});\n    // eslint-disable-next-line\n  }, [activate, active, error, isConnected]);\n\n  useEffect(() => {\n    if (\n      chainId &&\n      currentWalletNetwork &&\n      currentWalletNetwork !== chainId &&\n      isConnected &&\n      active\n    ) {\n      // console.log(\"Chain Changed reconnect wallet\");\n      activate(injected);\n      setReconnect(true);\n    }\n    // eslint-disable-next-line\n  }, [currentWalletNetwork, chainId, isConnected, active]);\n\n  useEffect(() => {\n    if (active && !isConnected && library && !networkClient) {\n      // console.log(\"web3 react connect set network client\");\n      dispatch(walletConnectorActions.connectWallet());\n      setNetworkClient(library);\n    }\n    if (!active && isConnected && !library && !isConnecting) {\n      // console.log(\"connected in currenct browser session reconnect wallet\");\n      activate(injected);\n      setReconnect(true);\n    }\n    // eslint-disable-next-line\n  }, [isConnected, active, library, isConnecting, networkClient]);\n\n  useEffect(() => {\n    if (reconnect && active) {\n      // console.log(\n      //   \"reconnect called and web3 is active again reset network client to set again\"\n      // );\n      dispatch(walletConnectorActions.reconnectWallet());\n      setNetworkClient(undefined);\n      setReconnect(false);\n    }\n    // eslint-disable-next-line\n  }, [reconnect, active]);\n\n  useEffect(() => {\n    if (\n      active &&\n      networkClient &&\n      library &&\n      !isConnected &&\n      account &&\n      chainId &&\n      isConnecting\n    ) {\n      // console.log(\n      //   \"network client is set, web3 react is also active test by fetching account balance\"\n      // );\n      networkClient.eth\n        .getBalance(account?.toString())\n        .then((balance: String) => {\n          // console.log(\n          //   \"newtork ping completed successfully update redux with wallet and network client information\",\n          //   balance,\n          //   account?.toString()\n          // );\n          dispatch(\n            walletConnectorActions.walletConnected({\n              chainId,\n              account,\n              balance,\n              currentWallet: undefined,\n              networkClient,\n            })\n          );\n        })\n        .catch((err) => {\n          // console.log(\"newtork ping failed reset wallet state\");\n          // console.log(err, \" : error connecting wallet\");\n          toast.error(err || \"Error connecting wallet\");\n          dispatch(walletConnectorActions.resetWalletConnector());\n        });\n    }\n    // eslint-disable-next-line\n  }, [\n    networkClient,\n    library,\n    isConnected,\n    active,\n    account,\n    chainId,\n    isConnecting,\n  ]);\n\n  const openWalletSelectorDialog = () => {\n    // console.log(\"open wallet selector to connect\");\n    if (!isConnecting) {\n      if (!isConnected) {\n        setShowWalletDialog(true);\n      } else {\n        // console.log(\"wallet is already connect disconnect wallet\");\n        dispatch(walletConnectorActions.resetWalletConnector());\n        dispatch(\n          walletAuthenticatorActions.resetWalletAuthentication({\n            userToken: applicationUserToken,\n          })\n        );\n        dispatch(\n          walletAuthenticatorActions.removeSession({\n            userToken: applicationUserToken,\n          })\n        );\n        setNetworkClient(undefined);\n        deactivate();\n      }\n    } else {\n      // console.log(\"wallet is already in connect state\");\n    }\n  };\n\n  // // console.log(isConnecting, \"isConnecting\");\n  // // console.log(isConnected, \"isConnected\");\n  // // console.log(active, \"active\");\n  // // console.log(library, \"library\");\n  // // console.log(networkClient, \"networkClient\");\n  // // console.log(walletAddress, \"walletAddress\");\n  // // console.log(account, \"account\");\n  // // console.log(walletAddress === account);\n  // // console.log(chainId, \"chainId\");\n  // // console.log(currentWalletNetwork, \"currentWalletNetwork\");\n  // // console.log(currentWalletNetwork === chainId);\n  // // console.log(error);\n\n  const connectMetaMask = () => {\n    if (isConnected) {\n      // console.log(\"wallet is already connect disconnect wallet\");\n      dispatch(walletConnectorActions.resetWalletConnector());\n      setNetworkClient(undefined);\n      deactivate();\n    } else {\n      // console.log(\"intialize web3 wallet connect for meta mask\");\n      activate(injected);\n      setShowWalletDialog(false);\n      setNetworkClient(undefined);\n    }\n  };\n\n  useEffect(() => {\n    if (error) {\n      dispatch(walletConnectorActions.resetWalletConnector());\n      // console.log(error);\n      toast.error(error?.message || \"Error connecting wallet\");\n    }\n    // eslint-disable-next-line\n  }, [error]);\n\n  return (\n    <>\n      <WalletConnectView\n        {...{\n          ...WalletConnectViewProps,\n          prefix: {\n            ...(isConnecting ? (\n              <AiOutlineLoading3Quarters />\n            ) : !isConnected ? (\n              <VscDebugDisconnect />\n            ) : (\n              <AiOutlineDisconnect />\n            )),\n          },\n\n          title: isConnecting\n            ? \"Connecting...\"\n            : !isConnected\n            ? \"Connect to Metamask\"\n            : \"Disconnect\",\n          disabled: isConnecting,\n        }}\n        onClick={() => {\n          console.log(\"helloooo-=====>><<<\")\n          openWalletSelectorDialog();\n        }}\n      />\n      <WalletConnectModal\n        show={showWalletDialog}\n        metaMaskClickEvent={() => {\n          connectMetaMask();\n        }}\n        onHide={() => setShowWalletDialog(false)}\n      />\n      {/* { isAuthenticationNeeded && <WalletAuthencationOnSignIn account={account} networkClient={networkClient} isAuthenticationNeeded={isAuthenticationNeeded} /> } */}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}