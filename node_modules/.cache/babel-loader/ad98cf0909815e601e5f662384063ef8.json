{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/staking-casper-frontend/src/header/header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FHeader,\n// FHeaderCollapse,\nFButton, FItem, FTruncateText\n// FHeaderMenuItem,\n} from \"ferrum-design-system\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ReactComponent as IconNetwork } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/casper.svg\";\nimport logo from \"../assets/images/logo-light.svg\";\nimport { CgArrowsExchangeAlt } from \"react-icons/cg\";\nimport { CasperClient, CasperServiceByJsonRPC, CLPublicKey } from \"casper-js-sdk\";\nimport { connectWallet as connectWalletDispatch, resetWallet, configLoaded, signed } from '../redux/casper/casperActions';\nimport AddressSelector from \"../dialogs/AddressSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst STATUS_API = \"http://159.65.203.12:8888\";\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\nconst Header = () => {\n  _s();\n  var _connection$selectedA;\n  const dispatch = useDispatch();\n  const connection = useSelector(state => state.casper.connect);\n  console.log(connection);\n  const [showAddressSelectorDlg, setShowAddressSelectorDlg] = useState(false);\n  const selectedAccount = {};\n  const connectWallet = async () => {\n    await window.casperlabsHelper.requestConnection();\n    const isConnected = await window.casperlabsHelper.isConnected();\n    if (isConnected) {\n      await AccountInformation();\n    }\n    return;\n  };\n  const disconnectWallet = async () => {\n    window.casperlabsHelper.disconnectFromSite();\n    await resetWallet()(dispatch);\n  };\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    console.log(isConnected, 'isConnected');\n    if (isConnected) {\n      try {\n        var _latestBlock$block, _latestBlock$block2, _latestBlock$block2$h;\n        const publicKey = await window.casperlabsHelper.getActivePublicKey();\n        console.log(publicKey);\n        //textAddress.textContent += publicKey;\n\n        const latestBlock = await casperService.getLatestBlockInfo();\n        console.log(latestBlock);\n        const root = await casperService.getStateRootHash(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block = latestBlock.block) === null || _latestBlock$block === void 0 ? void 0 : _latestBlock$block.hash);\n        console.log(latestBlock, root);\n        await connectWalletDispatch([{\n          \"address\": publicKey\n        }])(dispatch);\n        const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n\n        // @ts-ignore\n        const balance = await casperService.getAccountBalance(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block2 = latestBlock.block) === null || _latestBlock$block2 === void 0 ? void 0 : (_latestBlock$block2$h = _latestBlock$block2.header) === null || _latestBlock$block2$h === void 0 ? void 0 : _latestBlock$block2$h.state_root_hash, balanceUref);\n        console.log(balance.toString());\n        const info = await casperService.getDeployInfo('fd0aa2f42bd78c5b613dd363b91b9700d699571f85afbd88c4d1a95eb332e85c');\n\n        // @ts-ignore\n        const infoArguments = (info.deploy.session.ModuleBytes.args || []).find(e => e[0] === 'erc20_contract_hash');\n        if (infoArguments) {\n          var _latestBlock$block3, _latestBlock$block3$h, _latestBlock$block4, _latestBlock$block4$h, _tokenName$CLValue, _tokenSymbol$CLValue;\n          console.log(infoArguments, 'infoArguments');\n          const tokenName = await casperService.getBlockState( //@ts-ignore\n          latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block3 = latestBlock.block) === null || _latestBlock$block3 === void 0 ? void 0 : (_latestBlock$block3$h = _latestBlock$block3.header) === null || _latestBlock$block3$h === void 0 ? void 0 : _latestBlock$block3$h.state_root_hash, infoArguments[1].parsed, ['name']);\n          const tokenSymbol = await casperService.getBlockState( //@ts-ignore\n          latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block4 = latestBlock.block) === null || _latestBlock$block4 === void 0 ? void 0 : (_latestBlock$block4$h = _latestBlock$block4.header) === null || _latestBlock$block4$h === void 0 ? void 0 : _latestBlock$block4$h.state_root_hash, infoArguments[1].parsed, ['symbol']);\n          console.log((_tokenName$CLValue = tokenName.CLValue) === null || _tokenName$CLValue === void 0 ? void 0 : _tokenName$CLValue.data, (_tokenSymbol$CLValue = tokenSymbol.CLValue) === null || _tokenSymbol$CLValue === void 0 ? void 0 : _tokenSymbol$CLValue.data, 'info2info2');\n          if (info.deploy.session) {\n            var _tokenSymbol$CLValue2, _tokenName$CLValue2;\n            // @ts-ignore\n            configLoaded({\n              // @ts-ignore\n              config: info.deploy.session.ModuleBytes.args,\n              tokenInfo: {\n                tokenSymbol: (_tokenSymbol$CLValue2 = tokenSymbol.CLValue) === null || _tokenSymbol$CLValue2 === void 0 ? void 0 : _tokenSymbol$CLValue2.data,\n                tokenName: (_tokenName$CLValue2 = tokenName.CLValue) === null || _tokenName$CLValue2 === void 0 ? void 0 : _tokenName$CLValue2.data\n              }\n            })(dispatch);\n            //@ts-ignore\n            signed(info.deploy.approvals)(dispatch);\n            //@ts-ignore\n            console.log(info.deploy, 'infoooo');\n          }\n        }\n      } catch (error) {\n        console.log(error, 'Error occured');\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FHeader, {\n      showLogo: true,\n      headerLogo: logo,\n      className: \"bg-none\",\n      children: /*#__PURE__*/_jsxDEV(FItem, {\n        display: \"flex\",\n        align: \"right\",\n        alignY: \"center\",\n        children: connection !== null && connection !== void 0 && connection.isWalletConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FButton, {\n            prefix: /*#__PURE__*/_jsxDEV(CgArrowsExchangeAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this),\n            onClick: () => {\n              setShowAddressSelectorDlg(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FButton, {\n            className: \"f-mr-1\",\n            title: \"Disconnect Wallet\",\n            onClick: disconnectWallet,\n            btnInfo: /*#__PURE__*/_jsxDEV(FItem, {\n              display: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(IconNetwork, {\n                width: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(FTruncateText, {\n                className: \"f-ml-1\",\n                text: (connection === null || connection === void 0 ? void 0 : (_connection$selectedA = connection.selectedAccount) === null || _connection$selectedA === void 0 ? void 0 : _connection$selectedA.address) || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(FButton, {\n          className: \"f-mr-1\",\n          title: \"Connect Wallet\",\n          onClick: connectWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), showAddressSelectorDlg && /*#__PURE__*/_jsxDEV(AddressSelector, {\n      show: showAddressSelectorDlg,\n      onHide: () => setShowAddressSelectorDlg(false),\n      connectedAccounts: (connection === null || connection === void 0 ? void 0 : connection.connectedAccounts) || [],\n      onAccountSelect: account => {\n        // onAccountSelect(account);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"xOyGBogBYi9acrSFat1z/DYcj5c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","FHeader","FButton","FItem","FTruncateText","useSelector","useDispatch","CgArrowsExchangeAlt","CasperClient","CasperServiceByJsonRPC","CLPublicKey","connectWallet","connectWalletDispatch","resetWallet","configLoaded","signed","AddressSelector","RPC_API","STATUS_API","casperService","casperClient","Header","dispatch","connection","state","casper","connect","console","log","showAddressSelectorDlg","setShowAddressSelectorDlg","selectedAccount","window","casperlabsHelper","requestConnection","isConnected","AccountInformation","disconnectWallet","disconnectFromSite","publicKey","getActivePublicKey","latestBlock","getLatestBlockInfo","root","getStateRootHash","block","hash","balanceUref","getAccountBalanceUrefByPublicKey","fromHex","balance","getAccountBalance","header","state_root_hash","toString","info","getDeployInfo","infoArguments","deploy","session","ModuleBytes","args","find","e","tokenName","getBlockState","parsed","tokenSymbol","CLValue","data","config","tokenInfo","approvals","error","logo","isWalletConnected","address","connectedAccounts","account"],"sources":["/Users/kabiribraheem/Documents/staking-casper-frontend/src/header/header.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  FHeader,\n  // FHeaderCollapse,\n  FButton,\n  FItem,\n  FTruncateText,\n  // FHeaderMenuItem,\n} from \"ferrum-design-system\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ReactComponent as IconNetwork } from \"../assets/images/casper.svg\";\n\nimport logo from \"../assets/images/logo-light.svg\";\nimport { CgArrowsExchangeAlt } from \"react-icons/cg\";\nimport { CasperClient, CasperServiceByJsonRPC, CLPublicKey } from \"casper-js-sdk\";\nimport { \n  connectWallet as connectWalletDispatch,\n  resetWallet,\n  configLoaded,\n  signed\n} from '../redux/casper/casperActions';\n\nimport AddressSelector from \"../dialogs/AddressSelector\";\n\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst STATUS_API = \"http://159.65.203.12:8888\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const connection = useSelector((state: any) => state.casper.connect)\n  console.log(connection)\n\n  const [showAddressSelectorDlg, setShowAddressSelectorDlg] =  useState<boolean>(false);\n\n  const selectedAccount: { address?: string } = {};\n\n  const connectWallet = async () => {\n    await window.casperlabsHelper.requestConnection()\n\n    const isConnected = await window.casperlabsHelper.isConnected();\n\n    if (isConnected) {\n      await AccountInformation();\n    }\n \n    return;\n  };\n\n  const disconnectWallet = async () => {\n    window.casperlabsHelper.disconnectFromSite();\n    await resetWallet()(dispatch)\n  };\n\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    console.log(isConnected, 'isConnected');\n\n    if (isConnected) {\n      try {\n        const publicKey = await window.casperlabsHelper.getActivePublicKey();\n        console.log(publicKey);\n        //textAddress.textContent += publicKey;\n\n        const latestBlock = await casperService.getLatestBlockInfo();\n        console.log(latestBlock);\n\n        const root = await casperService.getStateRootHash(latestBlock?.block?.hash);\n        console.log(latestBlock, root)\n\n        await connectWalletDispatch([ { \"address\": publicKey } ])(dispatch)\n\n        const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n        \n        // @ts-ignore\n        const balance = await casperService.getAccountBalance(latestBlock?.block?.header?.state_root_hash, balanceUref);\n        console.log(balance.toString())\n\n        const info = await casperService.getDeployInfo(\n          'fd0aa2f42bd78c5b613dd363b91b9700d699571f85afbd88c4d1a95eb332e85c'\n        )\n\n        // @ts-ignore\n        const infoArguments = (info.deploy.session.ModuleBytes.args || []).find(\n          (e: any) => e[0] === 'erc20_contract_hash'\n        )\n\n        if (infoArguments) {\n          console.log(infoArguments, 'infoArguments')\n\n          const tokenName = await casperService.getBlockState(\n            //@ts-ignore\n            latestBlock?.block?.header?.state_root_hash,\n            infoArguments[1].parsed,\n            ['name']\n          )\n  \n          const tokenSymbol = await casperService.getBlockState(\n             //@ts-ignore\n             latestBlock?.block?.header?.state_root_hash,\n             infoArguments[1].parsed,\n            ['symbol']\n          )\n  \n          console.log(tokenName.CLValue?.data, tokenSymbol.CLValue?.data, 'info2info2')\n\n          if(info.deploy.session) {\n            // @ts-ignore\n            configLoaded({\n              // @ts-ignore\n              config: info.deploy.session.ModuleBytes.args,\n              tokenInfo: {\n                tokenSymbol: tokenSymbol.CLValue?.data,\n                tokenName: tokenName.CLValue?.data\n              }\n            })(dispatch);\n            //@ts-ignore\n            signed(info.deploy.approvals)(dispatch)\n            //@ts-ignore\n            console.log(info.deploy, 'infoooo');\n          }\n        }\n        \n      } catch (error) {\n        console.log(error, 'Error occured')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <FHeader showLogo={true} headerLogo={logo} className=\"bg-none\">\n        <FItem display={\"flex\"} align=\"right\" alignY={\"center\"}>\n          {connection?.isWalletConnected ? (\n            <>\n              <FButton\n                prefix={<CgArrowsExchangeAlt />}\n                onClick={() => {\n                  setShowAddressSelectorDlg(true);\n                }}\n              ></FButton>\n              <FButton\n                className=\"f-mr-1\"\n                title={\"Disconnect Wallet\"}\n                onClick={disconnectWallet}\n                btnInfo={\n                  <FItem display={\"flex\"}>\n                    <IconNetwork width={20} />{\" \"}\n                    <FTruncateText\n                      className=\"f-ml-1\"\n                      text={connection?.selectedAccount?.address || ''}\n                    />\n                  </FItem>\n                }\n              />\n            </>\n          ) : (\n            <FButton\n              className=\"f-mr-1\"\n              title={\"Connect Wallet\"}\n              onClick={connectWallet}\n            ></FButton>\n          )}\n          {/* <FHeaderCollapse>\n            <FHeaderMenuItem to=\"/status-page\" title=\"Status Page\" />\n          </FHeaderCollapse> */}\n        </FItem>\n      </FHeader>\n      {showAddressSelectorDlg && (\n        <AddressSelector\n          show={showAddressSelectorDlg}\n          onHide={() => setShowAddressSelectorDlg(false)}\n          connectedAccounts={connection?.connectedAccounts || []}\n          onAccountSelect={(account: any) => {\n           // onAccountSelect(account);\n          }}\n        />\n      )}\n    </div>\n  );\n};\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}