{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/casper-bridge-frontend/src/dialogs/ConfirmationDialog.tsx\",\n  _s = $RefreshSig$();\nimport { CasperClient, CasperServiceByJsonRPC } from \"casper-js-sdk\";\nimport { FDialog, FList, FTruncateText, FTypo } from \"ferrum-design-system\";\nimport { useEffect, useState } from \"react\";\nimport Loader from \"./../assets/images/loaderIcon.svg\";\nimport Success from \"./../assets/images/SuccessIcon.svg\";\nimport Failure from \"./../assets/images/FailureIcon.svg\";\nimport LoaderGif from \"./../assets/images/loading2.gif\";\nimport { crucibleApi } from \"../client\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\nconst ConfirmationDialog = _ref => {\n  _s();\n  let {\n    show,\n    onHide,\n    message,\n    transaction,\n    isSwap = false\n  } = _ref;\n  const [processing, setProcessing] = useState(false);\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const {\n    connect: {\n      config,\n      selectedAccount,\n      isWalletConnected,\n      signedAddresses\n    }\n  } = useSelector(state => state.casper);\n  const {\n    walletAddress\n  } = useSelector(state => state.casper.walletConnector);\n  const checkTransaction = async () => {\n    setProcessing(true);\n    const res = await casperService.getDeployInfo(transaction);\n    console.log(res);\n    if (res.execution_results.length) {\n      console.log(res);\n      //@ts-ignore\n      if (res.execution_results[0].result.Failure) {\n        //@ts-ignore\n        console.log(res.execution_results[0].result.Failure.error_message, 'res[0].result.Failure');\n        setProcessing(false);\n        setIsDone(true);\n        setIsSuccessful(false);\n      }\n      //@ts-ignore\n      if (res.execution_results[0].result.Success) {\n        //@ts-ignore\n        console.log(res.execution_results[0].result.Success);\n        setProcessing(false);\n        setIsDone(true);\n        setIsSuccessful(true);\n        if (isSwap) {\n          const Api = new crucibleApi();\n          await Api.signInToServer(walletAddress);\n          const logTransaction = await Api.gatewayApi({\n            command: 'logEvmAndNonEvmTransaction',\n            data: {\n              receiveNetwork: '56',\n              sendAmount: '1',\n              sendAddress: `${selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.address}`,\n              sendNetwork: '109090',\n              sendTimestamp: Date.now(),\n              sendCurrencyS: `CSPR:222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473`,\n              receiveCurrency: 'BSC_TESTNET:0xfe00ee6f00dd7ed533157f6250656b4e007e7179',\n              creator: `cspr:${selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.address}`\n            },\n            params: []\n          });\n          console.log(logTransaction);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(transaction, isDone);\n    if (transaction && !isDone) {\n      let intervalId = setInterval(() => checkTransaction(), 5000);\n      setIntervalId(intervalId);\n    }\n    if (transaction && isDone) {\n      console.log(intervalId);\n      clearInterval(intervalId);\n    }\n  }, [transaction, isDone]);\n  useEffect(() => {\n    return () => {\n      setIsDone(false);\n      setIsSuccessful(false);\n      setProcessing(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FDialog, {\n    variant: \"dark\",\n    size: \"medium\",\n    onHide: () => onHide(),\n    show: show,\n    className: \"connect-wallet-dialog text-center\",\n    showClose: true,\n    title: \"\",\n    children: /*#__PURE__*/_jsxDEV(FList, {\n      display: \"block\",\n      type: \"number\",\n      variant: \"connect-wallet\",\n      children: [isDone && transaction ? isSuccessful ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Success,\n        width: \"120px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Failure,\n        width: \"120px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this) : transaction && processing ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LoaderGif,\n        width: \"120px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Loader,\n        width: \"120px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FTypo, {\n        size: 20,\n        className: \"f-mb--5 f-mt--9\",\n        children: isDone && transaction ? isSuccessful ? 'Transaction processed successfully' : 'Transaction failed on chain' : message || 'Loading'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://testnet.cspr.live/deploy/${transaction}`,\n        target: \"_blank\",\n        style: {\n          \"color\": \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FTypo, {\n          size: 15,\n          className: \"f-mb--5 f-mt--9\",\n          children: /*#__PURE__*/_jsxDEV(FTruncateText, {\n            text: transaction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n};\n_s(ConfirmationDialog, \"Zz2mavKihCvj4PCn9zlajpVdzo0=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = ConfirmationDialog;\nexport default ConfirmationDialog;\nvar _c;\n$RefreshReg$(_c, \"ConfirmationDialog\");","map":{"version":3,"names":["CasperClient","CasperServiceByJsonRPC","FDialog","FList","FTruncateText","FTypo","useEffect","useState","LoaderGif","crucibleApi","useSelector","RPC_API","casperService","casperClient","ConfirmationDialog","show","onHide","message","transaction","isSwap","processing","setProcessing","isSuccessful","setIsSuccessful","isDone","setIsDone","intervalId","setIntervalId","connect","config","selectedAccount","isWalletConnected","signedAddresses","state","casper","walletAddress","walletConnector","checkTransaction","res","getDeployInfo","console","log","execution_results","length","result","Failure","error_message","Success","Api","signInToServer","logTransaction","gatewayApi","command","data","receiveNetwork","sendAmount","sendAddress","address","sendNetwork","sendTimestamp","Date","now","sendCurrencyS","receiveCurrency","creator","params","setInterval","clearInterval","Loader"],"sources":["/Users/kabiribraheem/Documents/casper-bridge-frontend/src/dialogs/ConfirmationDialog.tsx"],"sourcesContent":["import { CasperClient, CasperServiceByJsonRPC } from \"casper-js-sdk\";\nimport { FDialog, FList, FTruncateText, FTypo, FLink } from \"ferrum-design-system\";\nimport { useEffect, useState } from \"react\";\nimport Loader from \"./../assets/images/loaderIcon.svg\";\nimport Success from \"./../assets/images/SuccessIcon.svg\";\nimport Failure from \"./../assets/images/FailureIcon.svg\";\nimport LoaderGif from \"./../assets/images/loading2.gif\";\nimport { crucibleApi } from \"../client\";\nimport { useSelector } from \"react-redux\";\n\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\n\nconst ConfirmationDialog = ({\n    show,\n    onHide,\n    message,\n    transaction,\n    isSwap = false,\n  }: any) => {\n    const [processing, setProcessing] = useState(false)\n    const [isSuccessful, setIsSuccessful] = useState(false)\n    const [isDone, setIsDone] = useState(false)\n    const [intervalId, setIntervalId] = useState(null as any)\n    const { connect: { config, selectedAccount, isWalletConnected, signedAddresses, } } = useSelector((state: any) => state.casper);\n    const { walletAddress } = useSelector((state: any) => state.casper.walletConnector);\n\n    const checkTransaction = async () => {\n        setProcessing(true)\n        const res = await casperService.getDeployInfo(transaction)\n        console.log(res);\n        if(res.execution_results.length) {\n            console.log(res)\n           //@ts-ignore\n           if(res.execution_results[0].result.Failure) {\n            //@ts-ignore\n            console.log(res.execution_results[0].result.Failure.error_message, 'res[0].result.Failure')\n            setProcessing(false)\n            setIsDone(true)\n            setIsSuccessful(false)\n           }\n           //@ts-ignore\n           if(res.execution_results[0].result.Success) {\n            //@ts-ignore\n            console.log(res.execution_results[0].result.Success)\n            setProcessing(false)\n            setIsDone(true)\n            setIsSuccessful(true)\n            if (isSwap) {\n              const Api = new crucibleApi()\n              await Api.signInToServer(walletAddress)\n              const logTransaction = await Api.gatewayApi({\n                command: 'logEvmAndNonEvmTransaction', data: {\n                  receiveNetwork: '56',\n                  sendAmount: '1',\n                  sendAddress: `${selectedAccount?.address}`,\n                  sendNetwork: '109090',\n                  sendTimestamp: Date.now(),\n                  sendCurrencyS: `CSPR:222974816f70ca96fc4002a696bb552e2959d3463158cd82a7bfc8a94c03473`,\n                  receiveCurrency: 'BSC_TESTNET:0xfe00ee6f00dd7ed533157f6250656b4e007e7179',\n                  creator: `cspr:${selectedAccount?.address}`\n              }, params: [] });\n              console.log(logTransaction);\n            }\n           \n           }\n        }\n    }\n    useEffect(() => {\n        console.log(transaction, isDone)\n        if (transaction && !isDone) {\n          let intervalId = setInterval(\n            () =>  checkTransaction()\n          , 5000)\n          setIntervalId(intervalId)\n        }\n\n        if (transaction && isDone) {\n          console.log(intervalId)\n          clearInterval(intervalId)\n        }\n    }, [transaction, isDone])\n\n    useEffect(() => {\n      return () => {\n        setIsDone(false)\n        setIsSuccessful(false)\n        setProcessing(false)\n      }\n    }, [])\n\n    return (\n      <FDialog\n        variant={\"dark\"}\n        size={\"medium\"}\n        onHide={() => onHide()}\n        show={show}\n        className=\"connect-wallet-dialog text-center\"\n        showClose={true}\n        title={\"\"}\n      >\n        <FList display=\"block\" type=\"number\" variant=\"connect-wallet\">\n          {\n            isDone && transaction ?\n              isSuccessful ?\n                <img src={Success} width={\"120px\"} />\n              : <img src={Failure} width={\"120px\"} />\n            : transaction && processing ?\n              <img src={LoaderGif} width={\"120px\"} />\n            : <img src={Loader} width={\"120px\"} />\n          }\n          <FTypo size={20} className={\"f-mb--5 f-mt--9\"}> \n            {\n              isDone && transaction ?\n               isSuccessful ?\n                  ('Transaction processed successfully')\n               : ('Transaction failed on chain')\n              :  (message || 'Loading')\n            }\n          </FTypo>\n          <a href={`https://testnet.cspr.live/deploy/${transaction}`} target=\"_blank\" style={{\"color\": \"white\"}}>\n            <FTypo size={15} className={\"f-mb--5 f-mt--9\"}>\n              <FTruncateText text={transaction} />\n            </FTypo>\n          </a>\n        </FList>\n        {/* <FButton onClick={onHide} title={\"Close\"}></FButton> */}\n      </FDialog>\n    );\n  };\n  \nexport default ConfirmationDialog\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}