{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/staking-casper-frontend/src/dialogs/ConfirmationDialog.tsx\",\n  _s = $RefreshSig$();\nimport { CasperClient, CasperServiceByJsonRPC } from \"casper-js-sdk\";\nimport { FDialog, FList, FTruncateText, FTypo } from \"ferrum-design-system\";\nimport { useEffect, useState } from \"react\";\nimport Loader from \"./../assets/images/loaderIcon.svg\";\nimport Success from \"./../assets/images/SuccessIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\nconst ConfirmationDialog = _ref => {\n  _s();\n  let {\n    show,\n    onHide,\n    message,\n    transaction\n  } = _ref;\n  const [processing, setProcessing] = useState(false);\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const checkTransaction = async () => {\n    setProcessing(true);\n    const res = await casperService.getDeployInfo(transaction);\n    console.log(res);\n    if (res.execution_results.length) {\n      console.log(res);\n      //@ts-ignore\n      if (res.execution_results[0].result.Failure) {\n        //@ts-ignore\n        console.log(res.execution_results[0].result.Failure.error_message, 'res[0].result.Failure');\n        setProcessing(false);\n        setIsDone(true);\n        setIsSuccessful(false);\n      }\n      //@ts-ignore\n      if (res.execution_results[0].result.Success) {\n        //@ts-ignore\n        console.log(res.execution_results[0].result.Success);\n        setProcessing(false);\n        setIsDone(true);\n        setIsSuccessful(true);\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(transaction, isDone);\n    if (transaction && !isDone) {\n      let intervalId = setInterval(() => checkTransaction(), 5000);\n      setIntervalId(intervalId);\n    }\n    if (transaction && isDone) {\n      console.log(intervalId);\n      clearInterval(intervalId);\n    }\n  }, [transaction, isDone]);\n  useEffect(() => {\n    return () => {\n      setIsDone(false);\n      setIsSuccessful(false);\n      setProcessing(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FDialog, {\n    variant: \"dark\",\n    size: \"medium\",\n    onHide: () => onHide(),\n    show: show,\n    className: \"connect-wallet-dialog text-center\",\n    showClose: true,\n    title: \"\",\n    children: /*#__PURE__*/_jsxDEV(FList, {\n      display: \"block\",\n      type: \"number\",\n      variant: \"connect-wallet\",\n      children: [isDone && transaction ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Success,\n        width: \"120px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Loader,\n        width: \"120px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FTypo, {\n        size: 20,\n        className: \"f-mb--5 f-mt--9\",\n        children: [\" \", message || 'Loading', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FTypo, {\n        size: 15,\n        className: \"f-mb--5 f-mt--9\",\n        children: /*#__PURE__*/_jsxDEV(FTruncateText, {\n          text: transaction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n_s(ConfirmationDialog, \"1AB+uDrPD2n086l3NbsblI2cnJk=\");\n_c = ConfirmationDialog;\nexport default ConfirmationDialog;\nvar _c;\n$RefreshReg$(_c, \"ConfirmationDialog\");","map":{"version":3,"names":["CasperClient","CasperServiceByJsonRPC","FDialog","FList","FTruncateText","FTypo","useEffect","useState","RPC_API","casperService","casperClient","ConfirmationDialog","show","onHide","message","transaction","processing","setProcessing","isSuccessful","setIsSuccessful","isDone","setIsDone","intervalId","setIntervalId","checkTransaction","res","getDeployInfo","console","log","execution_results","length","result","Failure","error_message","Success","setInterval","clearInterval","Loader"],"sources":["/Users/kabiribraheem/Documents/staking-casper-frontend/src/dialogs/ConfirmationDialog.tsx"],"sourcesContent":["import { CasperClient, CasperServiceByJsonRPC } from \"casper-js-sdk\";\nimport { FDialog, FList, FTruncateText, FTypo } from \"ferrum-design-system\";\nimport { useEffect, useState } from \"react\";\nimport Loader from \"./../assets/images/loaderIcon.svg\";\nimport Success from \"./../assets/images/SuccessIcon.svg\";\n\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst casperClient = new CasperClient(RPC_API);\n\nconst ConfirmationDialog = ({\n    show,\n    onHide,\n    message,\n    transaction\n  }: any) => {\n    const [processing, setProcessing] = useState(false)\n    const [isSuccessful, setIsSuccessful] = useState(false)\n    const [isDone, setIsDone] = useState(false)\n    const [intervalId, setIntervalId] = useState(null as any)\n\n    const checkTransaction = async () => {\n        setProcessing(true)\n        const res = await casperService.getDeployInfo(transaction)\n        console.log(res);\n        if(res.execution_results.length) {\n            console.log(res)\n           //@ts-ignore\n           if(res.execution_results[0].result.Failure) {\n            //@ts-ignore\n            console.log(res.execution_results[0].result.Failure.error_message, 'res[0].result.Failure')\n            setProcessing(false)\n            setIsDone(true)\n            setIsSuccessful(false)\n           }\n           //@ts-ignore\n           if(res.execution_results[0].result.Success) {\n            //@ts-ignore\n            console.log(res.execution_results[0].result.Success)\n            setProcessing(false)\n            setIsDone(true)\n            setIsSuccessful(true)\n\n           }\n        }\n    }\n    useEffect(() => {\n        console.log(transaction, isDone)\n        if (transaction && !isDone) {\n          let intervalId = setInterval(\n            () =>  checkTransaction()\n          , 5000)\n          setIntervalId(intervalId)\n        }\n\n        if (transaction && isDone) {\n          console.log(intervalId)\n          clearInterval(intervalId)\n        }\n    }, [transaction, isDone])\n\n    useEffect(() => {\n      return () => {\n        setIsDone(false)\n        setIsSuccessful(false)\n        setProcessing(false)\n      }\n    }, [])\n\n    return (\n      <FDialog\n        variant={\"dark\"}\n        size={\"medium\"}\n        onHide={() => onHide()}\n        show={show}\n        className=\"connect-wallet-dialog text-center\"\n        showClose={true}\n        title={\"\"}\n      >\n        <FList display=\"block\" type=\"number\" variant=\"connect-wallet\">\n          {\n            isDone && transaction ?\n              <img src={Success} width={\"120px\"} />\n            : <img src={Loader} width={\"120px\"} />\n          }\n          <FTypo size={20} className={\"f-mb--5 f-mt--9\"}> {message || 'Loading'} </FTypo>\n          <FTypo size={15} className={\"f-mb--5 f-mt--9\"}>\n            <FTruncateText text={transaction} />\n          </FTypo>\n        </FList>\n        {/* <FButton onClick={onHide} title={\"Close\"}></FButton> */}\n      </FDialog>\n    );\n  };\n  \nexport default ConfirmationDialog\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}