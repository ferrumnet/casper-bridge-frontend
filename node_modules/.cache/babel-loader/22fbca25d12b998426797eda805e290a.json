{"ast":null,"code":"var _jsxFileName = \"/Users/kabiribraheem/Documents/staking-casper-frontend/src/components/StakingCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FButton, FCard, FInputText, FItem, FTypo\n// FResponseBar,\n} from \"ferrum-design-system\";\nimport { ReactComponent as BrandIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/brand-icon.svg\";\nimport { ReactComponent as EyeIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/EyeIcon.svg\";\nimport { ReactComponent as EyeIconUnhide } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/EyeIconUnhide.svg\";\nimport { ReactComponent as WarningIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/WarningIcon.svg\";\nimport { ReactComponent as IconTimer } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/icon-staking-timer.svg\";\nimport { ReactComponent as LockIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/LockIcon.svg\"; // import { ConnectDialog } from \"../dialogs/ConnectDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { CasperServiceByJsonRPC, CLPublicKey, CLValueBuilder, decodeBase16, DeployUtil, RuntimeArgs, Signer } from \"casper-js-sdk\";\nimport { connectWallet as connectWalletDispatch } from '../redux/casper/casperActions';\nimport { getStakingInfo } from \"../utils/DateUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\nconst StakingCard = () => {\n  _s();\n  var _connection$connect, _connection$connect2, _connection$connect3, _connection$connect4, _connection$selectedA4;\n  const {\n    stakingId\n  } = useParams();\n  console.log(stakingId);\n  // const maturityInfo = getMaturityInfo();\n  const dispatch = useDispatch();\n  const navigate = useHistory();\n  const [showAddress, setShowAddress] = useState(false);\n  const isWalletConnected = false;\n  const connection = useSelector(state => state.casper.connect);\n  const connectWallet = async () => {\n    await window.casperlabsHelper.requestConnection();\n    const isConnected = await window.casperlabsHelper.isConnected();\n    if (isConnected) {\n      await AccountInformation();\n    }\n  };\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    console.log(isConnected, 'isConnectedisConnected');\n    if (isConnected) {\n      var _latestBlock$block, _latestBlock$block2, _latestBlock$block2$h;\n      const publicKey = await window.casperlabsHelper.getActivePublicKey();\n      console.log(publicKey);\n      //textAddress.textContent += publicKey;\n\n      const latestBlock = await casperService.getLatestBlockInfo();\n      console.log(latestBlock);\n      const root = await casperService.getStateRootHash(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block = latestBlock.block) === null || _latestBlock$block === void 0 ? void 0 : _latestBlock$block.hash);\n      console.log(latestBlock, root);\n      await connectWalletDispatch([{\n        \"address\": publicKey\n      }])(dispatch);\n      const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n      console.log(balanceUref);\n\n      // @ts-ignore\n      const balance = await casperService.getAccountBalance(latestBlock === null || latestBlock === void 0 ? void 0 : (_latestBlock$block2 = latestBlock.block) === null || _latestBlock$block2 === void 0 ? void 0 : (_latestBlock$block2$h = _latestBlock$block2.header) === null || _latestBlock$block2$h === void 0 ? void 0 : _latestBlock$block2$h.state_root_hash, balanceUref);\n      console.log(balance.toString());\n      //textBalance.textContent = `PublicKeyHex ${balance.toString()}`;\n    }\n  }\n\n  const stakingInfo = getStakingInfo(connection === null || connection === void 0 ? void 0 : (_connection$connect = connection.connect) === null || _connection$connect === void 0 ? void 0 : _connection$connect.stakingEnds, connection === null || connection === void 0 ? void 0 : (_connection$connect2 = connection.connect) === null || _connection$connect2 === void 0 ? void 0 : _connection$connect2.stakingStarts, connection === null || connection === void 0 ? void 0 : (_connection$connect3 = connection.connect) === null || _connection$connect3 === void 0 ? void 0 : _connection$connect3.withdrawStarts, connection === null || connection === void 0 ? void 0 : (_connection$connect4 = connection.connect) === null || _connection$connect4 === void 0 ? void 0 : _connection$connect4.withdrawEnds);\n  const isAddressSigned = () => {\n    var _connection$selectedA;\n    if (connection !== null && connection !== void 0 && (_connection$selectedA = connection.selectedAccount) !== null && _connection$selectedA !== void 0 && _connection$selectedA.address) {\n      var _connection$signedAdd;\n      const isSigned = (_connection$signedAdd = connection.signedAddresses) === null || _connection$signedAdd === void 0 ? void 0 : _connection$signedAdd.find(e => {\n        var _connection$selectedA2;\n        return e.signer === (connection === null || connection === void 0 ? void 0 : (_connection$selectedA2 = connection.selectedAccount) === null || _connection$selectedA2 === void 0 ? void 0 : _connection$selectedA2.address);\n      });\n      return !!isSigned;\n    }\n    return false;\n  };\n  const signIt = async () => {\n    var _connection$selectedA3;\n    const publicKeyHex = connection === null || connection === void 0 ? void 0 : (_connection$selectedA3 = connection.selectedAccount) === null || _connection$selectedA3 === void 0 ? void 0 : _connection$selectedA3.address;\n    const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n    const deployParams = new DeployUtil.DeployParams(senderPublicKey, 'casper-test');\n    const args = RuntimeArgs.fromMap({\n      \"spender\": CLValueBuilder.string('ee07324ad466aad373e94f787b3dbf1ba1ff00175e97a0bce002bb45737ad5e6')\n    });\n    const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(decodeBase16('6adb2902bf7c56116ead7ea7a2ffa269b8d4b117b632d2c44052f3c951dcaa0b'), 'approve', args);\n    const payment = DeployUtil.standardPayment(10000000000000);\n    const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n    const deployJson = DeployUtil.deployToJson(deploy);\n    Signer.sign(deployJson, publicKeyHex).then(signedDeployJson => {\n      const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n      console.log(signedDeploy);\n      if (signedDeploy.ok) {\n        return casperService.deploy(signedDeploy.val).then(res => {\n          return res;\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FCard, {\n      className: \"card-connect f-mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(FItem, {\n        display: \"flex\",\n        className: \"f-mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(FItem, {\n          bgColor: \"#1F2128\",\n          size: 70,\n          className: \"f-p--8 f-mr-1\",\n          display: \"flex\",\n          alignX: \"center\",\n          alignY: \"center\",\n          children: /*#__PURE__*/_jsxDEV(BrandIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FItem, {\n          className: \"f-ml-1\",\n          children: [/*#__PURE__*/_jsxDEV(FTypo, {\n            size: 24,\n            color: \"white\",\n            className: \"f-mt--4\",\n            children: \"Title Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FTypo, {\n            size: 12,\n            color: \"white\",\n            children: \"POOL TYPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), !stakingInfo.isStakingOpen && stakingInfo.stakingOpensIn && /*#__PURE__*/_jsxDEV(FTypo, {\n        className: \"f-mb-3\",\n        color: \"white\",\n        size: 22,\n        weight: 600,\n        display: \"flex\",\n        alignX: \"center\",\n        alignY: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconTimer, {\n          className: \"f-mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), \" Staking Opens in \", stakingInfo.stakingOpensIn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), isWalletConnected && /*#__PURE__*/_jsxDEV(FInputText, {\n        className: \"f-mt-2 f-mb-2\",\n        label: \"YOUR ADDRESS\",\n        disabled: true,\n        value: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(FItem, {\n        className: \"f-mt-2 f-mb-1\",\n        display: \"flex\",\n        alignX: \"between\",\n        alignY: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(FTypo, {\n          weight: 600,\n          children: \"CONTRACT ADDRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), showAddress ? /*#__PURE__*/_jsxDEV(EyeIconUnhide, {\n          width: 50,\n          onClick: () => setShowAddress(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(EyeIcon, {\n          width: 50,\n          onClick: () => setShowAddress(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 95\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), showAddress ? /*#__PURE__*/_jsxDEV(FInputText, {\n        className: \"f-mb-2\",\n        type: \"text\",\n        disabled: true,\n        value: (connection === null || connection === void 0 ? void 0 : (_connection$selectedA4 = connection.selectedAccount) === null || _connection$selectedA4 === void 0 ? void 0 : _connection$selectedA4.address) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 24\n      }, this) : null, showAddress ? /*#__PURE__*/_jsxDEV(FItem, {\n        display: \"flex\",\n        className: \"f-p--8\",\n        bgColor: \" rgba(255, 255, 255, 0.25\",\n        alignY: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(WarningIcon, {\n          width: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FTypo, {\n          className: \"f-pl-1 f-pr-1\",\n          size: 15,\n          weight: 600,\n          children: \"NEVER SEND TOKENS TO THE CONTRACT, THEY WILL BE LOCKED FOREVER. ONLY USE THIS UI TO STAKE.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : null, !connection.isWalletConnected ? /*#__PURE__*/_jsxDEV(FButton, {\n        title: \"Connect\",\n        className: \"w-100 f-mt-2\",\n        onClick: () => connectWallet()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isAddressSigned() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FButton, {\n            title: stakingInfo.isStakingOpen ? \"Stake\" : stakingInfo.isEarlyWithdraw ? \"Early Withdraw\" : stakingInfo.isWithdrawOpen ? \"Maturity Withdraw\" : \"Refresh\",\n            className: \"w-100 f-mt-2\",\n            onClick: () => {\n              var _connection$connect5, _connection$connect6, _connection$connect7, _connection$connect8, _connection$connect9, _connection$connect10, _connection$connect11, _connection$connect12, _connection$connect13, _connection$connect14, _connection$connect15, _connection$connect16;\n              // console.log(\"staking\");\n              // dispatch(algorandActions.shouldStake());\n              if (getStakingInfo(connection === null || connection === void 0 ? void 0 : (_connection$connect5 = connection.connect) === null || _connection$connect5 === void 0 ? void 0 : _connection$connect5.stakingEnds, connection === null || connection === void 0 ? void 0 : (_connection$connect6 = connection.connect) === null || _connection$connect6 === void 0 ? void 0 : _connection$connect6.stakingStarts, connection === null || connection === void 0 ? void 0 : (_connection$connect7 = connection.connect) === null || _connection$connect7 === void 0 ? void 0 : _connection$connect7.withdrawStarts, connection === null || connection === void 0 ? void 0 : (_connection$connect8 = connection.connect) === null || _connection$connect8 === void 0 ? void 0 : _connection$connect8.withdrawEnds).isStakingOpen) {\n                navigate.push(`/${stakingId}/submit-stake`);\n              } else if (getStakingInfo(connection === null || connection === void 0 ? void 0 : (_connection$connect9 = connection.connect) === null || _connection$connect9 === void 0 ? void 0 : _connection$connect9.stakingEnds, connection === null || connection === void 0 ? void 0 : (_connection$connect10 = connection.connect) === null || _connection$connect10 === void 0 ? void 0 : _connection$connect10.stakingStarts, connection === null || connection === void 0 ? void 0 : (_connection$connect11 = connection.connect) === null || _connection$connect11 === void 0 ? void 0 : _connection$connect11.withdrawStarts, connection === null || connection === void 0 ? void 0 : (_connection$connect12 = connection.connect) === null || _connection$connect12 === void 0 ? void 0 : _connection$connect12.withdrawEnds).isEarlyWithdraw || getStakingInfo(connection === null || connection === void 0 ? void 0 : (_connection$connect13 = connection.connect) === null || _connection$connect13 === void 0 ? void 0 : _connection$connect13.stakingEnds, connection === null || connection === void 0 ? void 0 : (_connection$connect14 = connection.connect) === null || _connection$connect14 === void 0 ? void 0 : _connection$connect14.stakingStarts, connection === null || connection === void 0 ? void 0 : (_connection$connect15 = connection.connect) === null || _connection$connect15 === void 0 ? void 0 : _connection$connect15.withdrawStarts, connection === null || connection === void 0 ? void 0 : (_connection$connect16 = connection.connect) === null || _connection$connect16 === void 0 ? void 0 : _connection$connect16.withdrawEnds).isWithdrawOpen) {\n                navigate.push(`/${stakingId}/submit-withdraw`);\n              } else {\n                window.location.reload();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(FButton, {\n          title: \"Sign\",\n          className: \"w-100 f-mt-2\",\n          onClick: () => signIt()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), stakingInfo.isLockPeriod && /*#__PURE__*/_jsxDEV(FItem, {\n        className: \"f-mt-2 \",\n        children: /*#__PURE__*/_jsxDEV(FItem, {\n          bgColor: \"#1F2128\",\n          className: \"f-p--8 w-100\",\n          display: \"flex\",\n          alignX: \"center\",\n          alignY: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(LockIcon, {\n            className: \"f-mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FItem, {\n            display: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(FTypo, {\n              weight: 600,\n              size: 20,\n              display: \"inline-block\",\n              children: \"Lock Period\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FTypo, {\n              color: \"#dab46e\",\n              weight: 600,\n              size: 20,\n              className: \"f-pl--5\",\n              display: \"inline-block\",\n              children: stakingInfo.lockPeriod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(StakingCard, \"3GwXkUx9fepi2xEZvlFgYWTnxNI=\", false, function () {\n  return [useParams, useDispatch, useHistory, useSelector];\n});\n_c = StakingCard;\nexport default StakingCard;\nvar _c;\n$RefreshReg$(_c, \"StakingCard\");","map":{"version":3,"names":["React","useState","FButton","FCard","FInputText","FItem","FTypo","useDispatch","useSelector","useHistory","useParams","CasperServiceByJsonRPC","CLPublicKey","CLValueBuilder","decodeBase16","DeployUtil","RuntimeArgs","Signer","connectWallet","connectWalletDispatch","getStakingInfo","RPC_API","casperService","StakingCard","stakingId","console","log","dispatch","navigate","showAddress","setShowAddress","isWalletConnected","connection","state","casper","connect","window","casperlabsHelper","requestConnection","isConnected","AccountInformation","publicKey","getActivePublicKey","latestBlock","getLatestBlockInfo","root","getStateRootHash","block","hash","balanceUref","getAccountBalanceUrefByPublicKey","fromHex","balance","getAccountBalance","header","state_root_hash","toString","stakingInfo","stakingEnds","stakingStarts","withdrawStarts","withdrawEnds","isAddressSigned","selectedAccount","address","isSigned","signedAddresses","find","e","signer","signIt","publicKeyHex","senderPublicKey","deployParams","DeployParams","args","fromMap","string","session","ExecutableDeployItem","newStoredContractByHash","payment","standardPayment","deploy","makeDeploy","deployJson","deployToJson","sign","then","signedDeployJson","signedDeploy","deployFromJson","ok","val","res","isStakingOpen","stakingOpensIn","isEarlyWithdraw","isWithdrawOpen","push","location","reload","isLockPeriod","lockPeriod"],"sources":["/Users/kabiribraheem/Documents/staking-casper-frontend/src/components/StakingCard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  FButton,\n  FCard,\n  FInputText,\n  FItem,\n  FTypo,\n  // FResponseBar,\n} from \"ferrum-design-system\";\nimport { ReactComponent as BrandIcon } from \"../assets/images/brand-icon.svg\";\nimport { ReactComponent as EyeIcon } from \"../assets/images/EyeIcon.svg\";\nimport { ReactComponent as EyeIconUnhide } from \"../assets/images/EyeIconUnhide.svg\";\nimport { ReactComponent as WarningIcon } from \"../assets/images/WarningIcon.svg\";\nimport { ReactComponent as IconTimer } from \"../assets/images/icon-staking-timer.svg\";\nimport { ReactComponent as LockIcon } from \"../assets/images/LockIcon.svg\";\n// import { ConnectDialog } from \"../dialogs/ConnectDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { CasperServiceByJsonRPC, CLPublicKey, CLValue, \n  CLValueBuilder, \n  decodeBase16, \n  DeployUtil, RuntimeArgs, Signer } from \"casper-js-sdk\";\nimport { connectWallet as connectWalletDispatch } from '../redux/casper/casperActions';\nimport { getStakingInfo } from \"../utils/DateUtil\";\n\nconst RPC_API = \"http://44.208.234.65:7777/rpc\";\n\nconst casperService = new CasperServiceByJsonRPC(RPC_API);\n\nconst StakingCard = () => {\n  const { stakingId }: any = useParams();\n  console.log(stakingId);\n  // const maturityInfo = getMaturityInfo();\n  const dispatch = useDispatch();\n  const navigate = useHistory();\n  const [showAddress, setShowAddress] = useState<boolean>(false);\n  const isWalletConnected = false;\n  const connection = useSelector((state: any) => state.casper.connect)\n\n  const connectWallet = async () => {\n    await window.casperlabsHelper.requestConnection()\n\n    const isConnected = await window.casperlabsHelper.isConnected();\n\n    if (isConnected) {\n      await AccountInformation();\n    }   \n  };\n\n  async function AccountInformation() {\n    const isConnected = await window.casperlabsHelper.isConnected();\n    console.log(isConnected, 'isConnectedisConnected')\n    if (isConnected) {\n        const publicKey = await window.casperlabsHelper.getActivePublicKey();\n        console.log(publicKey);\n        //textAddress.textContent += publicKey;\n\n        const latestBlock = await casperService.getLatestBlockInfo();\n        console.log(latestBlock);\n\n        const root = await casperService.getStateRootHash(latestBlock?.block?.hash);\n        console.log(latestBlock, root)\n\n        await connectWalletDispatch([{\n          \"address\": publicKey\n        }])(dispatch)\n        const balanceUref = await casperService.getAccountBalanceUrefByPublicKey(root, CLPublicKey.fromHex(publicKey));\n        console.log(balanceUref)\n        \n        // @ts-ignore\n        const balance = await casperService.getAccountBalance(latestBlock?.block?.header?.state_root_hash, balanceUref);\n        console.log(balance.toString())\n        //textBalance.textContent = `PublicKeyHex ${balance.toString()}`;\n    }\n  }\n\n  const stakingInfo = getStakingInfo( \n    connection?.connect?.stakingEnds,\n    connection?.connect?.stakingStarts,\n    connection?.connect?.withdrawStarts,\n    connection?.connect?.withdrawEnds\n  );\n\n  const isAddressSigned = () => {\n    if (connection?.selectedAccount?.address) {\n      const isSigned = connection.signedAddresses?.find(\n        (e: any) => e.signer === connection?.selectedAccount?.address\n      )\n\n      return !!isSigned\n    }\n    return false; \n  };\n\n  const signIt = async () => {\n    const publicKeyHex = connection?.selectedAccount?.address;\n    const senderPublicKey = CLPublicKey.fromHex(publicKeyHex);\n\n    const deployParams = new DeployUtil.DeployParams(\n      senderPublicKey,\n      'casper-test'\n    );\n\n    const args = RuntimeArgs.fromMap({\n      \"spender\": CLValueBuilder.string('ee07324ad466aad373e94f787b3dbf1ba1ff00175e97a0bce002bb45737ad5e6'),\n    });\n\n    const session = DeployUtil.ExecutableDeployItem.newStoredContractByHash(\n      decodeBase16('6adb2902bf7c56116ead7ea7a2ffa269b8d4b117b632d2c44052f3c951dcaa0b'),\n      'approve',\n      args\n    );\n\n    const payment = DeployUtil.standardPayment(10000000000000);\n\n    const deploy = DeployUtil.makeDeploy(deployParams, session, payment);\n\n    const deployJson: any = DeployUtil.deployToJson(deploy);\n  \n    Signer.sign(deployJson, publicKeyHex).then((signedDeployJson) => {\n      const signedDeploy = DeployUtil.deployFromJson(signedDeployJson);\n      console.log(signedDeploy)\n      if (signedDeploy.ok) {\n        return casperService.deploy(signedDeploy.val).then((res) => {\n          return res;\n        });\n      }\n     \n    });\n  };\n\n  return (\n    <React.Fragment>\n      <FCard className={\"card-connect f-mb-2\"}>\n        <FItem display={\"flex\"} className=\"f-mb-2\">\n          <FItem bgColor=\"#1F2128\" size={70} className=\"f-p--8 f-mr-1\" display={\"flex\"} alignX=\"center\" alignY={\"center\"}>\n            <BrandIcon />\n          </FItem>\n          <FItem className={\"f-ml-1\"}>\n            <FTypo size={24} color=\"white\" className={\"f-mt--4\"}>\n              Title Pool\n            </FTypo>\n            <FTypo size={12} color=\"white\">\n              POOL TYPE\n            </FTypo>\n          </FItem>\n        </FItem>\n        {/* <FTypo className={\"f-mb-4\"} color=\"white\" size={16}>\n          CONNECTED TO ETHEREUM NETWORK\n        </FTypo> */}\n\n        {!stakingInfo.isStakingOpen && stakingInfo.stakingOpensIn && (\n          <FTypo className={\"f-mb-3\"} color=\"white\" size={22} weight={600} display=\"flex\" alignX={\"center\"} alignY=\"center\">\n            <IconTimer className=\"f-mr-1\" /> Staking Opens in {stakingInfo.stakingOpensIn}\n          </FTypo>\n        )}  \n        {isWalletConnected && <FInputText className={\"f-mt-2 f-mb-2\"} label={\"YOUR ADDRESS\"} disabled={true} value={''} />}\n        <FItem className=\"f-mt-2 f-mb-1\" display={\"flex\"} alignX={\"between\"} alignY=\"center\">\n          <FTypo weight={600}>CONTRACT ADDRESS</FTypo>\n          {showAddress ? <EyeIconUnhide width={50} onClick={() => setShowAddress(false)} /> : <EyeIcon width={50} onClick={() => setShowAddress(true)} />}\n        </FItem>\n        {showAddress ? <FInputText className={\"f-mb-2\"} type=\"text\" disabled={true} value={connection?.selectedAccount?.address || ''} /> : null}\n        {showAddress ? (\n          <FItem display={\"flex\"} className={\"f-p--8\"} bgColor=\" rgba(255, 255, 255, 0.25\" alignY={\"center\"}>\n            <WarningIcon width={40} />\n            <FTypo className={\"f-pl-1 f-pr-1\"} size={15} weight={600}>\n              NEVER SEND TOKENS TO THE CONTRACT, THEY WILL BE LOCKED FOREVER. ONLY USE THIS UI TO STAKE.\n            </FTypo>\n          </FItem>\n        ) : null}\n\n        {!connection.isWalletConnected ? (\n          <FButton title={\"Connect\"} className=\"w-100 f-mt-2\" onClick={() => connectWallet()} />\n        ) : (\n          <>\n            {isAddressSigned() ? (\n              <>\n                <FButton\n                  title={stakingInfo.isStakingOpen ? \"Stake\" : stakingInfo.isEarlyWithdraw ? \"Early Withdraw\" : stakingInfo.isWithdrawOpen ? \"Maturity Withdraw\" : \"Refresh\"}\n                  className=\"w-100 f-mt-2\"\n                  onClick={() => {\n                    // console.log(\"staking\");\n                    // dispatch(algorandActions.shouldStake());\n                    if (getStakingInfo(connection?.connect?.stakingEnds, connection?.connect?.stakingStarts, connection?.connect?.withdrawStarts, connection?.connect?.withdrawEnds).isStakingOpen) {\n                      navigate.push(`/${stakingId}/submit-stake`);\n                    } else if (\n                      getStakingInfo(connection?.connect?.stakingEnds, connection?.connect?.stakingStarts, connection?.connect?.withdrawStarts, connection?.connect?.withdrawEnds).isEarlyWithdraw ||\n                      getStakingInfo(connection?.connect?.stakingEnds, connection?.connect?.stakingStarts, connection?.connect?.withdrawStarts, connection?.connect?.withdrawEnds).isWithdrawOpen\n                    ) {\n                      navigate.push(`/${stakingId}/submit-withdraw`);\n                    } else {\n                      window.location.reload();\n                    }\n                  }}\n                />\n              </>\n            ) : (\n              <FButton title={\"Sign\"} className=\"w-100 f-mt-2\" onClick={() => signIt()} />\n            )}\n          </>\n        )}\n        {/* <FResponseBar\n          variant=\"error\"\n          title=\"Could send a sign request. Not enough balance.\"\n          className=\"f-mb-0\"\n          show={true}\n        ></FResponseBar> */}\n        {stakingInfo.isLockPeriod && (\n          <FItem className={\"f-mt-2 \"}>\n            <FItem bgColor=\"#1F2128\" className={\"f-p--8 w-100\"} display={\"flex\"} alignX=\"center\" alignY=\"center\">\n              <LockIcon className={\"f-mr-1\"} />\n              <FItem display=\"flex\">\n                <FTypo weight={600} size={20} display=\"inline-block\">\n                  Lock Period\n                </FTypo>\n                <FTypo color=\"#dab46e\" weight={600} size={20} className={\"f-pl--5\"} display=\"inline-block\">\n                  {stakingInfo.lockPeriod}\n                </FTypo>\n              </FItem>\n            </FItem>\n          </FItem>\n        )}\n      </FCard>\n    </React.Fragment>\n  );\n};\n\nexport default StakingCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}