"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FGridItem = exports.FGrid = void 0;
const react_1 = __importStar(require("react"));
var itemSpacing = 15;
const FGrid = ({ layout = "grid", spacing, className, children }) => {
    (0, react_1.useEffect)(() => {
        if (spacing !== null && spacing !== undefined) {
            itemSpacing = spacing === 0 ? 0 : spacing;
        }
    }, [spacing]);
    return (react_1.default.createElement("div", { className: `f-grid f-layout-${layout} ${className}`, style: { marginRight: `-${itemSpacing}px`, marginLeft: `-${itemSpacing}px` } }, children));
};
exports.FGrid = FGrid;
const FGridItem = ({ size = [12, 12, 12], alignX = "", alignY = "", className = "", style, dir, children = undefined }) => {
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { className: `f-grid-item ${size && size.length === 1
                ? `f-grid-item-lg-${size[0]}`
                : size.length === 2
                    ? `f-grid-item-lg-${size[0]} f-grid-item-md-${size[1]}`
                    : size.length === 3
                        ? `f-grid-item-lg-${size[0]} f-grid-item-md-${size[1]} f-grid-item-sm-${size[2]}`
                        : ""} jc jc-${alignX} ai ai-${alignY} ${className} dir-${dir ? dir : ""}`, style: style
                ? Object.assign(Object.assign({}, style), { paddingLeft: `${itemSpacing}px`, paddingRight: `${itemSpacing}px` }) : { paddingLeft: `${itemSpacing}px`, paddingRight: `${itemSpacing}px` } }, children)));
};
exports.FGridItem = FGridItem;
//# sourceMappingURL=Fgrid.js.map