"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FSiderItem = void 0;
const react_1 = __importStar(require("react"));
const react_router_dom_1 = require("react-router-dom");
const icon_arrow_light_svg_1 = __importDefault(require("../../../assets/images/f-icons/icon-arrow-light.svg"));
const ri_1 = require("react-icons/ri");
const FSiderItem = ({ title = "Menu Item", to = "/#", target = "_self", className = "", prefix, postfix, children = undefined, }) => {
    const location = (0, react_router_dom_1.useLocation)();
    const history = (0, react_router_dom_1.useHistory)();
    const [subMenu, setSubMenu] = (0, react_1.useState)(false);
    const submenuRef = (0, react_1.useRef)();
    const submenuTogglerRef = (0, react_1.useRef)();
    const siderCollapsed = document.getElementsByClassName("sider-collapsed");
    const siderExpanded = document.getElementsByClassName("sider-expanded");
    (0, react_1.useEffect)(() => {
        document.addEventListener("click", (event) => {
            var _a, _b;
            event.stopPropagation();
            if (siderCollapsed && !((_a = submenuRef === null || submenuRef === void 0 ? void 0 : submenuRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.target))) {
                setSubMenu(false);
            }
            else if (siderExpanded && ((_b = submenuRef === null || submenuRef === void 0 ? void 0 : submenuRef.current) === null || _b === void 0 ? void 0 : _b.contains(event.target))) {
                setSubMenu(!subMenu);
            }
        });
    }, []);
    const openInNewTab = (url) => {
        const newWindow = window.open(url, "_blank", "noopener,noreferrer");
        if (newWindow)
            newWindow.opener = null;
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { ref: submenuRef, className: `f-sider-item ${children ? "has-child" : ""} ${subMenu ? "submenu-open" : ""} ${className} ${location.pathname.split("/").join("") === title.toLowerCase()
                ? "active"
                : ""} ` },
            react_1.default.createElement(react_router_dom_1.Link, { className: "f-item-link", ref: submenuTogglerRef, to: "#", onClick: (e) => {
                    e.preventDefault();
                    target === "_blank"
                        ? openInNewTab(to)
                        : children
                            ? setSubMenu(!subMenu)
                            : history.push(to);
                } },
                prefix ? (react_1.default.createElement("span", { className: "f-item-icon" }, prefix)) : (react_1.default.createElement("span", { className: "f-item-icon" },
                    react_1.default.createElement(ri_1.RiCheckboxBlankCircleFill, null))),
                react_1.default.createElement("span", { className: "f-item-text" }, title),
                postfix || children ? (react_1.default.createElement("span", { className: "f-item-icon " }, children ? (react_1.default.createElement("img", { src: icon_arrow_light_svg_1.default, alt: "f-icon" })) : (react_1.default.createElement("div", null,
                    " ",
                    postfix)))) : ("")),
            children)));
};
exports.FSiderItem = FSiderItem;
//# sourceMappingURL=FsiderItem.js.map