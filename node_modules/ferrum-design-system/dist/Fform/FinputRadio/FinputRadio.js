"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FInputRadio = void 0;
const react_1 = __importDefault(require("react"));
const FInputRadio = (_a) => {
    var { label = "", name = label.toLowerCase().split(" ").join(""), id = name, type = "radio", display = "block", className = "", onChange = () => { }, onClick = () => { }, validations, register, required, error, disabled = false, readonly = false } = _a, otherProps = __rest(_a, ["label", "name", "id", "type", "display", "className", "onChange", "onClick", "validations", "register", "required", "error", "disabled", "readonly"]);
    return (react_1.default.createElement("div", { className: `f-input-radio-group f-input-${display} ${className}` },
        react_1.default.createElement("div", { className: "f-input-radio" },
            react_1.default.createElement("input", Object.assign({ type: `${type}`, id: id, name: `${name}`, onChange: onChange, onClick: onChange }, (register
                ? register(name, Object.assign({}, validations))
                : { onChange: onChange, onClick: onClick }), { disabled: disabled, readOnly: readonly }, otherProps)),
            react_1.default.createElement("label", { htmlFor: id }, label)),
        error && (react_1.default.createElement("p", { className: `${error ? "input-validation-error" : ""}` }, error ? error : undefined))));
};
exports.FInputRadio = FInputRadio;
//# sourceMappingURL=FinputRadio.js.map