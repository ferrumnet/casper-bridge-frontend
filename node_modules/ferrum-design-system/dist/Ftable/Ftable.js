"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FTable = void 0;
const react_1 = __importStar(require("react"));
const react_perfect_scrollbar_1 = __importDefault(require("react-perfect-scrollbar"));
require("react-perfect-scrollbar/dist/css/styles.css");
const FTable = ({ className = "", variant = "primary", children = undefined }) => {
    const [headerFixed, setHeaderFixed] = (0, react_1.useState)(false);
    const scrollRef = (0, react_1.useRef)(null);
    return (react_1.default.createElement(react_1.default.Fragment, null, children && (react_1.default.createElement("div", { className: `f-table-wrapper ${variant.includes("futuristic") && "f-table-futuristic-wrapper"} ${variant === 'whiteLabeled' && 'f-table-whiteLabeled-wrapper'}` },
        react_1.default.createElement(react_perfect_scrollbar_1.default, { onScroll: (e) => (e.target.scrollTop > 50 ? setHeaderFixed(true) : setHeaderFixed(false)) },
            react_1.default.createElement("div", { className: `f-table f-table-${variant} ${headerFixed && !variant.includes("futuristic") ? "sticky-header" : ""} ${className}` },
                react_1.default.createElement("div", { ref: scrollRef }),
                children))))));
};
exports.FTable = FTable;
//# sourceMappingURL=Ftable.js.map